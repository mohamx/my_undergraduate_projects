Version 3.2 HI-TECH Software Intermediate Code
"39 ring_buffer.c
[s S3 `ui 1 `ui 1 `*uc 1 `Vui 1 `Vui 1 ]
[n S3 ring_buffer s_elem n_elem buf head tail ]
"51 ring_buffer.h
[s S1 `ui 1 `ui 1 `*v 1 ]
[n S1 . s_elem n_elem buffer ]
"50 ring_buffer.c
[v __ring_buffer_full `(i ~T0 @X0 0 sf1`*S3 ]
"14 F:\Installed Programs\MCUs\Microchip\xc8\include\string.h
[v _memcpy `(*v ~T0 @X0 0 ef3`*v`*Cv`ui ]
"51 ring_buffer.c
[v __ring_buffer_empty `(i ~T0 @X0 0 sf1`*S3 ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stddef.h: 6: typedef int ptrdiff_t;
[; ;ring_buffer.h: 48: typedef unsigned int rbd_t;
[; ;ring_buffer.h: 51: typedef struct {
[; ;ring_buffer.h: 52: size_t s_elem;
[; ;ring_buffer.h: 53: size_t n_elem;
[; ;ring_buffer.h: 54: void *buffer;
[; ;ring_buffer.h: 55: } rb_attr_t;
[; ;ring_buffer.h: 67: int ring_buffer_init(rbd_t *rbd, rb_attr_t *attr);
[; ;ring_buffer.h: 75: int ring_buffer_put(rbd_t rbd, const void *data);
[; ;ring_buffer.h: 83: int ring_buffer_get(rbd_t rbd, void *data);
[; ;ring_buffer.h: 91: int ring_buffer_peek(rbd_t rbd, void *data);
[; ;ring_buffer.h: 93: int ring_buffer_dequeue(rbd_t rbd);
[; ;ring_buffer.h: 95: int ring_buffer_put_char(rbd_t rbd ,const unsigned char character);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 34: extern char * strcat(char *, const char *);
[; ;string.h: 35: extern char * strcpy(char *, const char *);
[; ;string.h: 36: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 37: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 38: extern char * strdup(const char *);
[; ;string.h: 39: extern char * strtok(char *, const char *);
[; ;string.h: 42: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 43: extern int strcmp(const char *, const char *);
[; ;string.h: 44: extern int stricmp(const char *, const char *);
[; ;string.h: 45: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 46: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 47: extern void * memchr(const void *, int, size_t);
[; ;string.h: 48: extern size_t strcspn(const char *, const char *);
[; ;string.h: 49: extern char * strpbrk(const char *, const char *);
[; ;string.h: 50: extern size_t strspn(const char *, const char *);
[; ;string.h: 51: extern char * strstr(const char *, const char *);
[; ;string.h: 52: extern char * stristr(const char *, const char *);
[; ;string.h: 53: extern char * strerror(int);
[; ;string.h: 54: extern size_t strlen(const char *);
[; ;string.h: 55: extern char * strchr(const char *, int);
[; ;string.h: 56: extern char * strichr(const char *, int);
[; ;string.h: 57: extern char * strrchr(const char *, int);
[; ;string.h: 58: extern char * strrichr(const char *, int);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;ring_buffer.c: 39: struct ring_buffer
[; ;ring_buffer.c: 40: {
[; ;ring_buffer.c: 41: size_t s_elem;
[; ;ring_buffer.c: 42: size_t n_elem;
[; ;ring_buffer.c: 43: uint8_t *buf;
[; ;ring_buffer.c: 44: volatile size_t head;
[; ;ring_buffer.c: 45: volatile size_t tail;
[; ;ring_buffer.c: 46: };
"48 ring_buffer.c
[v __rb `S3 ~T0 @X0 -> -> 1 `i `ux s ]
[; ;ring_buffer.c: 48: static struct ring_buffer _rb[1];
[; ;ring_buffer.c: 50: static int _ring_buffer_full(struct ring_buffer *rb);
[; ;ring_buffer.c: 51: static int _ring_buffer_empty(struct ring_buffer *rb);
"63
[v _ring_buffer_init `(i ~T0 @X0 1 ef2`*ui`*S1 ]
"64
{
[; ;ring_buffer.c: 63: int ring_buffer_init(rbd_t *rbd, rb_attr_t *attr)
[; ;ring_buffer.c: 64: {
[e :U _ring_buffer_init ]
"63
[v _rbd `*ui ~T0 @X0 1 r1 ]
[v _attr `*S1 ~T0 @X0 1 r2 ]
"64
[f ]
"65
[v F212 `i ~T0 @X0 1 s idx ]
[i F212
-> 0 `i
]
"66
[v _err `i ~T0 @X0 1 a ]
[; ;ring_buffer.c: 65: static int idx = 0;
[; ;ring_buffer.c: 66: int err = -1;
[e = _err -U -> 1 `i ]
[; ;ring_buffer.c: 68: if ((idx < 1) && (rbd != (0)) && (attr != (0))) {
"68
[e $ ! && && < F212 -> 1 `i != _rbd -> -> 0 `i `*ui != _attr -> -> 0 `i `*S1 5  ]
{
[; ;ring_buffer.c: 69: if ((attr->buffer != (0)) && (attr->s_elem > 0)) {
"69
[e $ ! && != . *U _attr 2 -> -> 0 `i `*v > . *U _attr 0 -> -> 0 `i `ui 6  ]
{
[; ;ring_buffer.c: 71: if (((attr->n_elem - 1) & attr->n_elem) == 0) {
"71
[e $ ! == & - . *U _attr 1 -> -> 1 `i `ui . *U _attr 1 -> -> 0 `i `ui 7  ]
{
[; ;ring_buffer.c: 73: _rb[idx].head = 0;
"73
[e = . *U + &U __rb * -> -> F212 `ui `ux -> -> # *U &U __rb `ui `ux 3 -> -> 0 `i `ui ]
[; ;ring_buffer.c: 74: _rb[idx].tail = 0;
"74
[e = . *U + &U __rb * -> -> F212 `ui `ux -> -> # *U &U __rb `ui `ux 4 -> -> 0 `i `ui ]
[; ;ring_buffer.c: 75: _rb[idx].buf = attr->buffer;
"75
[e = . *U + &U __rb * -> -> F212 `ui `ux -> -> # *U &U __rb `ui `ux 2 -> . *U _attr 2 `*uc ]
[; ;ring_buffer.c: 76: _rb[idx].s_elem = attr->s_elem;
"76
[e = . *U + &U __rb * -> -> F212 `ui `ux -> -> # *U &U __rb `ui `ux 0 . *U _attr 0 ]
[; ;ring_buffer.c: 77: _rb[idx].n_elem = attr->n_elem;
"77
[e = . *U + &U __rb * -> -> F212 `ui `ux -> -> # *U &U __rb `ui `ux 1 . *U _attr 1 ]
[; ;ring_buffer.c: 79: *rbd = idx++;
"79
[e = *U _rbd -> ++ F212 -> 1 `i `ui ]
[; ;ring_buffer.c: 80: err= 0;
"80
[e = _err -> 0 `i ]
"81
}
[e :U 7 ]
"82
}
[e :U 6 ]
"83
}
[e :U 5 ]
[; ;ring_buffer.c: 81: }
[; ;ring_buffer.c: 82: }
[; ;ring_buffer.c: 83: }
[; ;ring_buffer.c: 85: return err;
"85
[e ) _err ]
[e $UE 4  ]
[; ;ring_buffer.c: 86: }
"86
[e :UE 4 ]
}
"94
[v _ring_buffer_put `(i ~T0 @X0 1 ef2`ui`*Cv ]
"95
{
[; ;ring_buffer.c: 94: int ring_buffer_put(rbd_t rbd, const void *data)
[; ;ring_buffer.c: 95: {
[e :U _ring_buffer_put ]
"94
[v _rbd `ui ~T0 @X0 1 r1 ]
[v _data `*Cv ~T0 @X0 1 r2 ]
"95
[f ]
"96
[v _err `i ~T0 @X0 1 a ]
[; ;ring_buffer.c: 96: int err = 0;
[e = _err -> 0 `i ]
[; ;ring_buffer.c: 98: if ((rbd < 1) && (_ring_buffer_full(&_rb[rbd]) == 0)) {
"98
[e $ ! && < _rbd -> -> 1 `i `ui == ( __ring_buffer_full (1 &U *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux -> 0 `i 9  ]
{
"99
[v _offset `Cui ~T0 @X0 1 a ]
[; ;ring_buffer.c: 99: const size_t offset = (_rb[rbd].head & (_rb[rbd].n_elem - 1)) * _rb[rbd].s_elem;
[e = _offset * & . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 3 - . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 1 -> -> 1 `i `ui . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 0 ]
[; ;ring_buffer.c: 100: memcpy(&(_rb[rbd].buf[offset]), data, _rb[rbd].s_elem);
"100
[e ( _memcpy (3 , , -> &U *U + . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 2 * -> _offset `ux -> -> # *U . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 2 `ui `ux `*v _data . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 0 ]
[; ;ring_buffer.c: 101: _rb[rbd].head++;
"101
[e ++ . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 3 -> -> 1 `i `ui ]
"102
}
[; ;ring_buffer.c: 102: } else {
[e $U 10  ]
[e :U 9 ]
{
[; ;ring_buffer.c: 103: err = -1;
"103
[e = _err -U -> 1 `i ]
"104
}
[e :U 10 ]
[; ;ring_buffer.c: 104: }
[; ;ring_buffer.c: 106: return err;
"106
[e ) _err ]
[e $UE 8  ]
[; ;ring_buffer.c: 107: }
"107
[e :UE 8 ]
}
"115
[v _ring_buffer_get `(i ~T0 @X0 1 ef2`ui`*v ]
"116
{
[; ;ring_buffer.c: 115: int ring_buffer_get(rbd_t rbd, void *data)
[; ;ring_buffer.c: 116: {
[e :U _ring_buffer_get ]
"115
[v _rbd `ui ~T0 @X0 1 r1 ]
[v _data `*v ~T0 @X0 1 r2 ]
"116
[f ]
"117
[v _err `i ~T0 @X0 1 a ]
[; ;ring_buffer.c: 117: int err = 0;
[e = _err -> 0 `i ]
[; ;ring_buffer.c: 119: if ((rbd < 1) && (_ring_buffer_empty(&_rb[rbd]) == 0)) {
"119
[e $ ! && < _rbd -> -> 1 `i `ui == ( __ring_buffer_empty (1 &U *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux -> 0 `i 12  ]
{
"120
[v _offset `Cui ~T0 @X0 1 a ]
[; ;ring_buffer.c: 120: const size_t offset = (_rb[rbd].tail & (_rb[rbd].n_elem - 1)) * _rb[rbd].s_elem;
[e = _offset * & . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 4 - . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 1 -> -> 1 `i `ui . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 0 ]
[; ;ring_buffer.c: 121: memcpy(data, &(_rb[rbd].buf[offset]), _rb[rbd].s_elem);
"121
[e ( _memcpy (3 , , _data -> &U *U + . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 2 * -> _offset `ux -> -> # *U . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 2 `ui `ux `*Cv . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 0 ]
[; ;ring_buffer.c: 122: _rb[rbd].tail++;
"122
[e ++ . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 4 -> -> 1 `i `ui ]
"123
}
[; ;ring_buffer.c: 123: } else {
[e $U 13  ]
[e :U 12 ]
{
[; ;ring_buffer.c: 124: err = -1;
"124
[e = _err -U -> 1 `i ]
"125
}
[e :U 13 ]
[; ;ring_buffer.c: 125: }
[; ;ring_buffer.c: 127: return err;
"127
[e ) _err ]
[e $UE 11  ]
[; ;ring_buffer.c: 128: }
"128
[e :UE 11 ]
}
"130
[v __ring_buffer_full `(i ~T0 @X0 1 sf1`*S3 ]
"131
{
[; ;ring_buffer.c: 130: static int _ring_buffer_full(struct ring_buffer *rb)
[; ;ring_buffer.c: 131: {
[e :U __ring_buffer_full ]
"130
[v _rb `*S3 ~T0 @X0 1 r1 ]
"131
[f ]
[; ;ring_buffer.c: 132: return ((rb->head - rb->tail) == rb->n_elem) ? 1 : 0;
"132
[e ) ? == - . *U _rb 3 . *U _rb 4 . *U _rb 1 : -> 1 `i -> 0 `i ]
[e $UE 14  ]
[; ;ring_buffer.c: 133: }
"133
[e :UE 14 ]
}
"135
[v __ring_buffer_empty `(i ~T0 @X0 1 sf1`*S3 ]
"136
{
[; ;ring_buffer.c: 135: static int _ring_buffer_empty(struct ring_buffer *rb)
[; ;ring_buffer.c: 136: {
[e :U __ring_buffer_empty ]
"135
[v _rb `*S3 ~T0 @X0 1 r1 ]
"136
[f ]
[; ;ring_buffer.c: 137: return ((rb->head - rb->tail) == 0U) ? 1 : 0;
"137
[e ) ? == - . *U _rb 3 . *U _rb 4 -> 0 `ui : -> 1 `i -> 0 `i ]
[e $UE 15  ]
[; ;ring_buffer.c: 138: }
"138
[e :UE 15 ]
}
"146
[v _ring_buffer_peek `(i ~T0 @X0 1 ef2`ui`*v ]
"147
{
[; ;ring_buffer.c: 146: int ring_buffer_peek(rbd_t rbd, void *data)
[; ;ring_buffer.c: 147: {
[e :U _ring_buffer_peek ]
"146
[v _rbd `ui ~T0 @X0 1 r1 ]
[v _data `*v ~T0 @X0 1 r2 ]
"147
[f ]
"148
[v _err `i ~T0 @X0 1 a ]
[; ;ring_buffer.c: 148: int err = 0;
[e = _err -> 0 `i ]
[; ;ring_buffer.c: 150: if ((rbd < 1) && (_ring_buffer_empty(&_rb[rbd]) == 0)) {
"150
[e $ ! && < _rbd -> -> 1 `i `ui == ( __ring_buffer_empty (1 &U *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux -> 0 `i 17  ]
{
"151
[v _offset `Cui ~T0 @X0 1 a ]
[; ;ring_buffer.c: 151: const size_t offset = (_rb[rbd].tail & (_rb[rbd].n_elem - 1)) * _rb[rbd].s_elem;
[e = _offset * & . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 4 - . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 1 -> -> 1 `i `ui . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 0 ]
[; ;ring_buffer.c: 152: memcpy(data, &(_rb[rbd].buf[offset]), _rb[rbd].s_elem);
"152
[e ( _memcpy (3 , , _data -> &U *U + . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 2 * -> _offset `ux -> -> # *U . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 2 `ui `ux `*Cv . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 0 ]
"154
}
[; ;ring_buffer.c: 154: } else {
[e $U 18  ]
[e :U 17 ]
{
[; ;ring_buffer.c: 155: err = -1;
"155
[e = _err -U -> 1 `i ]
"156
}
[e :U 18 ]
[; ;ring_buffer.c: 156: }
[; ;ring_buffer.c: 158: return err;
"158
[e ) _err ]
[e $UE 16  ]
[; ;ring_buffer.c: 159: }
"159
[e :UE 16 ]
}
"161
[v _ring_buffer_dequeue `(i ~T0 @X0 1 ef1`ui ]
"162
{
[; ;ring_buffer.c: 161: int ring_buffer_dequeue(rbd_t rbd)
[; ;ring_buffer.c: 162: {
[e :U _ring_buffer_dequeue ]
"161
[v _rbd `ui ~T0 @X0 1 r1 ]
"162
[f ]
"163
[v _err `i ~T0 @X0 1 a ]
[; ;ring_buffer.c: 163: int err = 0;
[e = _err -> 0 `i ]
[; ;ring_buffer.c: 165: if ((rbd < 1) && (_ring_buffer_empty(&_rb[rbd]) == 0)) {
"165
[e $ ! && < _rbd -> -> 1 `i `ui == ( __ring_buffer_empty (1 &U *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux -> 0 `i 20  ]
{
[; ;ring_buffer.c: 168: _rb[rbd].tail++;
"168
[e ++ . *U + &U __rb * -> _rbd `ux -> -> # *U &U __rb `ui `ux 4 -> -> 1 `i `ui ]
"169
}
[; ;ring_buffer.c: 169: } else {
[e $U 21  ]
[e :U 20 ]
{
[; ;ring_buffer.c: 170: err = -1;
"170
[e = _err -U -> 1 `i ]
"171
}
[e :U 21 ]
[; ;ring_buffer.c: 171: }
[; ;ring_buffer.c: 173: return err;
"173
[e ) _err ]
[e $UE 19  ]
[; ;ring_buffer.c: 174: }
"174
[e :UE 19 ]
}
"176
[v _ring_buffer_put_char `(i ~T0 @X0 1 ef2`ui`Cuc ]
"177
{
[; ;ring_buffer.c: 176: int ring_buffer_put_char(rbd_t rbd ,unsigned char character)
[; ;ring_buffer.c: 177: {
[e :U _ring_buffer_put_char ]
"176
[v _rbd `ui ~T0 @X0 1 r1 ]
[v _character `uc ~T0 @X0 1 r2 ]
"177
[f ]
[; ;ring_buffer.c: 178: return ring_buffer_put(rbd,&character);
"178
[e ) ( _ring_buffer_put (2 , _rbd -> &U _character `*Cv ]
[e $UE 22  ]
[; ;ring_buffer.c: 179: }
"179
[e :UE 22 ]
}



Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Sep 26 02:54:19 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4620 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	smallconst
    51  001000                     __psmallconst:
    52                           	opt stack 0
    53  001000  00                 	db	0
    54  001001                     _Seq_Operate_State_2:
    55                           	opt stack 0
    56  001001  00                 	db	0
    57  001002  01                 	db	1
    58  001003  01                 	db	1
    59  001004  01                 	db	1
    60  001005  01                 	db	1
    61  001006  01                 	db	1
    62  001007  0B                 	db	low (_Seq_Operate_State_2+10)
    63  001008  10                 	db	high (_Seq_Operate_State_2+10)
    64  001009  01                 	db	low _Seq_Operate_State_2
    65  00100A  10                 	db	high _Seq_Operate_State_2
    66  00100B  01                 	db	1
    67  00100C  00                 	db	0
    68  00100D  01                 	db	1
    69  00100E  01                 	db	1
    70  00100F  01                 	db	1
    71  001010  01                 	db	1
    72  001011  15                 	db	low (_Seq_Operate_State_2+20)
    73  001012  10                 	db	high (_Seq_Operate_State_2+20)
    74  001013  01                 	db	low _Seq_Operate_State_2
    75  001014  10                 	db	high _Seq_Operate_State_2
    76  001015  01                 	db	1
    77  001016  01                 	db	1
    78  001017  00                 	db	0
    79  001018  01                 	db	1
    80  001019  01                 	db	1
    81  00101A  01                 	db	1
    82  00101B  1F                 	db	low (_Seq_Operate_State_2+30)
    83  00101C  10                 	db	high (_Seq_Operate_State_2+30)
    84  00101D  0B                 	db	low (_Seq_Operate_State_2+10)
    85  00101E  10                 	db	high (_Seq_Operate_State_2+10)
    86  00101F  01                 	db	1
    87  001020  01                 	db	1
    88  001021  01                 	db	1
    89  001022  00                 	db	0
    90  001023  01                 	db	1
    91  001024  01                 	db	1
    92  001025  29                 	db	low (_Seq_Operate_State_2+40)
    93  001026  10                 	db	high (_Seq_Operate_State_2+40)
    94  001027  15                 	db	low (_Seq_Operate_State_2+20)
    95  001028  10                 	db	high (_Seq_Operate_State_2+20)
    96  001029  01                 	db	1
    97  00102A  01                 	db	1
    98  00102B  01                 	db	1
    99  00102C  01                 	db	1
   100  00102D  00                 	db	0
   101  00102E  01                 	db	1
   102  00102F  33                 	db	low (_Seq_Operate_State_2+50)
   103  001030  10                 	db	high (_Seq_Operate_State_2+50)
   104  001031  1F                 	db	low (_Seq_Operate_State_2+30)
   105  001032  10                 	db	high (_Seq_Operate_State_2+30)
   106  001033  01                 	db	1
   107  001034  01                 	db	1
   108  001035  01                 	db	1
   109  001036  01                 	db	1
   110  001037  01                 	db	1
   111  001038  00                 	db	0
   112  001039  33                 	db	low (_Seq_Operate_State_2+50)
   113  00103A  10                 	db	high (_Seq_Operate_State_2+50)
   114  00103B  29                 	db	low (_Seq_Operate_State_2+40)
   115  00103C  10                 	db	high (_Seq_Operate_State_2+40)
   116  00103D                     __end_of_Seq_Operate_State_2:
   117                           	opt stack 0
   118  00103D                     _Seq_Operate_State:
   119                           	opt stack 0
   120  00103D  00                 	db	0
   121  00103E  01                 	db	1
   122  00103F  01                 	db	1
   123  001040  44                 	db	low (_Seq_Operate_State+7)
   124  001041  10                 	db	high (_Seq_Operate_State+7)
   125  001042  3D                 	db	low _Seq_Operate_State
   126  001043  10                 	db	high _Seq_Operate_State
   127  001044  01                 	db	1
   128  001045  00                 	db	0
   129  001046  01                 	db	1
   130  001047  4B                 	db	low (_Seq_Operate_State+14)
   131  001048  10                 	db	high (_Seq_Operate_State+14)
   132  001049  3D                 	db	low _Seq_Operate_State
   133  00104A  10                 	db	high _Seq_Operate_State
   134  00104B  01                 	db	1
   135  00104C  01                 	db	1
   136  00104D  00                 	db	0
   137  00104E  4B                 	db	low (_Seq_Operate_State+14)
   138  00104F  10                 	db	high (_Seq_Operate_State+14)
   139  001050  44                 	db	low (_Seq_Operate_State+7)
   140  001051  10                 	db	high (_Seq_Operate_State+7)
   141  001052                     __end_of_Seq_Operate_State:
   142                           	opt stack 0
   143  001052  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           	psect	nvCOMRAM
   146  000001                     __pnvCOMRAM:
   147                           	opt stack 0
   148  000001                     _psCurrentStatePtr_2:
   149                           	opt stack 0
   150  000001                     	ds	3
   151  000004                     _psCurrentStatePtr:
   152                           	opt stack 0
   153  000004                     	ds	3
   154  0000                     _PORTBbits	set	3969
   155  0000                     _PORTEbits	set	3972
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TRISA	set	3986
   158  0000                     _ADCON1	set	4033
   159  0000                     _PORTCbits	set	3970
   160  0000                     _TRISE2	set	31922
   161  0000                     _TRISE1	set	31921
   162  0000                     _TRISE0	set	31920
   163  0000                     _TRISA5	set	31893
   164  0000                     _TRISA4	set	31892
   165  0000                     _TRISA1	set	31889
   166  0000                     _CVROE	set	32174
   167  0000                     _TRISB3	set	31899
   168  0000                     _TRISC6	set	31910
   169  0000                     _TRISC7	set	31911
   170                           
   171                           ; #config settings
   172  0000                     
   173                           	psect	cinit
   174  0012BC                     __pcinit:
   175                           	opt stack 0
   176  0012BC                     start_initialization:
   177                           	opt stack 0
   178  0012BC                     __initialization:
   179                           	opt stack 0
   180  0012BC                     end_of_initialization:
   181                           	opt stack 0
   182  0012BC                     __end_of__initialization:
   183                           	opt stack 0
   184  0012BC  0100               	movlb	0
   185  0012BE  EF10  F009         	goto	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMRAM
   188  000007                     __pcstackCOMRAM:
   189                           	opt stack 0
   190  000007                     ??_Seq_Operate:
   191  000007                     
   192                           ; 1 bytes @ 0x0
   193  000007                     	ds	2
   194  000009                     Seq_Operate@Arg_eDirection:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x2
   198  000009                     	ds	1
   199  00000A                     main@SW1_LastState:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x3
   203  00000A                     	ds	1
   204  00000B                     main@SW2_LastState:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x4
   208  00000B                     	ds	1
   209                           
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 103 in file "Main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  SW2_LastStat    1    4[COMRAM] enum E2913
   220 ;;  SW1_LastStat    1    3[COMRAM] enum E2913
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        2 bytes
   235 ;; Hardware stack levels required when called:    1
   236 ;; This function calls:
   237 ;;		_Seq_Operate
   238 ;;		_Seq_init
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  001220                     __ptext0:
   246                           	opt stack 0
   247  001220                     _main:
   248                           	opt stack 30
   249                           
   250                           ;Main.c: 105: BOOL_t SW1_LastState = PORTCbits.RC7;
   251                           
   252                           ;incstack = 0
   253  001220  0E00               	movlw	0
   254  001222  BE82               	btfsc	3970,7,c	;volatile
   255  001224  0E01               	movlw	1
   256  001226  6E0A               	movwf	main@SW1_LastState,c
   257                           
   258                           ;Main.c: 106: BOOL_t SW2_LastState = PORTCbits.RC6;
   259  001228  0E00               	movlw	0
   260  00122A  BC82               	btfsc	3970,6,c	;volatile
   261  00122C  0E01               	movlw	1
   262  00122E  6E0B               	movwf	main@SW2_LastState,c
   263                           
   264                           ;Main.c: 108: Seq_init();
   265  001230  EC37  F009         	call	_Seq_init	;wreg free
   266  001234                     l750:
   267                           
   268                           ;Main.c: 114: {
   269                           ;Main.c: 119: if( (PORTCbits.RC7 == (uint8_t)(0)) && (SW1_LastState == (uint8_t)(1)) )
   270  001234  BE82               	btfsc	3970,7,c	;volatile
   271  001236  D008               	goto	l40
   272  001238  040A               	decf	main@SW1_LastState,w,c
   273  00123A  A4D8               	btfss	status,2,c
   274  00123C  D005               	goto	l40
   275                           
   276                           ;Main.c: 120: {
   277                           ;Main.c: 121: Seq_Operate(SEQ_DIR_FORWARD);
   278  00123E  0E00               	movlw	0
   279  001240  EC2A  F008         	call	_Seq_Operate
   280                           
   281                           ;Main.c: 122: SW1_LastState = (uint8_t)(0);
   282  001244  0E00               	movlw	0
   283  001246  D003               	goto	L1
   284  001248                     l40:
   285                           
   286                           ;Main.c: 124: else if( PORTCbits.RC7 == (uint8_t)(1) )
   287  001248  AE82               	btfss	3970,7,c	;volatile
   288  00124A  D002               	goto	l41
   289                           
   290                           ;Main.c: 125: {
   291                           ;Main.c: 126: SW1_LastState = (uint8_t)(1);
   292  00124C  0E01               	movlw	1
   293  00124E                     L1:
   294  00124E  6E0A               	movwf	main@SW1_LastState,c
   295  001250                     l41:
   296                           
   297                           ;Main.c: 131: }
   298                           ;Main.c: 133: if( (PORTCbits.RC6 == (uint8_t)(0)) && (SW2_LastState == (uint8_t)(1)) )
   299  001250  BC82               	btfsc	3970,6,c	;volatile
   300  001252  D008               	goto	l44
   301  001254  040B               	decf	main@SW2_LastState,w,c
   302  001256  A4D8               	btfss	status,2,c
   303  001258  D005               	goto	l44
   304                           
   305                           ;Main.c: 134: {
   306                           ;Main.c: 135: Seq_Operate(SEQ_DIR_BACKWARD);
   307  00125A  0E01               	movlw	1
   308  00125C  EC2A  F008         	call	_Seq_Operate
   309                           
   310                           ;Main.c: 136: SW2_LastState = (uint8_t)(0);
   311  001260  0E00               	movlw	0
   312  001262  D003               	goto	L2
   313  001264                     l44:
   314                           
   315                           ;Main.c: 138: else if( PORTCbits.RC6 == (uint8_t)(1) )
   316  001264  AC82               	btfss	3970,6,c	;volatile
   317  001266  D7E6               	goto	l750
   318                           
   319                           ;Main.c: 139: {
   320                           ;Main.c: 140: SW2_LastState = (uint8_t)(1);
   321  001268  0E01               	movlw	1
   322  00126A                     L2:
   323  00126A  6E0B               	movwf	main@SW2_LastState,c
   324                           
   325                           ;Main.c: 142: else
   326                           ;Main.c: 143: {
   327                           
   328                           ;Main.c: 141: }
   329  00126C  D7E3               	goto	l750
   330  00126E                     __end_of_main:
   331                           	opt stack 0
   332                           status	equ	0xFD8
   333                           
   334 ;; *************** function _Seq_init *****************
   335 ;; Defined at:
   336 ;;		line 199 in file "Main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		_main
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text1
   364  00126E                     __ptext1:
   365                           	opt stack 0
   366  00126E                     _Seq_init:
   367                           	opt stack 30
   368                           
   369                           ;Main.c: 202: TRISC7 = (1);
   370                           
   371                           ;incstack = 0
   372  00126E  8E94               	bsf	3988,7,c	;volatile
   373                           
   374                           ;Main.c: 203: TRISC6 = (1);
   375  001270  8C94               	bsf	3988,6,c	;volatile
   376                           
   377                           ;Main.c: 204: TRISB3 = (1);
   378  001272  8693               	bsf	3987,3,c	;volatile
   379                           
   380                           ;Main.c: 207: ADCON1|= 0x0F;
   381  001274  0E0F               	movlw	15
   382  001276  12C1               	iorwf	4033,f,c	;volatile
   383                           
   384                           ;Main.c: 208: TRISA &= ~0x3F;
   385  001278  0EC0               	movlw	192
   386  00127A  1692               	andwf	3986,f,c	;volatile
   387                           
   388                           ;Main.c: 209: CVROE = 0;
   389  00127C  9CB5               	bcf	4021,6,c	;volatile
   390                           
   391                           ;Main.c: 210: TRISA1 = (0);
   392  00127E  9292               	bcf	3986,1,c	;volatile
   393                           
   394                           ;Main.c: 211: TRISA4 = (0);
   395  001280  9892               	bcf	3986,4,c	;volatile
   396                           
   397                           ;Main.c: 212: TRISA5 = (0);
   398  001282  9A92               	bcf	3986,5,c	;volatile
   399                           
   400                           ;Main.c: 213: TRISE0 = (0);
   401  001284  9096               	bcf	3990,0,c	;volatile
   402                           
   403                           ;Main.c: 214: TRISE1 = (0);
   404  001286  9296               	bcf	3990,1,c	;volatile
   405                           
   406                           ;Main.c: 215: TRISE2 = (0);
   407  001288  9496               	bcf	3990,2,c	;volatile
   408                           
   409                           ;Main.c: 217: PORTAbits.RA1 = (uint8_t)(0);
   410  00128A  9280               	bcf	3968,1,c	;volatile
   411                           
   412                           ;Main.c: 218: PORTAbits.RA4 = (uint8_t)(1);
   413  00128C  8880               	bsf	3968,4,c	;volatile
   414                           
   415                           ;Main.c: 219: PORTAbits.RA5 = (uint8_t)(1);
   416  00128E  8A80               	bsf	3968,5,c	;volatile
   417                           
   418                           ;Main.c: 220: PORTEbits.RE0 = (uint8_t)(1);
   419  001290  8084               	bsf	3972,0,c	;volatile
   420                           
   421                           ;Main.c: 221: PORTEbits.RE1 = (uint8_t)(1);
   422  001292  8284               	bsf	3972,1,c	;volatile
   423                           
   424                           ;Main.c: 222: PORTEbits.RE2 = (uint8_t)(1);
   425  001294  8484               	bsf	3972,2,c	;volatile
   426                           
   427                           ;Main.c: 224: psCurrentStatePtr = Seq_Operate_State;
   428  001296  0E3D               	movlw	low _Seq_Operate_State
   429  001298  6E04               	movwf	_psCurrentStatePtr,c
   430  00129A  0E10               	movlw	high _Seq_Operate_State
   431  00129C  6E05               	movwf	_psCurrentStatePtr+1,c
   432  00129E  5004               	movf	_psCurrentStatePtr,w,c
   433  0012A0  1005               	iorwf	_psCurrentStatePtr+1,w,c
   434  0012A2  A4D8               	btfss	status,2,c
   435  0012A4  0E00               	movlw	low (__mediumconst shr (0+16))
   436  0012A6  6E06               	movwf	_psCurrentStatePtr+2,c
   437                           
   438                           ;Main.c: 225: psCurrentStatePtr_2 = Seq_Operate_State_2;
   439  0012A8  0E01               	movlw	low _Seq_Operate_State_2
   440  0012AA  6E01               	movwf	_psCurrentStatePtr_2,c
   441  0012AC  0E10               	movlw	high _Seq_Operate_State_2
   442  0012AE  6E02               	movwf	_psCurrentStatePtr_2+1,c
   443  0012B0  5001               	movf	_psCurrentStatePtr_2,w,c
   444  0012B2  1002               	iorwf	_psCurrentStatePtr_2+1,w,c
   445  0012B4  A4D8               	btfss	status,2,c
   446  0012B6  0E00               	movlw	low (__mediumconst shr (0+16))
   447  0012B8  6E03               	movwf	_psCurrentStatePtr_2+2,c
   448  0012BA  0012               	return		;funcret
   449  0012BC                     __end_of_Seq_init:
   450                           	opt stack 0
   451                           status	equ	0xFD8
   452                           
   453 ;; *************** function _Seq_Operate *****************
   454 ;; Defined at:
   455 ;;		line 231 in file "Main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;  Arg_eDirecti    1    wreg     enum E2917
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  Arg_eDirecti    1    2[COMRAM] enum E2917
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;Total ram usage:        3 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text2
   483  001054                     __ptext2:
   484                           	opt stack 0
   485  001054                     _Seq_Operate:
   486                           	opt stack 30
   487                           
   488                           ;incstack = 0
   489                           ;Seq_Operate@Arg_eDirection stored from wreg
   490  001054  6E09               	movwf	Seq_Operate@Arg_eDirection,c
   491                           
   492                           ;Main.c: 233: if(PORTBbits.RB3 == (uint8_t)(0)){
   493  001056  B681               	btfsc	3969,3,c	;volatile
   494  001058  D058               	goto	l736
   495                           
   496                           ;Main.c: 234: if(Arg_eDirection == SEQ_DIR_FORWARD)
   497  00105A  5009               	movf	Seq_Operate@Arg_eDirection,w,c
   498  00105C  A4D8               	btfss	status,2,c
   499  00105E  D002               	goto	l724
   500                           
   501                           ;Main.c: 235: {
   502                           ;Main.c: 236: psCurrentStatePtr = psCurrentStatePtr->psForwardStatePtr;
   503  001060  0E03               	movlw	3
   504  001062  D004               	goto	L3
   505  001064                     l724:
   506                           
   507                           ;Main.c: 238: else if(Arg_eDirection == SEQ_DIR_BACKWARD)
   508  001064  0409               	decf	Seq_Operate@Arg_eDirection,w,c
   509  001066  A4D8               	btfss	status,2,c
   510  001068  D018               	goto	l728
   511                           
   512                           ;Main.c: 239: {
   513                           ;Main.c: 240: psCurrentStatePtr = psCurrentStatePtr->psBackwardStatePtr;
   514  00106A  0E05               	movlw	5
   515  00106C                     L3:
   516  00106C  2404               	addwf	_psCurrentStatePtr,w,c
   517  00106E  6EF6               	movwf	tblptrl,c
   518  001070  0E00               	movlw	0
   519  001072  2005               	addwfc	_psCurrentStatePtr+1,w,c
   520  001074  6EF7               	movwf	tblptrh,c
   521  001076  0E00               	movlw	0
   522  001078  2006               	addwfc	_psCurrentStatePtr+2,w,c
   523  00107A  6EF8               	movwf	tblptru,c
   524  00107C  0009               	tblrd		*+
   525  00107E  CFF5 F007          	movff	tablat,??_Seq_Operate
   526  001082  0009               	tblrd		*+
   527  001084  CFF5 F008          	movff	tablat,??_Seq_Operate+1
   528  001088  C007  F004         	movff	??_Seq_Operate,_psCurrentStatePtr
   529  00108C  C008  F005         	movff	??_Seq_Operate+1,_psCurrentStatePtr+1
   530  001090  5004               	movf	_psCurrentStatePtr,w,c
   531  001092  1005               	iorwf	_psCurrentStatePtr+1,w,c
   532  001094  A4D8               	btfss	status,2,c
   533  001096  0E00               	movlw	low (__mediumconst shr (0+16))
   534  001098  6E06               	movwf	_psCurrentStatePtr+2,c
   535  00109A                     l728:
   536                           
   537                           ;Main.c: 245: }
   538                           ;Main.c: 247: PORTAbits.RA1 = psCurrentStatePtr->boolLed1;
   539  00109A  C004  FFF6         	movff	_psCurrentStatePtr,tblptrl
   540  00109E  C005  FFF7         	movff	_psCurrentStatePtr+1,tblptrh
   541  0010A2  C006  FFF8         	movff	_psCurrentStatePtr+2,tblptru
   542  0010A6  0008               	tblrd		*
   543  0010A8  CFF5 F007          	movff	tablat,??_Seq_Operate
   544  0010AC  4607               	rlncf	??_Seq_Operate,f,c
   545  0010AE  5080               	movf	3968,w,c	;volatile
   546  0010B0  1807               	xorwf	??_Seq_Operate,w,c
   547  0010B2  0BFD               	andlw	-3
   548  0010B4  1807               	xorwf	??_Seq_Operate,w,c
   549  0010B6  6E80               	movwf	3968,c	;volatile
   550                           
   551                           ;Main.c: 248: PORTAbits.RA4 = psCurrentStatePtr->boolLed2;
   552  0010B8  0E01               	movlw	1
   553  0010BA  2404               	addwf	_psCurrentStatePtr,w,c
   554  0010BC  6EF6               	movwf	tblptrl,c
   555  0010BE  0E00               	movlw	0
   556  0010C0  2005               	addwfc	_psCurrentStatePtr+1,w,c
   557  0010C2  6EF7               	movwf	tblptrh,c
   558  0010C4  0E00               	movlw	0
   559  0010C6  2006               	addwfc	_psCurrentStatePtr+2,w,c
   560  0010C8  6EF8               	movwf	tblptru,c
   561  0010CA  0008               	tblrd		*
   562  0010CC  CFF5 F007          	movff	tablat,??_Seq_Operate
   563  0010D0  3A07               	swapf	??_Seq_Operate,f,c
   564  0010D2  5080               	movf	3968,w,c	;volatile
   565  0010D4  1807               	xorwf	??_Seq_Operate,w,c
   566  0010D6  0BEF               	andlw	-17
   567  0010D8  1807               	xorwf	??_Seq_Operate,w,c
   568  0010DA  6E80               	movwf	3968,c	;volatile
   569                           
   570                           ;Main.c: 249: PORTAbits.RA5 = psCurrentStatePtr->boolLed3;
   571  0010DC  0E02               	movlw	2
   572  0010DE  2404               	addwf	_psCurrentStatePtr,w,c
   573  0010E0  6EF6               	movwf	tblptrl,c
   574  0010E2  0E00               	movlw	0
   575  0010E4  2005               	addwfc	_psCurrentStatePtr+1,w,c
   576  0010E6  6EF7               	movwf	tblptrh,c
   577  0010E8  0E00               	movlw	0
   578  0010EA  2006               	addwfc	_psCurrentStatePtr+2,w,c
   579  0010EC  6EF8               	movwf	tblptru,c
   580  0010EE  0008               	tblrd		*
   581  0010F0  CFF5 F007          	movff	tablat,??_Seq_Operate
   582  0010F4  3A07               	swapf	??_Seq_Operate,f,c
   583  0010F6  4607               	rlncf	??_Seq_Operate,f,c
   584  0010F8  5080               	movf	3968,w,c	;volatile
   585  0010FA  1807               	xorwf	??_Seq_Operate,w,c
   586  0010FC  0BDF               	andlw	-33
   587  0010FE  1807               	xorwf	??_Seq_Operate,w,c
   588  001100  6E80               	movwf	3968,c	;volatile
   589                           
   590                           ;Main.c: 250: PORTEbits.RE0 = (uint8_t)(1);
   591  001102  8084               	bsf	3972,0,c	;volatile
   592                           
   593                           ;Main.c: 251: PORTEbits.RE1 = (uint8_t)(1);
   594  001104  8284               	bsf	3972,1,c	;volatile
   595                           
   596                           ;Main.c: 252: PORTEbits.RE2 = (uint8_t)(1);
   597  001106  8484               	bsf	3972,2,c	;volatile
   598                           
   599                           ;Main.c: 253: }
   600  001108  0012               	return	
   601  00110A                     l736:
   602                           
   603                           ;Main.c: 254: else{
   604                           ;Main.c: 255: if(Arg_eDirection == SEQ_DIR_FORWARD)
   605  00110A  5009               	movf	Seq_Operate@Arg_eDirection,w,c
   606  00110C  A4D8               	btfss	status,2,c
   607  00110E  D002               	goto	l740
   608                           
   609                           ;Main.c: 256: {
   610                           ;Main.c: 257: psCurrentStatePtr_2 = psCurrentStatePtr_2->psForwardStatePtr;
   611  001110  0E06               	movlw	6
   612  001112  D004               	goto	L4
   613  001114                     l740:
   614                           
   615                           ;Main.c: 259: else if(Arg_eDirection == SEQ_DIR_BACKWARD)
   616  001114  0409               	decf	Seq_Operate@Arg_eDirection,w,c
   617  001116  A4D8               	btfss	status,2,c
   618  001118  D018               	goto	l744
   619                           
   620                           ;Main.c: 260: {
   621                           ;Main.c: 261: psCurrentStatePtr_2 = psCurrentStatePtr_2->psBackwardStatePtr;
   622  00111A  0E08               	movlw	8
   623  00111C                     L4:
   624  00111C  2401               	addwf	_psCurrentStatePtr_2,w,c
   625  00111E  6EF6               	movwf	tblptrl,c
   626  001120  0E00               	movlw	0
   627  001122  2002               	addwfc	_psCurrentStatePtr_2+1,w,c
   628  001124  6EF7               	movwf	tblptrh,c
   629  001126  0E00               	movlw	0
   630  001128  2003               	addwfc	_psCurrentStatePtr_2+2,w,c
   631  00112A  6EF8               	movwf	tblptru,c
   632  00112C  0009               	tblrd		*+
   633  00112E  CFF5 F007          	movff	tablat,??_Seq_Operate
   634  001132  0009               	tblrd		*+
   635  001134  CFF5 F008          	movff	tablat,??_Seq_Operate+1
   636  001138  C007  F001         	movff	??_Seq_Operate,_psCurrentStatePtr_2
   637  00113C  C008  F002         	movff	??_Seq_Operate+1,_psCurrentStatePtr_2+1
   638  001140  5001               	movf	_psCurrentStatePtr_2,w,c
   639  001142  1002               	iorwf	_psCurrentStatePtr_2+1,w,c
   640  001144  A4D8               	btfss	status,2,c
   641  001146  0E00               	movlw	low (__mediumconst shr (0+16))
   642  001148  6E03               	movwf	_psCurrentStatePtr_2+2,c
   643  00114A                     l744:
   644                           
   645                           ;Main.c: 266: }
   646                           ;Main.c: 268: PORTAbits.RA1 = psCurrentStatePtr_2->boolLed1;
   647  00114A  C001  FFF6         	movff	_psCurrentStatePtr_2,tblptrl
   648  00114E  C002  FFF7         	movff	_psCurrentStatePtr_2+1,tblptrh
   649  001152  C003  FFF8         	movff	_psCurrentStatePtr_2+2,tblptru
   650  001156  0008               	tblrd		*
   651  001158  CFF5 F007          	movff	tablat,??_Seq_Operate
   652  00115C  4607               	rlncf	??_Seq_Operate,f,c
   653  00115E  5080               	movf	3968,w,c	;volatile
   654  001160  1807               	xorwf	??_Seq_Operate,w,c
   655  001162  0BFD               	andlw	-3
   656  001164  1807               	xorwf	??_Seq_Operate,w,c
   657  001166  6E80               	movwf	3968,c	;volatile
   658                           
   659                           ;Main.c: 269: PORTAbits.RA4 = psCurrentStatePtr_2->boolLed2;
   660  001168  0E01               	movlw	1
   661  00116A  2401               	addwf	_psCurrentStatePtr_2,w,c
   662  00116C  6EF6               	movwf	tblptrl,c
   663  00116E  0E00               	movlw	0
   664  001170  2002               	addwfc	_psCurrentStatePtr_2+1,w,c
   665  001172  6EF7               	movwf	tblptrh,c
   666  001174  0E00               	movlw	0
   667  001176  2003               	addwfc	_psCurrentStatePtr_2+2,w,c
   668  001178  6EF8               	movwf	tblptru,c
   669  00117A  0008               	tblrd		*
   670  00117C  CFF5 F007          	movff	tablat,??_Seq_Operate
   671  001180  3A07               	swapf	??_Seq_Operate,f,c
   672  001182  5080               	movf	3968,w,c	;volatile
   673  001184  1807               	xorwf	??_Seq_Operate,w,c
   674  001186  0BEF               	andlw	-17
   675  001188  1807               	xorwf	??_Seq_Operate,w,c
   676  00118A  6E80               	movwf	3968,c	;volatile
   677                           
   678                           ;Main.c: 270: PORTAbits.RA5 = psCurrentStatePtr_2->boolLed3;
   679  00118C  0E02               	movlw	2
   680  00118E  2401               	addwf	_psCurrentStatePtr_2,w,c
   681  001190  6EF6               	movwf	tblptrl,c
   682  001192  0E00               	movlw	0
   683  001194  2002               	addwfc	_psCurrentStatePtr_2+1,w,c
   684  001196  6EF7               	movwf	tblptrh,c
   685  001198  0E00               	movlw	0
   686  00119A  2003               	addwfc	_psCurrentStatePtr_2+2,w,c
   687  00119C  6EF8               	movwf	tblptru,c
   688  00119E  0008               	tblrd		*
   689  0011A0  CFF5 F007          	movff	tablat,??_Seq_Operate
   690  0011A4  3A07               	swapf	??_Seq_Operate,f,c
   691  0011A6  4607               	rlncf	??_Seq_Operate,f,c
   692  0011A8  5080               	movf	3968,w,c	;volatile
   693  0011AA  1807               	xorwf	??_Seq_Operate,w,c
   694  0011AC  0BDF               	andlw	-33
   695  0011AE  1807               	xorwf	??_Seq_Operate,w,c
   696  0011B0  6E80               	movwf	3968,c	;volatile
   697                           
   698                           ;Main.c: 271: PORTEbits.RE0 = psCurrentStatePtr_2->boolLed4;
   699  0011B2  0E03               	movlw	3
   700  0011B4  2401               	addwf	_psCurrentStatePtr_2,w,c
   701  0011B6  6EF6               	movwf	tblptrl,c
   702  0011B8  0E00               	movlw	0
   703  0011BA  2002               	addwfc	_psCurrentStatePtr_2+1,w,c
   704  0011BC  6EF7               	movwf	tblptrh,c
   705  0011BE  0E00               	movlw	0
   706  0011C0  2003               	addwfc	_psCurrentStatePtr_2+2,w,c
   707  0011C2  6EF8               	movwf	tblptru,c
   708  0011C4  0008               	tblrd		*
   709  0011C6  CFF5 F007          	movff	tablat,??_Seq_Operate
   710  0011CA  5084               	movf	3972,w,c	;volatile
   711  0011CC  1807               	xorwf	??_Seq_Operate,w,c
   712  0011CE  0BFE               	andlw	-2
   713  0011D0  1807               	xorwf	??_Seq_Operate,w,c
   714  0011D2  6E84               	movwf	3972,c	;volatile
   715                           
   716                           ;Main.c: 272: PORTEbits.RE1 = psCurrentStatePtr_2->boolLed5;
   717  0011D4  0E04               	movlw	4
   718  0011D6  2401               	addwf	_psCurrentStatePtr_2,w,c
   719  0011D8  6EF6               	movwf	tblptrl,c
   720  0011DA  0E00               	movlw	0
   721  0011DC  2002               	addwfc	_psCurrentStatePtr_2+1,w,c
   722  0011DE  6EF7               	movwf	tblptrh,c
   723  0011E0  0E00               	movlw	0
   724  0011E2  2003               	addwfc	_psCurrentStatePtr_2+2,w,c
   725  0011E4  6EF8               	movwf	tblptru,c
   726  0011E6  0008               	tblrd		*
   727  0011E8  CFF5 F007          	movff	tablat,??_Seq_Operate
   728  0011EC  4607               	rlncf	??_Seq_Operate,f,c
   729  0011EE  5084               	movf	3972,w,c	;volatile
   730  0011F0  1807               	xorwf	??_Seq_Operate,w,c
   731  0011F2  0BFD               	andlw	-3
   732  0011F4  1807               	xorwf	??_Seq_Operate,w,c
   733  0011F6  6E84               	movwf	3972,c	;volatile
   734                           
   735                           ;Main.c: 273: PORTEbits.RE2 = psCurrentStatePtr_2->boolLed6;
   736  0011F8  0E05               	movlw	5
   737  0011FA  2401               	addwf	_psCurrentStatePtr_2,w,c
   738  0011FC  6EF6               	movwf	tblptrl,c
   739  0011FE  0E00               	movlw	0
   740  001200  2002               	addwfc	_psCurrentStatePtr_2+1,w,c
   741  001202  6EF7               	movwf	tblptrh,c
   742  001204  0E00               	movlw	0
   743  001206  2003               	addwfc	_psCurrentStatePtr_2+2,w,c
   744  001208  6EF8               	movwf	tblptru,c
   745  00120A  0008               	tblrd		*
   746  00120C  CFF5 F007          	movff	tablat,??_Seq_Operate
   747  001210  4607               	rlncf	??_Seq_Operate,f,c
   748  001212  4607               	rlncf	??_Seq_Operate,f,c
   749  001214  5084               	movf	3972,w,c	;volatile
   750  001216  1807               	xorwf	??_Seq_Operate,w,c
   751  001218  0BFB               	andlw	-5
   752  00121A  1807               	xorwf	??_Seq_Operate,w,c
   753  00121C  6E84               	movwf	3972,c	;volatile
   754  00121E  0012               	return	
   755  001220                     __end_of_Seq_Operate:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           status	equ	0xFD8
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           status	equ	0xFD8
   767                           
   768                           	psect	rparam
   769  0000                     tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    81
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    psCurrentStatePtr_2.psBackwardStatePtr	PTR const struct Seq_Operate_States_2_s size(2) Largest target is 72
		 -> Seq_Operate_State_2(CODE[60]), 

    psCurrentStatePtr_2.psForwardStatePtr	PTR const struct Seq_Operate_States_2_s size(2) Largest target is 72
		 -> Seq_Operate_State_2(CODE[60]), 

    psCurrentStatePtr.psBackwardStatePtr	PTR const struct Seq_Operate_States_s size(2) Largest target is 27
		 -> Seq_Operate_State(CODE[21]), 

    psCurrentStatePtr.psForwardStatePtr	PTR const struct Seq_Operate_States_s size(2) Largest target is 27
		 -> Seq_Operate_State(CODE[21]), 

    psCurrentStatePtr_2	PTR const struct Seq_Operate_States_2_s size(3) Largest target is 65535
		 -> ROM(CODE[65535]), Seq_Operate_State_2(CODE[60]), 

    psCurrentStatePtr	PTR const struct Seq_Operate_States_s size(3) Largest target is 65535
		 -> ROM(CODE[65535]), Seq_Operate_State(CODE[21]), 

    S115Seq_Operate_States_2_s$psBackwardStatePtr	PTR const struct Seq_Operate_States_2_s size(2) Largest target is 72
		 -> Seq_Operate_State_2(CODE[60]), 

    Seq_Operate_State_2.psBackwardStatePtr	PTR const struct Seq_Operate_States_2_s size(2) Largest target is 72
		 -> Seq_Operate_State_2(CODE[60]), 

    S115Seq_Operate_States_2_s$psForwardStatePtr	PTR const struct Seq_Operate_States_2_s size(2) Largest target is 72
		 -> Seq_Operate_State_2(CODE[60]), 

    Seq_Operate_State_2.psForwardStatePtr	PTR const struct Seq_Operate_States_2_s size(2) Largest target is 72
		 -> Seq_Operate_State_2(CODE[60]), 

    S109Seq_Operate_States_s$psBackwardStatePtr	PTR const struct Seq_Operate_States_s size(2) Largest target is 27
		 -> Seq_Operate_State(CODE[21]), 

    Seq_Operate_State.psBackwardStatePtr	PTR const struct Seq_Operate_States_s size(2) Largest target is 27
		 -> Seq_Operate_State(CODE[21]), 

    S109Seq_Operate_States_s$psForwardStatePtr	PTR const struct Seq_Operate_States_s size(2) Largest target is 27
		 -> Seq_Operate_State(CODE[21]), 

    Seq_Operate_State.psForwardStatePtr	PTR const struct Seq_Operate_States_s size(2) Largest target is 27
		 -> Seq_Operate_State(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_Seq_Operate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                              3 COMRAM     2     2      0
                        _Seq_Operate
                           _Seq_init
 ---------------------------------------------------------------------------------
 (1) _Seq_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Seq_Operate                                          3     3      0      60
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Seq_Operate
   _Seq_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      5       B       1        8.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       B       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       B      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Sep 26 02:54:19 2019

                         l40 1248                           l41 1250                           l44 1264  
                __CFG_BORV$3 000000    Seq_Operate@Arg_eDirection 0009                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                          l740 1114                          l724 1064  
                        l750 1234                          l744 114A                          l728 109A  
                        l736 110A                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         _main 1220  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ?_main 0007                        _CVROE 007DAE  
                      _TRISA 000F92                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
             __CFG_BOREN$OFF 000000                        tablat 000FF5                        status 000FD8  
             __CFG_PBADEN$ON 000000              __initialization 12BC                 __end_of_main 126E  
              ??_Seq_Operate 0007                       ??_main 000A                __activetblptr 000003  
           __end_of_Seq_init 12BC                       _ADCON1 000FC1                       _TRISA1 007C91  
                     _TRISA4 007C94                       _TRISB3 007C9B                       _TRISA5 007C95  
                     _TRISE0 007CB0                       _TRISE1 007CB1                       _TRISC6 007CA6  
                     _TRISE2 007CB2                       _TRISC7 007CA7               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8          __end_of_Seq_Operate 1220  
                 __accesstop 0080      __end_of__initialization 12BC                ___rparam_used 000001  
             __pcstackCOMRAM 0007          _psCurrentStatePtr_2 0001                   __pnvCOMRAM 0001  
                  ?_Seq_init 0007                  _Seq_Operate 1054                      __Hparam 0000  
                 ??_Seq_init 0007                      __Lparam 0000                 __psmallconst 1000  
                    __pcinit 12BC                      __ramtop 1000                      __ptext0 1220  
                    __ptext1 126E                      __ptext2 1054         end_of_initialization 12BC  
        _Seq_Operate_State_2 1001                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTEbits 000F84            main@SW1_LastState 000A  
        start_initialization 12BC            main@SW2_LastState 000B            _psCurrentStatePtr 0004  
          __size_of_Seq_init 004E             __CFG_LPT1OSC$OFF 000000            _Seq_Operate_State 103D  
               ?_Seq_Operate 0007            __CFG_CCP2MX$PORTC 000000    __end_of_Seq_Operate_State 1052  
                __smallconst 1000             __CFG_WDTPS$32768 000000                     __Hrparam 0000  
                   _Seq_init 126E                     __Lrparam 0000         __size_of_Seq_Operate 01CC  
              __size_of_main 004E  __end_of_Seq_Operate_State_2 103D  

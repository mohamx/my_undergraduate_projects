

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Apr 27 03:16:26 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193                           
   194                           	psect	strings
   195  0000'                    __pstrings:	
   196  0000'                    stringtab:	
   197  0000'                    __stringtab:	
   198  0000'                    stringcode:	
   199                           ;	String table - string pointers are 1 byte each
   200                           
   201  0000'                    stringdir:	
   202  0000' 3000'              	movlw	high stringdir
   203  0001' 008A               	movwf	10
   204  0002' 0804               	movf	4,w
   205  0003' 0A84               	incf	4,f
   206  0004' 0782               	addwf	2,f
   207  0005'                    __stringbase:	
   208  0005' 3400               	retlw	0
   209  0006'                    __end_of__stringtab:	
   210  0006'                    exp@coeff:	
   211  0006' 3400               	retlw	0
   212  0007' 3480               	retlw	128
   213  0008' 343F               	retlw	63
   214  0009' 3472               	retlw	114
   215  000A' 3431               	retlw	49
   216  000B' 343F               	retlw	63
   217  000C' 34FE               	retlw	254
   218  000D' 3475               	retlw	117
   219  000E' 343E               	retlw	62
   220  000F' 3458               	retlw	88
   221  0010' 3463               	retlw	99
   222  0011' 343D               	retlw	61
   223  0012' 3495               	retlw	149
   224  0013' 341D               	retlw	29
   225  0014' 343C               	retlw	60
   226  0015' 34C5               	retlw	197
   227  0016' 34AE               	retlw	174
   228  0017' 343A               	retlw	58
   229  0018' 3479               	retlw	121
   230  0019' 3421               	retlw	33
   231  001A' 3439               	retlw	57
   232  001B' 3494               	retlw	148
   233  001C' 3480               	retlw	128
   234  001D' 3437               	retlw	55
   235  001E' 3493               	retlw	147
   236  001F' 34A7               	retlw	167
   237  0020' 3435               	retlw	53
   238  0021' 3456               	retlw	86
   239  0022' 3415               	retlw	21
   240  0023' 3434               	retlw	52
   241  0024'                    __end_ofexp@coeff:	
   242  0024'                    log@coeff:	
   243  0024' 3400               	retlw	0
   244  0025' 3400               	retlw	0
   245  0026' 3400               	retlw	0
   246  0027' 3400               	retlw	0
   247  0028' 3480               	retlw	128
   248  0029' 343F               	retlw	63
   249  002A' 34F0               	retlw	240
   250  002B' 34FF               	retlw	255
   251  002C' 34BE               	retlw	190
   252  002D' 34E2               	retlw	226
   253  002E' 34A9               	retlw	169
   254  002F' 343E               	retlw	62
   255  0030' 3483               	retlw	131
   256  0031' 3476               	retlw	118
   257  0032' 34BE               	retlw	190
   258  0033' 34AE               	retlw	174
   259  0034' 342B               	retlw	43
   260  0035' 343E               	retlw	62
   261  0036' 343C               	retlw	60
   262  0037' 34C3               	retlw	195
   263  0038' 34BD               	retlw	189
   264  0039' 34D2               	retlw	210
   265  003A' 3413               	retlw	19
   266  003B' 343D               	retlw	61
   267  003C' 3478               	retlw	120
   268  003D' 34D3               	retlw	211
   269  003E' 34BB               	retlw	187
   270  003F'                    __end_oflog@coeff:	
   271  0019                     _TXREG	set	25
   272  001A                     _RCREG	set	26
   273  0060                     _TMR1IF	set	96
   274  0064                     _TXIF	set	100
   275  00C4                     _CREN	set	196
   276  00C1                     _OERR	set	193
   277  0065                     _RCIF	set	101
   278  04C5                     _TXEN	set	1221
   279                           
   280                           ; #config settings
   281  0000                     
   282                           	psect	cinit
   283  0000'                    start_initialization:	
   284  0000'                    __initialization:	
   285                           
   286                           ; Clear objects allocated to BANK1
   287  0000' 1683               	bsf	3,5	;RP0=1, select bank1
   288  0001' 1303               	bcf	3,6	;RP1=0, select bank1
   289  0002' 0180'              	clrf	__pbssBANK1& (0+127)
   290  0003' 0180'              	clrf	(__pbssBANK1+1)& (0+127)
   291  0004' 0180'              	clrf	(__pbssBANK1+2)& (0+127)
   292  0005' 0180'              	clrf	(__pbssBANK1+3)& (0+127)
   293  0006' 0180'              	clrf	(__pbssBANK1+4)& (0+127)
   294  0007' 0180'              	clrf	(__pbssBANK1+5)& (0+127)
   295  0008' 0180'              	clrf	(__pbssBANK1+6)& (0+127)
   296  0009' 0180'              	clrf	(__pbssBANK1+7)& (0+127)
   297  000A' 0180'              	clrf	(__pbssBANK1+8)& (0+127)
   298  000B' 0180'              	clrf	(__pbssBANK1+9)& (0+127)
   299  000C' 0180'              	clrf	(__pbssBANK1+10)& (0+127)
   300  000D' 0180'              	clrf	(__pbssBANK1+11)& (0+127)
   301  000E' 0180'              	clrf	(__pbssBANK1+12)& (0+127)
   302  000F'                    end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305  000F'                    __end_of__initialization:	
   306  000F' 0183               	clrf	3
   307  0010' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	bssBANK1
   310  0000'                    __pbssBANK1:	
   311  0000'                    _errno:	
   312  0000'                    	ds	2
   313  0002'                    _uIndex:	
   314  0002'                    	ds	1
   315  0003'                    _uartRxData:	
   316  0003'                    	ds	10
   317                           
   318                           	psect	cstackBANK3
   319  0000'                    __pcstackBANK3:	
   320  0000'                    ??_main:	
   321                           
   322                           	psect	cstackBANK1
   323  0000'                    __pcstackBANK1:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0000'                    ?_pow:	
   327  0000'                    pow@x:	
   328                           ; 3 bytes @ 0x0
   329                           
   330                           
   331                           ; 3 bytes @ 0x0
   332  0000'                    	ds	3
   333  0003'                    pow@y:	
   334                           
   335                           ; 3 bytes @ 0x3
   336  0003'                    	ds	3
   337  0006'                    _pow$568:	
   338                           
   339                           ; 3 bytes @ 0x6
   340  0006'                    	ds	3
   341  0009'                    _pow$569:	
   342                           
   343                           ; 3 bytes @ 0x9
   344  0009'                    	ds	3
   345  000C'                    pow@sign:	
   346                           
   347                           ; 1 bytes @ 0xC
   348  000C'                    	ds	1
   349  000D'                    pow@yi:	
   350                           
   351                           ; 4 bytes @ 0xD
   352  000D'                    	ds	4
   353  0011'                    ??_ISR:	
   354                           
   355                           ; 1 bytes @ 0x11
   356  0011'                    	ds	18
   357  0023'                    _ISR$566:	
   358                           
   359                           ; 3 bytes @ 0x23
   360  0023'                    	ds	3
   361  0026'                    _ISR$567:	
   362                           
   363                           ; 3 bytes @ 0x26
   364  0026'                    	ds	3
   365  0029'                    ISR@data1:	
   366                           
   367                           ; 1 bytes @ 0x29
   368  0029'                    	ds	1
   369  002A'                    ISR@i:	
   370                           
   371                           ; 2 bytes @ 0x2A
   372  002A'                    	ds	2
   373  002C'                    ISR@motorId:	
   374                           
   375                           ; 1 bytes @ 0x2C
   376  002C'                    	ds	1
   377  002D'                    ISR@received:	
   378                           
   379                           ; 1 bytes @ 0x2D
   380  002D'                    	ds	1
   381                           
   382                           	psect	cstackCOMMON
   383  0000'                    __pcstackCOMMON:	
   384  0000'                    ?___ftge:	
   385  0000'                    ??_ring_buffer_put_char:	
   386                           ; 1 bit 
   387                           
   388  0000'                    ??_ring_buffer_put:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0000'                    ?_endTX:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0000'                    ??_endTX:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0000'                    ??_ring_buffer_get:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0000'                    ?_disableTimer1:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0000'                    ??_disableTimer1:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0000'                    ?_timerTick:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0000'                    ??_timerTick:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0000'                    ?_ISR:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0000'                    ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0000'                    ?___bmul:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0000'                    ?___lbmod:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0000'                    ?_ring_buffer_put_char:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0000'                    ?_ring_buffer_put:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0000'                    ?_ring_buffer_get:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0000'                    ?___wmul:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0000'                    ?___awmod:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0000'                    ?___ftpack:	
   440                           ; 2 bytes @ 0x0
   441                           
   442  0000'                    ?_frexp:	
   443                           ; 3 bytes @ 0x0
   444                           
   445  0000'                    ?___ftneg:	
   446                           ; 3 bytes @ 0x0
   447                           
   448  0000'                    ?___fttol:	
   449                           ; 3 bytes @ 0x0
   450                           
   451  0000'                    ___bmul@multiplicand:	
   452                           ; 4 bytes @ 0x0
   453                           
   454  0000'                    ___lbmod@divisor:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0000'                    _ring_buffer_put_char$0:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0000'                    _ring_buffer_put$0:	
   461                           ; 2 bytes @ 0x0
   462                           
   463  0000'                    _ring_buffer_get$0:	
   464                           ; 2 bytes @ 0x0
   465                           
   466  0000'                    ___wmul@multiplier:	
   467                           ; 2 bytes @ 0x0
   468                           
   469  0000'                    ___awmod@divisor:	
   470                           ; 2 bytes @ 0x0
   471                           
   472  0000'                    ___ftpack@arg:	
   473                           ; 2 bytes @ 0x0
   474                           
   475  0000'                    ___ftge@ff1:	
   476                           ; 3 bytes @ 0x0
   477                           
   478  0000'                    ___ftneg@f1:	
   479                           ; 3 bytes @ 0x0
   480                           
   481  0000'                    ___fttol@f1:	
   482                           ; 3 bytes @ 0x0
   483                           
   484  0000'                    frexp@value:	
   485                           ; 3 bytes @ 0x0
   486                           
   487                           
   488                           ; 3 bytes @ 0x0
   489  0000'                    	ds	1
   490  0001'                    ??___bmul:	
   491  0001'                    ??___lbmod:	
   492                           ; 1 bytes @ 0x1
   493                           
   494                           
   495                           ; 1 bytes @ 0x1
   496  0001'                    	ds	1
   497  0002'                    _ring_buffer_put_char$1:	
   498  0002'                    _ring_buffer_put$1:	
   499                           ; 1 bytes @ 0x2
   500                           
   501  0002'                    _ring_buffer_get$1:	
   502                           ; 1 bytes @ 0x2
   503                           
   504  0002'                    ___bmul@product:	
   505                           ; 1 bytes @ 0x2
   506                           
   507  0002'                    ___wmul@multiplicand:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  0002'                    ___awmod@dividend:	
   511                           ; 2 bytes @ 0x2
   512                           
   513                           
   514                           ; 2 bytes @ 0x2
   515  0002'                    	ds	1
   516  0003'                    ??___ftneg:	
   517  0003'                    ___bmul@multiplier:	
   518                           ; 1 bytes @ 0x3
   519                           
   520  0003'                    ___ftpack@exp:	
   521                           ; 1 bytes @ 0x3
   522                           
   523  0003'                    frexp@eptr:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0003'                    ___ftge@ff2:	
   527                           ; 1 bytes @ 0x3
   528                           
   529                           
   530                           ; 3 bytes @ 0x3
   531  0003'                    	ds	1
   532  0004'                    ??_frexp:	
   533  0004'                    ??___wmul:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0004'                    ??___awmod:	
   537                           ; 1 bytes @ 0x4
   538                           
   539  0004'                    ??___fttol:	
   540                           ; 1 bytes @ 0x4
   541                           
   542  0004'                    ___ftpack@sign:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0004'                    ___lbmod@dividend:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0004'                    ___wmul@product:	
   549                           ; 1 bytes @ 0x4
   550                           
   551                           
   552                           ; 2 bytes @ 0x4
   553  0004'                    	ds	1
   554  0005'                    ??___ftpack:	
   555  0005'                    ___awmod@counter:	
   556                           ; 1 bytes @ 0x5
   557                           
   558  0005'                    ___lbmod@counter:	
   559                           ; 1 bytes @ 0x5
   560                           
   561                           
   562                           ; 1 bytes @ 0x5
   563  0005'                    	ds	1
   564  0006'                    ??___ftge:	
   565  0006'                    ___awmod@sign:	
   566                           ; 1 bytes @ 0x6
   567                           
   568  0006'                    ___lbmod@rem:	
   569                           ; 1 bytes @ 0x6
   570                           
   571                           
   572                           ; 1 bytes @ 0x6
   573  0006'                    	ds	2
   574  0008'                    ?___awtoft:	
   575  0008'                    ?___lltoft:	
   576                           ; 3 bytes @ 0x8
   577                           
   578  0008'                    ___fttol@sign1:	
   579                           ; 3 bytes @ 0x8
   580                           
   581  0008'                    ___awtoft@c:	
   582                           ; 1 bytes @ 0x8
   583                           
   584  0008'                    ___lltoft@c:	
   585                           ; 2 bytes @ 0x8
   586                           
   587                           
   588                           ; 4 bytes @ 0x8
   589  0008'                    	ds	1
   590  0009'                    ___fttol@lval:	
   591                           
   592                           ; 4 bytes @ 0x9
   593  0009'                    	ds	2
   594  000B'                    ??___awtoft:	
   595                           
   596                           ; 1 bytes @ 0xB
   597  000B'                    	ds	1
   598  000C'                    ??___lltoft:	
   599                           
   600                           ; 1 bytes @ 0xC
   601  000C'                    	ds	1
   602  000D'                    ___awtoft@sign:	
   603  000D'                    ___fttol@exp1:	
   604                           ; 1 bytes @ 0xD
   605                           
   606  000D'                    ___lltoft@exp:	
   607                           ; 1 bytes @ 0xD
   608                           
   609                           
   610                           ; 1 bytes @ 0xD
   611  000D'                    	ds	1
   612  000E'                    ??___ftsub:	
   613                           
   614                           	psect	cstackBANK0
   615  0000'                    __pcstackBANK0:	
   616                           ; 1 bytes @ 0xE
   617                           
   618  0000'                    ?___altoft:	
   619  0000'                    ?___ftdiv:	
   620                           ; 3 bytes @ 0x0
   621                           
   622  0000'                    ___ftdiv@f2:	
   623                           ; 3 bytes @ 0x0
   624                           
   625  0000'                    ___altoft@c:	
   626                           ; 3 bytes @ 0x0
   627                           
   628                           
   629                           ; 4 bytes @ 0x0
   630  0000'                    	ds	3
   631  0003'                    ___ftdiv@f1:	
   632                           
   633                           ; 3 bytes @ 0x3
   634  0003'                    	ds	1
   635  0004'                    ??___altoft:	
   636                           
   637                           ; 1 bytes @ 0x4
   638  0004'                    	ds	2
   639  0006'                    ??___ftdiv:	
   640  0006'                    ___altoft@exp:	
   641                           ; 1 bytes @ 0x6
   642                           
   643                           
   644                           ; 1 bytes @ 0x6
   645  0006'                    	ds	1
   646  0007'                    ___altoft@sign:	
   647                           
   648                           ; 1 bytes @ 0x7
   649  0007'                    	ds	3
   650  000A'                    ___ftdiv@cntr:	
   651                           
   652                           ; 1 bytes @ 0xA
   653  000A'                    	ds	1
   654  000B'                    ___ftdiv@f3:	
   655                           
   656                           ; 3 bytes @ 0xB
   657  000B'                    	ds	3
   658  000E'                    ___ftdiv@exp:	
   659                           
   660                           ; 1 bytes @ 0xE
   661  000E'                    	ds	1
   662  000F'                    ___ftdiv@sign:	
   663                           
   664                           ; 1 bytes @ 0xF
   665  000F'                    	ds	1
   666  0010'                    ?___ftadd:	
   667  0010'                    ___ftadd@f1:	
   668                           ; 3 bytes @ 0x10
   669                           
   670                           
   671                           ; 3 bytes @ 0x10
   672  0010'                    	ds	3
   673  0013'                    ___ftadd@f2:	
   674                           
   675                           ; 3 bytes @ 0x13
   676  0013'                    	ds	3
   677  0016'                    ??___ftadd:	
   678                           
   679                           ; 1 bytes @ 0x16
   680  0016'                    	ds	4
   681  001A'                    ___ftadd@sign:	
   682                           
   683                           ; 1 bytes @ 0x1A
   684  001A'                    	ds	1
   685  001B'                    ___ftadd@exp2:	
   686                           
   687                           ; 1 bytes @ 0x1B
   688  001B'                    	ds	1
   689  001C'                    ___ftadd@exp1:	
   690                           
   691                           ; 1 bytes @ 0x1C
   692  001C'                    	ds	1
   693  001D'                    ?_floor:	
   694  001D'                    ?___ftmul:	
   695                           ; 3 bytes @ 0x1D
   696                           
   697  001D'                    ?___ftsub:	
   698                           ; 3 bytes @ 0x1D
   699                           
   700  001D'                    ___ftmul@f1:	
   701                           ; 3 bytes @ 0x1D
   702                           
   703  001D'                    ___ftsub@f2:	
   704                           ; 3 bytes @ 0x1D
   705                           
   706  001D'                    floor@x:	
   707                           ; 3 bytes @ 0x1D
   708                           
   709                           
   710                           ; 3 bytes @ 0x1D
   711  001D'                    	ds	3
   712  0020'                    ??_floor:	
   713  0020'                    ___ftmul@f2:	
   714                           ; 1 bytes @ 0x20
   715                           
   716  0020'                    ___ftsub@f1:	
   717                           ; 3 bytes @ 0x20
   718                           
   719                           
   720                           ; 3 bytes @ 0x20
   721  0020'                    	ds	1
   722  0021'                    floor@i:	
   723                           
   724                           ; 3 bytes @ 0x21
   725  0021'                    	ds	2
   726  0023'                    ??___ftmul:	
   727                           
   728                           ; 1 bytes @ 0x23
   729  0023'                    	ds	1
   730  0024'                    floor@expon:	
   731                           
   732                           ; 2 bytes @ 0x24
   733  0024'                    	ds	3
   734  0027'                    ___ftmul@exp:	
   735                           
   736                           ; 1 bytes @ 0x27
   737  0027'                    	ds	1
   738  0028'                    ___ftmul@f3_as_product:	
   739                           
   740                           ; 3 bytes @ 0x28
   741  0028'                    	ds	3
   742  002B'                    ___ftmul@cntr:	
   743                           
   744                           ; 1 bytes @ 0x2B
   745  002B'                    	ds	1
   746  002C'                    ___ftmul@sign:	
   747                           
   748                           ; 1 bytes @ 0x2C
   749  002C'                    	ds	1
   750  002D'                    ?_eval_poly:	
   751  002D'                    eval_poly@x:	
   752                           ; 3 bytes @ 0x2D
   753                           
   754                           
   755                           ; 3 bytes @ 0x2D
   756  002D'                    	ds	3
   757  0030'                    eval_poly@d:	
   758                           
   759                           ; 1 bytes @ 0x30
   760  0030'                    	ds	1
   761  0031'                    eval_poly@n:	
   762                           
   763                           ; 2 bytes @ 0x31
   764  0031'                    	ds	2
   765  0033'                    ??_eval_poly:	
   766                           
   767                           ; 1 bytes @ 0x33
   768  0033'                    	ds	1
   769  0034'                    eval_poly@res:	
   770                           
   771                           ; 3 bytes @ 0x34
   772  0034'                    	ds	3
   773  0037'                    ?_log:	
   774  0037'                    ?_ldexp:	
   775                           ; 3 bytes @ 0x37
   776                           
   777  0037'                    ldexp@value:	
   778                           ; 3 bytes @ 0x37
   779                           
   780  0037'                    log@x:	
   781                           ; 3 bytes @ 0x37
   782                           
   783                           
   784                           ; 3 bytes @ 0x37
   785  0037'                    	ds	3
   786  003A'                    ??_log:	
   787  003A'                    ldexp@newexp:	
   788                           ; 1 bytes @ 0x3A
   789                           
   790                           
   791                           ; 2 bytes @ 0x3A
   792  003A'                    	ds	1
   793  003B'                    log@exponent:	
   794                           
   795                           ; 2 bytes @ 0x3B
   796  003B'                    	ds	1
   797  003C'                    ??_ldexp:	
   798                           
   799                           ; 1 bytes @ 0x3C
   800  003C'                    	ds	2
   801  003E'                    _ldexp$398:	
   802                           
   803                           ; 3 bytes @ 0x3E
   804  003E'                    	ds	3
   805  0041'                    ?_exp:	
   806  0041'                    exp@x:	
   807                           ; 3 bytes @ 0x41
   808                           
   809                           
   810                           ; 3 bytes @ 0x41
   811  0041'                    	ds	3
   812  0044'                    ??_exp:	
   813                           
   814                           ; 1 bytes @ 0x44
   815  0044'                    	ds	1
   816  0045'                    _exp$570:	
   817                           
   818                           ; 3 bytes @ 0x45
   819  0045'                    	ds	3
   820  0048'                    _exp$361:	
   821                           
   822                           ; 3 bytes @ 0x48
   823  0048'                    	ds	3
   824  004B'                    exp@exponent:	
   825                           
   826                           ; 2 bytes @ 0x4B
   827  004B'                    	ds	2
   828  004D'                    exp@sign:	
   829                           
   830                           ; 1 bytes @ 0x4D
   831  004D'                    	ds	1
   832  004E'                    ??_pow:	
   833                           
   834                           ; 1 bytes @ 0x4E
   835  004E'                    	ds	1
   836                           
   837                           	psect	maintext
   838  0000'                    __pmaintext:	
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 159 in file "Main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		None
   853 ;; Tracked objects:
   854 ;;		On entry : B00/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels required when called:    6
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _main
   873  0000'                    _main:	
   874  0000'                    l73:	
   875                           ;incstack = 0
   876                           ; Regs used in _main: []
   877                           ;Main.c: 161: while(1)
   878                           
   879                           
   880                           ;Main.c: 162: {
   881  0000' 2800'              	goto	l73
   882  0001'                    __end_of_main:	
   883                           
   884                           	psect	text1
   885  0000'                    __ptext1:	
   886 ;; *************** function _ISR *****************
   887 ;; Defined at:
   888 ;;		line 12 in file "ISR.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  i               2   42[BANK1 ] int 
   893 ;;  motorId         1   44[BANK1 ] unsigned char 
   894 ;;  data1           1   41[BANK1 ] unsigned char 
   895 ;;  received        1   45[BANK1 ] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0      11       0       0
   907 ;;      Temps:          0       0      18       0       0
   908 ;;      Totals:         0       0      29       0       0
   909 ;;Total ram usage:       29 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    5
   912 ;; This function calls:
   913 ;;		___awmod
   914 ;;		___awtoft
   915 ;;		___ftadd
   916 ;;		___ftdiv
   917 ;;		___ftmul
   918 ;;		___lbmod
   919 ;;		___wmul
   920 ;;		_disableTimer1
   921 ;;		_endTX
   922 ;;		_pow
   923 ;;		_ring_buffer_get
   924 ;;		_ring_buffer_put
   925 ;;		_ring_buffer_put_char
   926 ;;		_timerTick
   927 ;; This function is called by:
   928 ;;		Interrupt level 1
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _ISR
   934  0000'                    _ISR:	
   935                           
   936                           ;ISR.c: 14: if(RCIF)
   937  0000' 1283               	bcf	3,5	;RP0=0, select bank0
   938  0001' 1303               	bcf	3,6	;RP1=0, select bank0
   939  0002' 1E8C               	btfss	12,5	;volatile
   940  0003' 2800'              	goto	i1l2105
   941                           
   942                           ;ISR.c: 15: {
   943                           ;ISR.c: 16: unsigned char received = RCREG;
   944  0004' 081A               	movf	26,w	;volatile
   945  0005' 1683               	bsf	3,5	;RP0=1, select bank1
   946  0006' 1303               	bcf	3,6	;RP1=0, select bank1
   947  0007' 0080'              	movwf	??_ISR^(0+128)
   948  0008' 0800'              	movf	??_ISR^(0+128),w
   949  0009' 0080'              	movwf	ISR@received^(0+128)
   950                           
   951                           ;ISR.c: 17: if(OERR)
   952  000A' 1283               	bcf	3,5	;RP0=0, select bank0
   953  000B' 1303               	bcf	3,6	;RP1=0, select bank0
   954  000C' 1C98               	btfss	24,1	;volatile
   955  000D' 2800'              	goto	i1l2011
   956                           
   957                           ;ISR.c: 18: {
   958                           ;ISR.c: 19: CREN = 0;
   959  000E' 1218               	bcf	24,4	;volatile
   960                           
   961                           ;ISR.c: 20: CREN = 1;
   962  000F' 1618               	bsf	24,4	;volatile
   963  0010' 2800'              	goto	i1l2085
   964  0011'                    i1l2011:	
   965                           ;ISR.c: 22: }
   966                           
   967                           ;ISR.c: 21: uIndex = 0;
   968                           
   969                           
   970                           ;ISR.c: 23: else
   971                           ;ISR.c: 24: {
   972                           ;ISR.c: 25: if((received == 0xA || received == 254) && uIndex != 0){
   973  0011' 300A               	movlw	10
   974  0012' 1683               	bsf	3,5	;RP0=1, select bank1
   975  0013' 1303               	bcf	3,6	;RP1=0, select bank1
   976  0014' 0600'              	xorwf	ISR@received^(0+128),w
   977  0015' 1903               	btfsc	3,2
   978  0016' 2800'              	goto	i1l2015
   979  0017' 30FE               	movlw	254
   980  0018' 0600'              	xorwf	ISR@received^(0+128),w
   981  0019' 1D03               	btfss	3,2
   982  001A' 2800'              	goto	i1l2087
   983  001B'                    i1l2015:	
   984  001B' 0800'              	movf	_uIndex^(0+128),w
   985  001C' 1903               	btfsc	3,2
   986  001D' 2800'              	goto	i1l2087
   987                           
   988                           ;ISR.c: 26: uartRxData[uIndex] = received;
   989  001E' 0800'              	movf	ISR@received^(0+128),w
   990  001F' 0080'              	movwf	??_ISR^(0+128)
   991  0020' 0800'              	movf	_uIndex^(0+128),w
   992  0021' 3E00'              	addlw	(low (_uartRxData| 0))& (0+255)
   993  0022' 0084               	movwf	4
   994  0023' 0800'              	movf	??_ISR^(0+128),w
   995  0024' 1383               	bcf	3,7	;select IRP bank1
   996  0025' 0080               	movwf	0
   997                           
   998                           ;ISR.c: 27: if (uartRxData[0] == 'M' && uIndex == 6){
   999  0026' 304D               	movlw	77
  1000  0027' 0600'              	xorwf	_uartRxData^(0+128),w
  1001  0028' 1D03               	btfss	3,2
  1002  0029' 2800'              	goto	i1l2051
  1003  002A' 3006               	movlw	6
  1004  002B' 0600'              	xorwf	_uIndex^(0+128),w
  1005  002C' 1D03               	btfss	3,2
  1006  002D' 2800'              	goto	i1l2051
  1007                           
  1008                           ;ISR.c: 28: uint8_t motorId = ((uartRxData[1]>>4)&0x7)-3;
  1009  002E' 0801'              	movf	(_uartRxData^(0+128)+1),w
  1010  002F' 0080'              	movwf	??_ISR^(0+128)
  1011  0030' 3004               	movlw	4
  1012  0031'                    u289_25:	
  1013  0031' 1003               	clrc
  1014  0032' 0C80'              	rrf	??_ISR^(0+128),f
  1015  0033' 3EFF               	addlw	-1
  1016  0034' 1D03               	skipz
  1017  0035' 2800'              	goto	u289_25
  1018  0036' 0800'              	movf	??_ISR^(0+128),w
  1019  0037' 3907               	andlw	7
  1020  0038' 3EFD               	addlw	253
  1021  0039' 0080'              	movwf	(??_ISR+1)^(0+128)
  1022  003A' 0800'              	movf	(??_ISR+1)^(0+128),w
  1023  003B' 0080'              	movwf	ISR@motorId^(0+128)
  1024                           
  1025                           ;ISR.c: 29: if (mAttr[motorId].state == 3) mAttr[((uartRxData[1]>>4)&0x7)-3].state = 0;
  1026  003C' 0800'              	movf	ISR@motorId^(0+128),w
  1027  003D' 0080'              	movwf	??_ISR^(0+128)
  1028  003E' 0181'              	clrf	(??_ISR^(0+128)+1)
  1029  003F' 0800'              	movf	??_ISR^(0+128),w
  1030  0040' 0080'              	movwf	___wmul@multiplier
  1031  0041' 0800'              	movf	(??_ISR+1)^(0+128),w
  1032  0042' 0081'              	movwf	___wmul@multiplier+1
  1033  0043' 300B               	movlw	11
  1034  0044' 0082'              	movwf	___wmul@multiplicand
  1035  0045' 3000               	movlw	0
  1036  0046' 0083'              	movwf	___wmul@multiplicand+1
  1037  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1038  004C' 0800'              	movf	?___wmul,w
  1039  004D' 3E09               	addlw	9
  1040  004E' 1683               	bsf	3,5	;RP0=1, select bank1
  1041  004F' 1303               	bcf	3,6	;RP1=0, select bank1
  1042  0050' 0080'              	movwf	(??_ISR+2)^(0+128)
  1043  0051' 0801'              	movf	?___wmul+1,w
  1044  0052' 1803               	skipnc
  1045  0053' 3E01               	addlw	1
  1046  0054' 3E00               	addlw	0
  1047  0055' 0080'              	movwf	(??_ISR+3)^(0+128)
  1048  0056' 3000'              	movlw	low _mAttr
  1049  0057' 0080'              	movwf	(??_ISR+4)^(0+128)
  1050  0058' 3000'              	movlw	high _mAttr
  1051  0059' 0081'              	movwf	((??_ISR+4)^(0+128)+1)
  1052  005A' 0800'              	movf	(??_ISR+2)^(0+128),w
  1053  005B' 0700'              	addwf	(??_ISR+4)^(0+128),w
  1054  005C' 0080'              	movwf	(??_ISR+6)^(0+128)
  1055  005D' 0800'              	movf	(??_ISR+3)^(0+128),w
  1056  005E' 1803               	skipnc
  1057  005F' 0A00'              	incf	(??_ISR+3)^(0+128),w
  1058  0060' 0700'              	addwf	(??_ISR+5)^(0+128),w
  1059  0061' 0080'              	movwf	(??_ISR+7)^(0+128)
  1060  0062' 0800'              	movf	(??_ISR+6)^(0+128),w
  1061  0063' 0084               	movwf	4
  1062  0064' 1783               	bsf	3,7
  1063  0065' 1C00'              	btfss	(??_ISR+7)^(0+128),0
  1064  0066' 1383               	bcf	3,7
  1065  0067' 3003               	movlw	3
  1066  0068' 0600               	xorwf	0,w
  1067  0069' 1D03               	btfss	3,2
  1068  006A' 2800'              	goto	i1l2029
  1069  006B' 0801'              	movf	(_uartRxData^(0+128)+1),w
  1070  006C' 0080'              	movwf	??_ISR^(0+128)
  1071  006D' 3004               	movlw	4
  1072  006E'                    u291_25:	
  1073  006E' 1003               	clrc
  1074  006F' 0C80'              	rrf	??_ISR^(0+128),f
  1075  0070' 3EFF               	addlw	-1
  1076  0071' 1D03               	skipz
  1077  0072' 2800'              	goto	u291_25
  1078  0073' 0800'              	movf	??_ISR^(0+128),w
  1079  0074' 3907               	andlw	7
  1080  0075' 3EFD               	addlw	253
  1081  0076' 0080'              	movwf	___wmul@multiplier
  1082  0077' 30FF               	movlw	255
  1083  0078' 1803               	skipnc
  1084  0079' 3000               	movlw	0
  1085  007A' 0081'              	movwf	___wmul@multiplier+1
  1086  007B' 300B               	movlw	11
  1087  007C' 0082'              	movwf	___wmul@multiplicand
  1088  007D' 3000               	movlw	0
  1089  007E' 0083'              	movwf	___wmul@multiplicand+1
  1090  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1091  0084' 0800'              	movf	?___wmul,w
  1092  0085' 3E09               	addlw	9
  1093  0086' 1683               	bsf	3,5	;RP0=1, select bank1
  1094  0087' 1303               	bcf	3,6	;RP1=0, select bank1
  1095  0088' 0080'              	movwf	(??_ISR+1)^(0+128)
  1096  0089' 0801'              	movf	?___wmul+1,w
  1097  008A' 1803               	skipnc
  1098  008B' 3E01               	addlw	1
  1099  008C' 3E00               	addlw	0
  1100  008D' 0080'              	movwf	(??_ISR+2)^(0+128)
  1101  008E' 3000'              	movlw	low _mAttr
  1102  008F' 0080'              	movwf	(??_ISR+3)^(0+128)
  1103  0090' 3000'              	movlw	high _mAttr
  1104  0091' 0081'              	movwf	((??_ISR+3)^(0+128)+1)
  1105  0092' 0800'              	movf	(??_ISR+1)^(0+128),w
  1106  0093' 0700'              	addwf	(??_ISR+3)^(0+128),w
  1107  0094' 0080'              	movwf	(??_ISR+5)^(0+128)
  1108  0095' 0800'              	movf	(??_ISR+2)^(0+128),w
  1109  0096' 1803               	skipnc
  1110  0097' 0A00'              	incf	(??_ISR+2)^(0+128),w
  1111  0098' 0700'              	addwf	(??_ISR+4)^(0+128),w
  1112  0099' 0080'              	movwf	(??_ISR+6)^(0+128)
  1113  009A' 0800'              	movf	(??_ISR+5)^(0+128),w
  1114  009B' 0084               	movwf	4
  1115  009C' 1783               	bsf	3,7
  1116  009D' 1C00'              	btfss	(??_ISR+6)^(0+128),0
  1117  009E' 1383               	bcf	3,7
  1118  009F' 0180               	clrf	0
  1119  00A0'                    i1l2029:	
  1120                           
  1121                           ;ISR.c: 31: mAttr[motorId].requestedAngle = ((((uartRxData[1]&0x1)<<8)|uartRxData[2]) + 
      +                          (uartRxData[3]%100)/100.0)*pow(-1.0,((uartRxData[1]>>3)&0x1));
  1122  00A0' 0801'              	movf	(_uartRxData^(0+128)+1),w
  1123  00A1' 0080'              	movwf	??_ISR^(0+128)
  1124  00A2' 3003               	movlw	3
  1125  00A3'                    u292_25:	
  1126  00A3' 1003               	clrc
  1127  00A4' 0C80'              	rrf	??_ISR^(0+128),f
  1128  00A5' 3EFF               	addlw	-1
  1129  00A6' 1D03               	skipz
  1130  00A7' 2800'              	goto	u292_25
  1131  00A8' 0800'              	movf	??_ISR^(0+128),w
  1132  00A9' 3901               	andlw	1
  1133  00AA' 0080'              	movwf	(??_ISR+1)^(0+128)
  1134  00AB' 0181'              	clrf	((??_ISR+1)^(0+128)+1)
  1135  00AC' 0800'              	movf	(??_ISR+1)^(0+128),w
  1136  00AD' 0088'              	movwf	___awtoft@c
  1137  00AE' 0800'              	movf	(??_ISR+2)^(0+128),w
  1138  00AF' 0089'              	movwf	___awtoft@c+1
  1139  00B0' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  1140  00B5' 0808'              	movf	?___awtoft,w
  1141  00B6' 1683               	bsf	3,5	;RP0=1, select bank1
  1142  00B7' 1303               	bcf	3,6	;RP1=0, select bank1
  1143  00B8' 0080'              	movwf	_ISR$566^(0+128)
  1144  00B9' 0809'              	movf	?___awtoft+1,w
  1145  00BA' 0080'              	movwf	(_ISR$566+1)^(0+128)
  1146  00BB' 080A'              	movf	?___awtoft+2,w
  1147  00BC' 0080'              	movwf	(_ISR$566+2)^(0+128)
  1148                           
  1149                           ;ISR.c: 31: mAttr[motorId].requestedAngle = ((((uartRxData[1]&0x1)<<8)|uartRxData[2]) + 
      +                          (uartRxData[3]%100)/100.0)*pow(-1.0,((uartRxData[1]>>3)&0x1));
  1150  00BD' 0800'              	movf	_ISR$566^(0+128),w
  1151  00BE' 0080'              	movwf	pow@y^(0+128)
  1152  00BF' 0800'              	movf	(_ISR$566+1)^(0+128),w
  1153  00C0' 0080'              	movwf	(pow@y+1)^(0+128)
  1154  00C1' 0800'              	movf	(_ISR$566+2)^(0+128),w
  1155  00C2' 0080'              	movwf	(pow@y+2)^(0+128)
  1156  00C3' 3000               	movlw	0
  1157  00C4' 0080'              	movwf	pow@x^(0+128)
  1158  00C5' 3080               	movlw	128
  1159  00C6' 0080'              	movwf	(pow@x+1)^(0+128)
  1160  00C7' 30BF               	movlw	191
  1161  00C8' 0080'              	movwf	(pow@x+2)^(0+128)
  1162  00C9' 120A' 118A' 2000' 120A' 118A' 	fcall	_pow
  1163  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  1164  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  1165  00D0' 0800'              	movf	?_pow^(0+128),w
  1166  00D1' 0080'              	movwf	_ISR$567^(0+128)
  1167  00D2' 0800'              	movf	(?_pow+1)^(0+128),w
  1168  00D3' 0080'              	movwf	(_ISR$567+1)^(0+128)
  1169  00D4' 0800'              	movf	(?_pow+2)^(0+128),w
  1170  00D5' 0080'              	movwf	(_ISR$567+2)^(0+128)
  1171                           
  1172                           ;ISR.c: 31: mAttr[motorId].requestedAngle = ((((uartRxData[1]&0x1)<<8)|uartRxData[2]) + 
      +                          (uartRxData[3]%100)/100.0)*pow(-1.0,((uartRxData[1]>>3)&0x1));
  1173  00D6' 0800'              	movf	ISR@motorId^(0+128),w
  1174  00D7' 0080'              	movwf	??_ISR^(0+128)
  1175  00D8' 0181'              	clrf	(??_ISR^(0+128)+1)
  1176  00D9' 0800'              	movf	??_ISR^(0+128),w
  1177  00DA' 0080'              	movwf	___wmul@multiplier
  1178  00DB' 0800'              	movf	(??_ISR+1)^(0+128),w
  1179  00DC' 0081'              	movwf	___wmul@multiplier+1
  1180  00DD' 300B               	movlw	11
  1181  00DE' 0082'              	movwf	___wmul@multiplicand
  1182  00DF' 3000               	movlw	0
  1183  00E0' 0083'              	movwf	___wmul@multiplicand+1
  1184  00E1' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1185  00E6' 0800'              	movf	?___wmul,w
  1186  00E7' 3E03               	addlw	3
  1187  00E8' 1683               	bsf	3,5	;RP0=1, select bank1
  1188  00E9' 1303               	bcf	3,6	;RP1=0, select bank1
  1189  00EA' 0080'              	movwf	(??_ISR+2)^(0+128)
  1190  00EB' 0801'              	movf	?___wmul+1,w
  1191  00EC' 1803               	skipnc
  1192  00ED' 3E01               	addlw	1
  1193  00EE' 3E00               	addlw	0
  1194  00EF' 0080'              	movwf	(??_ISR+3)^(0+128)
  1195  00F0' 3000'              	movlw	low _mAttr
  1196  00F1' 0080'              	movwf	(??_ISR+4)^(0+128)
  1197  00F2' 3000'              	movlw	high _mAttr
  1198  00F3' 0081'              	movwf	((??_ISR+4)^(0+128)+1)
  1199  00F4' 0800'              	movf	(??_ISR+2)^(0+128),w
  1200  00F5' 0700'              	addwf	(??_ISR+4)^(0+128),w
  1201  00F6' 0080'              	movwf	(??_ISR+6)^(0+128)
  1202  00F7' 0800'              	movf	(??_ISR+3)^(0+128),w
  1203  00F8' 1803               	skipnc
  1204  00F9' 0A00'              	incf	(??_ISR+3)^(0+128),w
  1205  00FA' 0700'              	addwf	(??_ISR+5)^(0+128),w
  1206  00FB' 0080'              	movwf	(??_ISR+7)^(0+128)
  1207  00FC' 0800'              	movf	(??_ISR+6)^(0+128),w
  1208  00FD' 0084               	movwf	4
  1209  00FE' 1783               	bsf	3,7
  1210  00FF' 1C00'              	btfss	(??_ISR+7)^(0+128),0
  1211  0100' 1383               	bcf	3,7
  1212  0101' 0800'              	movf	_ISR$567^(0+128),w
  1213  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  1214  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  1215  0104' 009D'              	movwf	___ftmul@f1
  1216  0105' 1683               	bsf	3,5	;RP0=1, select bank1
  1217  0106' 1303               	bcf	3,6	;RP1=0, select bank1
  1218  0107' 0800'              	movf	(_ISR$567+1)^(0+128),w
  1219  0108' 1283               	bcf	3,5	;RP0=0, select bank0
  1220  0109' 1303               	bcf	3,6	;RP1=0, select bank0
  1221  010A' 009E'              	movwf	___ftmul@f1+1
  1222  010B' 1683               	bsf	3,5	;RP0=1, select bank1
  1223  010C' 1303               	bcf	3,6	;RP1=0, select bank1
  1224  010D' 0800'              	movf	(_ISR$567+2)^(0+128),w
  1225  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  1226  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  1227  0110' 009F'              	movwf	___ftmul@f1+2
  1228  0111' 1683               	bsf	3,5	;RP0=1, select bank1
  1229  0112' 1303               	bcf	3,6	;RP1=0, select bank1
  1230  0113' 0803'              	movf	(_uartRxData^(0+128)+3),w
  1231  0114' 0080'              	movwf	(??_ISR+8)^(0+128)
  1232  0115' 0181'              	clrf	((??_ISR+8)^(0+128)+1)
  1233  0116' 0800'              	movf	(??_ISR+8)^(0+128),w
  1234  0117' 0082'              	movwf	___awmod@dividend
  1235  0118' 0800'              	movf	(??_ISR+9)^(0+128),w
  1236  0119' 0083'              	movwf	___awmod@dividend+1
  1237  011A' 3064               	movlw	100
  1238  011B' 0080'              	movwf	___awmod@divisor
  1239  011C' 3000               	movlw	0
  1240  011D' 0081'              	movwf	___awmod@divisor+1
  1241  011E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  1242  0123' 0801'              	movf	?___awmod+1,w
  1243  0124' 0089'              	movwf	___awtoft@c+1
  1244  0125' 0800'              	movf	?___awmod,w
  1245  0126' 0088'              	movwf	___awtoft@c
  1246  0127' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  1247  012C' 0808'              	movf	?___awtoft,w
  1248  012D' 1283               	bcf	3,5	;RP0=0, select bank0
  1249  012E' 1303               	bcf	3,6	;RP1=0, select bank0
  1250  012F' 0083'              	movwf	___ftdiv@f1
  1251  0130' 0809'              	movf	?___awtoft+1,w
  1252  0131' 0084'              	movwf	___ftdiv@f1+1
  1253  0132' 080A'              	movf	?___awtoft+2,w
  1254  0133' 0085'              	movwf	___ftdiv@f1+2
  1255  0134' 3000               	movlw	0
  1256  0135' 0080'              	movwf	___ftdiv@f2
  1257  0136' 30C8               	movlw	200
  1258  0137' 0081'              	movwf	___ftdiv@f2+1
  1259  0138' 3042               	movlw	66
  1260  0139' 0082'              	movwf	___ftdiv@f2+2
  1261  013A' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  1262  013F' 1283               	bcf	3,5	;RP0=0, select bank0
  1263  0140' 1303               	bcf	3,6	;RP1=0, select bank0
  1264  0141' 0800'              	movf	?___ftdiv,w
  1265  0142' 0090'              	movwf	___ftadd@f1
  1266  0143' 0801'              	movf	?___ftdiv+1,w
  1267  0144' 0091'              	movwf	___ftadd@f1+1
  1268  0145' 0802'              	movf	?___ftdiv+2,w
  1269  0146' 0092'              	movwf	___ftadd@f1+2
  1270  0147' 1683               	bsf	3,5	;RP0=1, select bank1
  1271  0148' 1303               	bcf	3,6	;RP1=0, select bank1
  1272  0149' 0802'              	movf	(_uartRxData^(0+128)+2),w
  1273  014A' 0080'              	movwf	(??_ISR+10)^(0+128)
  1274  014B' 0181'              	clrf	((??_ISR+10)^(0+128)+1)
  1275  014C' 0801'              	movf	(_uartRxData^(0+128)+1),w
  1276  014D' 3901               	andlw	1
  1277  014E' 0080'              	movwf	(??_ISR+12)^(0+128)
  1278  014F' 0181'              	clrf	((??_ISR+12)^(0+128)+1)
  1279  0150' 0800'              	movf	(??_ISR+12)^(0+128),w
  1280  0151' 0081'              	movwf	((??_ISR+12)^(0+128)+1)
  1281  0152' 0180'              	clrf	(??_ISR+12)^(0+128)
  1282  0153' 0800'              	movf	(??_ISR+10)^(0+128),w
  1283  0154' 0400'              	iorwf	(??_ISR+12)^(0+128),w
  1284  0155' 0088'              	movwf	___awtoft@c
  1285  0156' 0800'              	movf	(??_ISR+11)^(0+128),w
  1286  0157' 0400'              	iorwf	(??_ISR+13)^(0+128),w
  1287  0158' 0089'              	movwf	___awtoft@c+1
  1288  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  1289  015E' 0808'              	movf	?___awtoft,w
  1290  015F' 1283               	bcf	3,5	;RP0=0, select bank0
  1291  0160' 1303               	bcf	3,6	;RP1=0, select bank0
  1292  0161' 0093'              	movwf	___ftadd@f2
  1293  0162' 0809'              	movf	?___awtoft+1,w
  1294  0163' 0094'              	movwf	___ftadd@f2+1
  1295  0164' 080A'              	movf	?___awtoft+2,w
  1296  0165' 0095'              	movwf	___ftadd@f2+2
  1297  0166' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  1298  016B' 1283               	bcf	3,5	;RP0=0, select bank0
  1299  016C' 1303               	bcf	3,6	;RP1=0, select bank0
  1300  016D' 0810'              	movf	?___ftadd,w
  1301  016E' 00A0'              	movwf	___ftmul@f2
  1302  016F' 0811'              	movf	?___ftadd+1,w
  1303  0170' 00A1'              	movwf	___ftmul@f2+1
  1304  0171' 0812'              	movf	?___ftadd+2,w
  1305  0172' 00A2'              	movwf	___ftmul@f2+2
  1306  0173' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  1307  0178' 1283               	bcf	3,5	;RP0=0, select bank0
  1308  0179' 1303               	bcf	3,6	;RP1=0, select bank0
  1309  017A' 081D'              	movf	?___ftmul,w
  1310  017B' 0080               	movwf	0
  1311  017C' 0A84               	incf	4,f
  1312  017D' 081E'              	movf	?___ftmul+1,w
  1313  017E' 0080               	movwf	0
  1314  017F' 0A84               	incf	4,f
  1315  0180' 081F'              	movf	?___ftmul+2,w
  1316  0181' 0080               	movwf	0
  1317                           
  1318                           ;ISR.c: 32: mAttr[motorId].speed = ((uartRxData[4]&0x7F)<<8)|uartRxData[5];
  1319  0182' 307F               	movlw	127
  1320  0183' 1683               	bsf	3,5	;RP0=1, select bank1
  1321  0184' 1303               	bcf	3,6	;RP1=0, select bank1
  1322  0185' 0504'              	andwf	(_uartRxData^(0+128)+4),w
  1323  0186' 0080'              	movwf	??_ISR^(0+128)
  1324  0187' 0800'              	movf	ISR@motorId^(0+128),w
  1325  0188' 0080'              	movwf	(??_ISR+1)^(0+128)
  1326  0189' 0181'              	clrf	((??_ISR+1)^(0+128)+1)
  1327  018A' 0800'              	movf	(??_ISR+1)^(0+128),w
  1328  018B' 0080'              	movwf	___wmul@multiplier
  1329  018C' 0800'              	movf	(??_ISR+2)^(0+128),w
  1330  018D' 0081'              	movwf	___wmul@multiplier+1
  1331  018E' 300B               	movlw	11
  1332  018F' 0082'              	movwf	___wmul@multiplicand
  1333  0190' 3000               	movlw	0
  1334  0191' 0083'              	movwf	___wmul@multiplicand+1
  1335  0192' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1336  0197' 0800'              	movf	?___wmul,w
  1337  0198' 3E06               	addlw	6
  1338  0199' 1683               	bsf	3,5	;RP0=1, select bank1
  1339  019A' 1303               	bcf	3,6	;RP1=0, select bank1
  1340  019B' 0080'              	movwf	(??_ISR+3)^(0+128)
  1341  019C' 0801'              	movf	?___wmul+1,w
  1342  019D' 1803               	skipnc
  1343  019E' 3E01               	addlw	1
  1344  019F' 3E00               	addlw	0
  1345  01A0' 0080'              	movwf	(??_ISR+4)^(0+128)
  1346  01A1' 3000'              	movlw	low _mAttr
  1347  01A2' 0080'              	movwf	(??_ISR+5)^(0+128)
  1348  01A3' 3000'              	movlw	high _mAttr
  1349  01A4' 0081'              	movwf	((??_ISR+5)^(0+128)+1)
  1350  01A5' 0800'              	movf	(??_ISR+3)^(0+128),w
  1351  01A6' 0700'              	addwf	(??_ISR+5)^(0+128),w
  1352  01A7' 0080'              	movwf	(??_ISR+7)^(0+128)
  1353  01A8' 0800'              	movf	(??_ISR+4)^(0+128),w
  1354  01A9' 1803               	skipnc
  1355  01AA' 0A00'              	incf	(??_ISR+4)^(0+128),w
  1356  01AB' 0700'              	addwf	(??_ISR+6)^(0+128),w
  1357  01AC' 0080'              	movwf	(??_ISR+8)^(0+128)
  1358  01AD' 0800'              	movf	(??_ISR+7)^(0+128),w
  1359  01AE' 0084               	movwf	4
  1360  01AF' 1783               	bsf	3,7
  1361  01B0' 1C00'              	btfss	(??_ISR+8)^(0+128),0
  1362  01B1' 1383               	bcf	3,7
  1363  01B2' 0805'              	movf	(_uartRxData^(0+128)+5),w
  1364  01B3' 0080               	movwf	0
  1365  01B4' 0A84               	incf	4,f
  1366  01B5' 0800'              	movf	??_ISR^(0+128),w
  1367  01B6' 0080               	movwf	0
  1368                           
  1369                           ;ISR.c: 33: ring_buffer_put_char(0,0xA);
  1370  01B7' 3000               	movlw	0
  1371  01B8' 0080'              	movwf	_ring_buffer_put_char$0
  1372  01B9' 0081'              	movwf	_ring_buffer_put_char$0+1
  1373  01BA' 300A               	movlw	10
  1374  01BB' 0080'              	movwf	??_ISR^(0+128)
  1375  01BC' 0800'              	movf	??_ISR^(0+128),w
  1376  01BD' 0082'              	movwf	_ring_buffer_put_char$1
  1377  01BE' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1378                           
  1379                           ;ISR.c: 34: ring_buffer_put(0,&uartRxData[0]);
  1380  01C3' 3000               	movlw	0
  1381  01C4' 0080'              	movwf	_ring_buffer_put$0
  1382  01C5' 0081'              	movwf	_ring_buffer_put$0+1
  1383  01C6' 3000'              	movlw	(low (_uartRxData| 0))& (0+255)
  1384  01C7' 1683               	bsf	3,5	;RP0=1, select bank1
  1385  01C8' 1303               	bcf	3,6	;RP1=0, select bank1
  1386  01C9' 0080'              	movwf	??_ISR^(0+128)
  1387  01CA' 0800'              	movf	??_ISR^(0+128),w
  1388  01CB' 0082'              	movwf	_ring_buffer_put$1
  1389  01CC' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put
  1390                           
  1391                           ;ISR.c: 35: ring_buffer_put_char(0,(uartRxData[1]>>4)&0x7);
  1392  01D1' 3000               	movlw	0
  1393  01D2' 0080'              	movwf	_ring_buffer_put_char$0
  1394  01D3' 0081'              	movwf	_ring_buffer_put_char$0+1
  1395  01D4' 1683               	bsf	3,5	;RP0=1, select bank1
  1396  01D5' 1303               	bcf	3,6	;RP1=0, select bank1
  1397  01D6' 0801'              	movf	(_uartRxData^(0+128)+1),w
  1398  01D7' 0080'              	movwf	??_ISR^(0+128)
  1399  01D8' 3004               	movlw	4
  1400  01D9'                    u293_25:	
  1401  01D9' 1003               	clrc
  1402  01DA' 0C80'              	rrf	??_ISR^(0+128),f
  1403  01DB' 3EFF               	addlw	-1
  1404  01DC' 1D03               	skipz
  1405  01DD' 2800'              	goto	u293_25
  1406  01DE' 0800'              	movf	??_ISR^(0+128),w
  1407  01DF' 3907               	andlw	7
  1408  01E0' 0080'              	movwf	(??_ISR+1)^(0+128)
  1409  01E1' 0800'              	movf	(??_ISR+1)^(0+128),w
  1410  01E2' 0082'              	movwf	_ring_buffer_put_char$1
  1411  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1412                           
  1413                           ;ISR.c: 36: ring_buffer_put_char(0,0x59);
  1414  01E8' 3000               	movlw	0
  1415  01E9' 0080'              	movwf	_ring_buffer_put_char$0
  1416  01EA' 0081'              	movwf	_ring_buffer_put_char$0+1
  1417  01EB' 3059               	movlw	89
  1418  01EC' 1683               	bsf	3,5	;RP0=1, select bank1
  1419  01ED' 1303               	bcf	3,6	;RP1=0, select bank1
  1420  01EE' 0080'              	movwf	??_ISR^(0+128)
  1421  01EF' 0800'              	movf	??_ISR^(0+128),w
  1422  01F0' 0082'              	movwf	_ring_buffer_put_char$1
  1423  01F1' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1424                           
  1425                           ;ISR.c: 37: ring_buffer_put_char(0,0xA);
  1426  01F6' 3000               	movlw	0
  1427  01F7' 0080'              	movwf	_ring_buffer_put_char$0
  1428  01F8' 0081'              	movwf	_ring_buffer_put_char$0+1
  1429  01F9' 300A               	movlw	10
  1430  01FA' 1683               	bsf	3,5	;RP0=1, select bank1
  1431  01FB' 1303               	bcf	3,6	;RP1=0, select bank1
  1432  01FC' 0080'              	movwf	??_ISR^(0+128)
  1433  01FD' 0800'              	movf	??_ISR^(0+128),w
  1434  01FE' 0082'              	movwf	_ring_buffer_put_char$1
  1435  01FF' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1436                           
  1437                           ;ISR.c: 38: if(!TXEN) TXEN = 1;
  1438  0204' 1683               	bsf	3,5	;RP0=1, select bank1
  1439  0205' 1303               	bcf	3,6	;RP1=0, select bank1
  1440  0206' 1A98               	btfsc	24,5	;volatile
  1441  0207' 2800'              	goto	i1l2085
  1442  0208' 1698               	bsf	24,5	;volatile
  1443                           
  1444                           ;ISR.c: 39: }
  1445  0209' 2800'              	goto	i1l2085
  1446  020A'                    i1l2051:	
  1447                           
  1448                           ;ISR.c: 40: else if((uartRxData[0] == 'M' || uartRxData[0] == 'S') && uIndex == 3){
  1449  020A' 304D               	movlw	77
  1450  020B' 0600'              	xorwf	_uartRxData^(0+128),w
  1451  020C' 1903               	btfsc	3,2
  1452  020D' 2800'              	goto	i1l2055
  1453  020E' 3053               	movlw	83
  1454  020F' 0600'              	xorwf	_uartRxData^(0+128),w
  1455  0210' 1D03               	btfss	3,2
  1456  0211' 2800'              	goto	i1l2073
  1457  0212'                    i1l2055:	
  1458  0212' 3003               	movlw	3
  1459  0213' 0600'              	xorwf	_uIndex^(0+128),w
  1460  0214' 1D03               	btfss	3,2
  1461  0215' 2800'              	goto	i1l2073
  1462                           
  1463                           ;ISR.c: 41: ring_buffer_put_char(0,0xA);
  1464  0216' 3000               	movlw	0
  1465  0217' 0080'              	movwf	_ring_buffer_put_char$0
  1466  0218' 0081'              	movwf	_ring_buffer_put_char$0+1
  1467  0219' 300A               	movlw	10
  1468  021A' 0080'              	movwf	??_ISR^(0+128)
  1469  021B' 0800'              	movf	??_ISR^(0+128),w
  1470  021C' 0082'              	movwf	_ring_buffer_put_char$1
  1471  021D' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1472                           
  1473                           ;ISR.c: 42: for(int i=0; i<3; i++)
  1474  0222' 1683               	bsf	3,5	;RP0=1, select bank1
  1475  0223' 1303               	bcf	3,6	;RP1=0, select bank1
  1476  0224' 0180'              	clrf	ISR@i^(0+128)
  1477  0225' 0180'              	clrf	(ISR@i+1)^(0+128)
  1478  0226'                    L3:	
  1479  0226' 0800'              	movf	(ISR@i+1)^(0+128),w
  1480  0227' 3A80               	xorlw	128
  1481  0228' 00FF               	movwf	127
  1482  0229' 3080               	movlw	128
  1483  022A' 027F               	subwf	127,w
  1484  022B' 1D03               	skipz
  1485  022C' 2800'              	goto	u298_25
  1486  022D' 3003               	movlw	3
  1487  022E' 0200'              	subwf	ISR@i^(0+128),w
  1488  022F'                    u298_25:	
  1489  022F' 1803               	btfsc	3,0
  1490  0230' 2800'              	goto	L2
  1491                           
  1492                           ;ISR.c: 43: ring_buffer_put(0,&uartRxData[i]);
  1493  0231' 3000               	movlw	0
  1494  0232' 0080'              	movwf	_ring_buffer_put$0
  1495  0233' 0081'              	movwf	_ring_buffer_put$0+1
  1496  0234' 1683               	bsf	3,5	;RP0=1, select bank1
  1497  0235' 1303               	bcf	3,6	;RP1=0, select bank1
  1498  0236' 0800'              	movf	ISR@i^(0+128),w
  1499  0237' 3E00'              	addlw	(low (_uartRxData| 0))& (0+255)
  1500  0238' 0080'              	movwf	??_ISR^(0+128)
  1501  0239' 0800'              	movf	??_ISR^(0+128),w
  1502  023A' 0082'              	movwf	_ring_buffer_put$1
  1503  023B' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put
  1504  0240' 3001               	movlw	1
  1505  0241' 1683               	bsf	3,5	;RP0=1, select bank1
  1506  0242' 1303               	bcf	3,6	;RP1=0, select bank1
  1507  0243' 0780'              	addwf	ISR@i^(0+128),f
  1508  0244' 1803               	skipnc
  1509  0245' 0A80'              	incf	(ISR@i+1)^(0+128),f
  1510  0246' 3000               	movlw	0
  1511  0247' 0780'              	addwf	(ISR@i+1)^(0+128),f
  1512  0248' 2800'              	goto	L3
  1513  0249'                    i1l2073:	
  1514                           ;ISR.c: 45: }
  1515                           
  1516                           ;ISR.c: 44: endTX();
  1517                           
  1518                           
  1519                           ;ISR.c: 46: else if(uartRxData[0] == 'S' && uIndex == 2){
  1520  0249' 3053               	movlw	83
  1521  024A' 1683               	bsf	3,5	;RP0=1, select bank1
  1522  024B' 1303               	bcf	3,6	;RP1=0, select bank1
  1523  024C' 0600'              	xorwf	_uartRxData^(0+128),w
  1524  024D' 1D03               	btfss	3,2
  1525  024E' 2800'              	goto	i1l2085
  1526  024F' 3002               	movlw	2
  1527  0250' 0600'              	xorwf	_uIndex^(0+128),w
  1528  0251' 1D03               	btfss	3,2
  1529  0252' 2800'              	goto	i1l2085
  1530                           
  1531                           ;ISR.c: 47: ring_buffer_put_char(0,0xA);
  1532  0253' 3000               	movlw	0
  1533  0254' 0080'              	movwf	_ring_buffer_put_char$0
  1534  0255' 0081'              	movwf	_ring_buffer_put_char$0+1
  1535  0256' 300A               	movlw	10
  1536  0257' 0080'              	movwf	??_ISR^(0+128)
  1537  0258' 0800'              	movf	??_ISR^(0+128),w
  1538  0259' 0082'              	movwf	_ring_buffer_put_char$1
  1539  025A' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1540                           
  1541                           ;ISR.c: 48: ring_buffer_put(0,&uartRxData[0]);
  1542  025F' 3000               	movlw	0
  1543  0260' 0080'              	movwf	_ring_buffer_put$0
  1544  0261' 0081'              	movwf	_ring_buffer_put$0+1
  1545  0262' 3000'              	movlw	(low (_uartRxData| 0))& (0+255)
  1546  0263' 1683               	bsf	3,5	;RP0=1, select bank1
  1547  0264' 1303               	bcf	3,6	;RP1=0, select bank1
  1548  0265' 0080'              	movwf	??_ISR^(0+128)
  1549  0266' 0800'              	movf	??_ISR^(0+128),w
  1550  0267' 0082'              	movwf	_ring_buffer_put$1
  1551  0268' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put
  1552                           
  1553                           ;ISR.c: 49: ring_buffer_put(0,&uartRxData[1]);
  1554  026D' 3000               	movlw	0
  1555  026E' 0080'              	movwf	_ring_buffer_put$0
  1556  026F' 0081'              	movwf	_ring_buffer_put$0+1
  1557  0270' 3000'              	movlw	(low ((_uartRxData| 0+1)))& (0+255)
  1558  0271' 1683               	bsf	3,5	;RP0=1, select bank1
  1559  0272' 1303               	bcf	3,6	;RP1=0, select bank1
  1560  0273' 0080'              	movwf	??_ISR^(0+128)
  1561  0274' 0800'              	movf	??_ISR^(0+128),w
  1562  0275' 0082'              	movwf	_ring_buffer_put$1
  1563  0276' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put
  1564                           
  1565                           ;ISR.c: 50: if(mAttr[uartRxData[1]-3].state == 3)
  1566  027B' 1683               	bsf	3,5	;RP0=1, select bank1
  1567  027C' 1303               	bcf	3,6	;RP1=0, select bank1
  1568  027D' 0801'              	movf	(_uartRxData^(0+128)+1),w
  1569  027E' 3EFD               	addlw	253
  1570  027F' 0080'              	movwf	___wmul@multiplier
  1571  0280' 30FF               	movlw	255
  1572  0281' 1803               	skipnc
  1573  0282' 3000               	movlw	0
  1574  0283' 0081'              	movwf	___wmul@multiplier+1
  1575  0284' 300B               	movlw	11
  1576  0285' 0082'              	movwf	___wmul@multiplicand
  1577  0286' 3000               	movlw	0
  1578  0287' 0083'              	movwf	___wmul@multiplicand+1
  1579  0288' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1580  028D' 0800'              	movf	?___wmul,w
  1581  028E' 3E09               	addlw	9
  1582  028F' 1683               	bsf	3,5	;RP0=1, select bank1
  1583  0290' 1303               	bcf	3,6	;RP1=0, select bank1
  1584  0291' 0080'              	movwf	??_ISR^(0+128)
  1585  0292' 0801'              	movf	?___wmul+1,w
  1586  0293' 1803               	skipnc
  1587  0294' 3E01               	addlw	1
  1588  0295' 3E00               	addlw	0
  1589  0296' 0080'              	movwf	(??_ISR+1)^(0+128)
  1590  0297' 3000'              	movlw	low _mAttr
  1591  0298' 0080'              	movwf	(??_ISR+2)^(0+128)
  1592  0299' 3000'              	movlw	high _mAttr
  1593  029A' 0081'              	movwf	((??_ISR+2)^(0+128)+1)
  1594  029B' 0800'              	movf	??_ISR^(0+128),w
  1595  029C' 0700'              	addwf	(??_ISR+2)^(0+128),w
  1596  029D' 0080'              	movwf	(??_ISR+4)^(0+128)
  1597  029E' 0800'              	movf	(??_ISR+1)^(0+128),w
  1598  029F' 1803               	skipnc
  1599  02A0' 0A00'              	incf	(??_ISR+1)^(0+128),w
  1600  02A1' 0700'              	addwf	(??_ISR+3)^(0+128),w
  1601  02A2' 0080'              	movwf	(??_ISR+5)^(0+128)
  1602  02A3' 0800'              	movf	(??_ISR+4)^(0+128),w
  1603  02A4' 0084               	movwf	4
  1604  02A5' 1783               	bsf	3,7
  1605  02A6' 1C00'              	btfss	(??_ISR+5)^(0+128),0
  1606  02A7' 1383               	bcf	3,7
  1607  02A8' 3003               	movlw	3
  1608  02A9' 0600               	xorwf	0,w
  1609  02AA' 1D03               	btfss	3,2
  1610  02AB' 2800'              	goto	i1l2083
  1611                           
  1612                           ;ISR.c: 51: ring_buffer_put_char(0,'I');
  1613  02AC' 3000               	movlw	0
  1614  02AD' 0080'              	movwf	_ring_buffer_put_char$0
  1615  02AE' 0081'              	movwf	_ring_buffer_put_char$0+1
  1616  02AF' 3049               	movlw	73
  1617  02B0' 2800'              	goto	L1
  1618  02B1'                    i1l2083:	
  1619                           
  1620                           ;ISR.c: 52: else
  1621                           ;ISR.c: 53: ring_buffer_put_char(0,'B');
  1622  02B1' 3000               	movlw	0
  1623  02B2' 0080'              	movwf	_ring_buffer_put_char$0
  1624  02B3' 0081'              	movwf	_ring_buffer_put_char$0+1
  1625  02B4' 3042               	movlw	66
  1626  02B5' 1683               	bsf	3,5	;RP0=1, select bank1
  1627  02B6' 1303               	bcf	3,6	;RP1=0, select bank1
  1628  02B7'                    L1:	
  1629  02B7' 0080'              	movwf	??_ISR^(0+128)
  1630  02B8' 0800'              	movf	??_ISR^(0+128),w
  1631  02B9' 0082'              	movwf	_ring_buffer_put_char$1
  1632  02BA' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  1633  02BF'                    L2:	
  1634                           
  1635                           ;ISR.c: 54: endTX();
  1636  02BF' 120A' 118A' 2000' 120A' 118A' 	fcall	_endTX
  1637  02C4'                    i1l2085:	
  1638                           
  1639                           ;ISR.c: 55: }
  1640                           ;ISR.c: 66: uIndex = 0;
  1641  02C4' 1683               	bsf	3,5	;RP0=1, select bank1
  1642  02C5' 1303               	bcf	3,6	;RP1=0, select bank1
  1643  02C6' 0180'              	clrf	_uIndex^(0+128)
  1644                           
  1645                           ;ISR.c: 67: }
  1646  02C7' 2800'              	goto	i1l2105
  1647  02C8'                    i1l2087:	
  1648                           
  1649                           ;ISR.c: 68: else if(received != 0xA && received != 254 )
  1650  02C8' 300A               	movlw	10
  1651  02C9' 0600'              	xorwf	ISR@received^(0+128),w
  1652  02CA' 1903               	btfsc	3,2
  1653  02CB' 2800'              	goto	i1l2105
  1654  02CC' 30FE               	movlw	254
  1655  02CD' 0600'              	xorwf	ISR@received^(0+128),w
  1656  02CE' 1903               	btfsc	3,2
  1657  02CF' 2800'              	goto	i1l2105
  1658                           
  1659                           ;ISR.c: 69: {
  1660                           ;ISR.c: 70: if(uartRxData[0] == 'S' && received == 0 && uIndex >1){
  1661  02D0' 3053               	movlw	83
  1662  02D1' 0600'              	xorwf	_uartRxData^(0+128),w
  1663  02D2' 1D03               	btfss	3,2
  1664  02D3' 2800'              	goto	i1l2099
  1665  02D4' 0800'              	movf	ISR@received^(0+128),w
  1666  02D5' 1D03               	btfss	3,2
  1667  02D6' 2800'              	goto	i1l2099
  1668  02D7' 3002               	movlw	2
  1669  02D8' 0200'              	subwf	_uIndex^(0+128),w
  1670  02D9' 1803               	btfsc	3,0
  1671  02DA' 2800'              	goto	i1l2103
  1672  02DB'                    i1l2099:	
  1673                           ;ISR.c: 71: }else{
  1674                           
  1675                           
  1676                           ;ISR.c: 72: uartRxData[uIndex++] = received;
  1677  02DB' 0800'              	movf	ISR@received^(0+128),w
  1678  02DC' 0080'              	movwf	??_ISR^(0+128)
  1679  02DD' 0800'              	movf	_uIndex^(0+128),w
  1680  02DE' 3E00'              	addlw	(low (_uartRxData| 0))& (0+255)
  1681  02DF' 0084               	movwf	4
  1682  02E0' 0800'              	movf	??_ISR^(0+128),w
  1683  02E1' 1383               	bcf	3,7	;select IRP bank1
  1684  02E2' 0080               	movwf	0
  1685  02E3' 3001               	movlw	1
  1686  02E4' 0080'              	movwf	??_ISR^(0+128)
  1687  02E5' 0800'              	movf	??_ISR^(0+128),w
  1688  02E6' 0780'              	addwf	_uIndex^(0+128),f
  1689  02E7'                    i1l2103:	
  1690                           
  1691                           ;ISR.c: 73: }
  1692                           ;ISR.c: 75: uIndex %= 10;
  1693  02E7' 300A               	movlw	10
  1694  02E8' 0080'              	movwf	??_ISR^(0+128)
  1695  02E9' 0800'              	movf	??_ISR^(0+128),w
  1696  02EA' 0080'              	movwf	___lbmod@divisor
  1697  02EB' 0800'              	movf	_uIndex^(0+128),w
  1698  02EC' 120A' 118A' 2000' 120A' 118A' 	fcall	___lbmod
  1699  02F1' 1683               	bsf	3,5	;RP0=1, select bank1
  1700  02F2' 1303               	bcf	3,6	;RP1=0, select bank1
  1701  02F3' 0080'              	movwf	(??_ISR+1)^(0+128)
  1702  02F4' 0800'              	movf	(??_ISR+1)^(0+128),w
  1703  02F5' 0080'              	movwf	_uIndex^(0+128)
  1704  02F6'                    i1l2105:	
  1705                           
  1706                           ;ISR.c: 76: }
  1707                           ;ISR.c: 77: }
  1708                           ;ISR.c: 78: }
  1709                           ;ISR.c: 79: if(TXIF){
  1710  02F6' 1283               	bcf	3,5	;RP0=0, select bank0
  1711  02F7' 1E0C               	btfss	12,4	;volatile
  1712  02F8' 2800'              	goto	i1l62
  1713                           
  1714                           ;ISR.c: 80: unsigned char data1;
  1715                           ;ISR.c: 81: if((ring_buffer_get(0,&data1)) == 0)
  1716  02F9' 3000               	movlw	0
  1717  02FA' 0080'              	movwf	_ring_buffer_get$0
  1718  02FB' 0081'              	movwf	_ring_buffer_get$0+1
  1719  02FC' 3000'              	movlw	(low (ISR@data1| 0))& (0+255)
  1720  02FD' 1683               	bsf	3,5	;RP0=1, select bank1
  1721  02FE' 1303               	bcf	3,6	;RP1=0, select bank1
  1722  02FF' 0080'              	movwf	??_ISR^(0+128)
  1723  0300' 0800'              	movf	??_ISR^(0+128),w
  1724  0301' 0082'              	movwf	_ring_buffer_get$1
  1725  0302' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_get
  1726  0307' 0800'              	movf	?_ring_buffer_get,w
  1727  0308' 0401'              	iorwf	?_ring_buffer_get+1,w
  1728  0309' 1D03               	btfss	3,2
  1729  030A' 2800'              	goto	i1l63
  1730                           
  1731                           ;ISR.c: 82: TXREG = data1;
  1732  030B' 1683               	bsf	3,5	;RP0=1, select bank1
  1733  030C' 1303               	bcf	3,6	;RP1=0, select bank1
  1734  030D' 0800'              	movf	ISR@data1^(0+128),w
  1735  030E' 1283               	bcf	3,5	;RP0=0, select bank0
  1736  030F' 1303               	bcf	3,6	;RP1=0, select bank0
  1737  0310' 0099               	movwf	25	;volatile
  1738  0311' 2800'              	goto	i1l62
  1739  0312'                    i1l63:	
  1740                           
  1741                           ;ISR.c: 84: else
  1742                           ;ISR.c: 85: TXEN = 0;
  1743  0312' 1683               	bsf	3,5	;RP0=1, select bank1
  1744  0313' 1303               	bcf	3,6	;RP1=0, select bank1
  1745  0314' 1298               	bcf	24,5	;volatile
  1746  0315'                    i1l62:	
  1747                           
  1748                           ;ISR.c: 86: }
  1749                           ;ISR.c: 135: if(TMR1IF)
  1750  0315' 1283               	bcf	3,5	;RP0=0, select bank0
  1751  0316' 1C0C               	btfss	12,0	;volatile
  1752  0317' 2800'              	goto	i1l66
  1753                           
  1754                           ;ISR.c: 136: {
  1755                           ;ISR.c: 137: disableTimer1();
  1756  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	_disableTimer1
  1757                           
  1758                           ;ISR.c: 138: TMR1IF = 0;
  1759  031D' 1283               	bcf	3,5	;RP0=0, select bank0
  1760  031E' 1303               	bcf	3,6	;RP1=0, select bank0
  1761  031F' 100C               	bcf	12,0	;volatile
  1762                           
  1763                           ;ISR.c: 139: timerTick();
  1764  0320' 120A' 118A' 2000' 120A' 118A' 	fcall	_timerTick
  1765  0325'                    i1l66:	
  1766  0325' 1683               	bsf	3,5	;RP0=1, select bank1
  1767  0326' 1303               	bcf	3,6	;RP1=0, select bank1
  1768  0327' 0800'              	movf	(??_ISR+17)^(0+128),w
  1769  0328' 1283               	bcf	3,5	;RP0=0, select bank0
  1770  0329' 1303               	bcf	3,6	;RP1=0, select bank0
  1771  032A' 00FF               	movwf	127
  1772  032B' 1683               	bsf	3,5	;RP0=1, select bank1
  1773  032C' 1303               	bcf	3,6	;RP1=0, select bank1
  1774  032D' 0800'              	movf	(??_ISR+16)^(0+128),w
  1775  032E' 008A               	movwf	10
  1776  032F' 0800'              	movf	(??_ISR+15)^(0+128),w
  1777  0330' 0084               	movwf	4
  1778  0331' 0E00'              	swapf	(??_ISR+14)^(0+128),w
  1779  0332' 0083               	movwf	3
  1780  0333' 0EFE               	swapf	126,f
  1781  0334' 0E7E               	swapf	126,w
  1782  0335' 0009               	retfie
  1783  0336'                    __end_of_ISR:	
  1784                           
  1785                           	psect	intentry
  1786  0000'                    __pintentry:	
  1787                           ;incstack = 0
  1788                           ; Regs used in _ISR: [allreg]
  1789                           
  1790  0000'                    interrupt_function:	
  1791  007E                     saved_w	set	btemp
  1792  0000' 00FE               	movwf	btemp
  1793  0001' 0E03               	swapf	3,w
  1794  0002' 1683               	bsf	3,5	;RP0=1, select bank1
  1795  0003' 1303               	bcf	3,6	;RP1=0, select bank1
  1796  0004' 0080'              	movwf	(??_ISR+14)^(0+128)
  1797  0005' 0804               	movf	4,w
  1798  0006' 0080'              	movwf	(??_ISR+15)^(0+128)
  1799  0007' 080A               	movf	10,w
  1800  0008' 0080'              	movwf	(??_ISR+16)^(0+128)
  1801  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  1802  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  1803  000B' 087F               	movf	btemp+1,w
  1804  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  1805  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  1806  000E' 0080'              	movwf	(??_ISR+17)^(0+128)
  1807  000F' 120A' 118A' 2800'  	ljmp	_ISR
  1808                           
  1809                           	psect	text2
  1810  0000'                    __ptext2:	
  1811 ;; *************** function _pow *****************
  1812 ;; Defined at:
  1813 ;;		line 5 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\pow.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  x               3    0[BANK1 ] void 
  1816 ;;  y               3    3[BANK1 ] void 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  yi              4   13[BANK1 ] unsigned long 
  1819 ;;  sign            1   12[BANK1 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  3    0[BANK1 ] unsigned char 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       6       0       0
  1830 ;;      Locals:         0       0      11       0       0
  1831 ;;      Temps:          0       1       0       0       0
  1832 ;;      Totals:         0       1      17       0       0
  1833 ;;Total ram usage:       18 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    4
  1836 ;; This function calls:
  1837 ;;		___ftge
  1838 ;;		___ftmul
  1839 ;;		___ftneg
  1840 ;;		___fttol
  1841 ;;		___lltoft
  1842 ;;		_exp
  1843 ;;		_log
  1844 ;; This function is called by:
  1845 ;;		_ISR
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _pow
  1851  0000'                    _pow:	
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1855  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1856  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1857  0002' 0180'              	clrf	pow@sign^(0+128)
  1858  0003' 0800'              	movf	(pow@x+2)^(0+128),w
  1859  0004' 0400'              	iorwf	(pow@x+1)^(0+128),w
  1860  0005' 0400'              	iorwf	pow@x^(0+128),w
  1861  0006' 1D03               	skipz
  1862  0007' 2800'              	goto	i1l1897
  1863  0008' 3000               	movlw	0
  1864  0009' 0080'              	movwf	___ftge@ff1
  1865  000A' 3000               	movlw	0
  1866  000B' 0081'              	movwf	___ftge@ff1+1
  1867  000C' 3000               	movlw	0
  1868  000D' 0082'              	movwf	___ftge@ff1+2
  1869  000E' 0800'              	movf	pow@y^(0+128),w
  1870  000F' 0083'              	movwf	___ftge@ff2
  1871  0010' 0800'              	movf	(pow@y+1)^(0+128),w
  1872  0011' 0084'              	movwf	___ftge@ff2+1
  1873  0012' 0800'              	movf	(pow@y+2)^(0+128),w
  1874  0013' 0085'              	movwf	___ftge@ff2+2
  1875  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  1876  0019' 1C03               	btfss	3,0
  1877  001A' 2800'              	goto	i1l524
  1878  001B' 3021               	movlw	33
  1879  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  1880  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  1881  001E' 0080'              	movwf	_errno^(0+128)
  1882  001F' 3000               	movlw	0
  1883  0020' 0081'              	movwf	(_errno^(0+128)+1)
  1884  0021'                    i1l524:	
  1885  0021' 3000               	movlw	0
  1886  0022' 1683               	bsf	3,5	;RP0=1, select bank1
  1887  0023' 1303               	bcf	3,6	;RP1=0, select bank1
  1888  0024' 0080'              	movwf	?_pow^(0+128)
  1889  0025' 3000               	movlw	0
  1890  0026' 0080'              	movwf	(?_pow+1)^(0+128)
  1891  0027' 3000               	movlw	0
  1892  0028' 0080'              	movwf	(?_pow+2)^(0+128)
  1893  0029' 0008               	return
  1894  002A'                    i1l1897:	
  1895  002A' 0800'              	movf	(pow@y+2)^(0+128),w
  1896  002B' 0400'              	iorwf	(pow@y+1)^(0+128),w
  1897  002C' 0400'              	iorwf	pow@y^(0+128),w
  1898  002D' 1D03               	skipz
  1899  002E' 2800'              	goto	i1l1903
  1900  002F' 3000               	movlw	0
  1901  0030' 0080'              	movwf	?_pow^(0+128)
  1902  0031' 3080               	movlw	128
  1903  0032' 0080'              	movwf	(?_pow+1)^(0+128)
  1904  0033' 303F               	movlw	63
  1905  0034' 0080'              	movwf	(?_pow+2)^(0+128)
  1906  0035' 0008               	return
  1907  0036'                    i1l1903:	
  1908  0036' 0800'              	movf	pow@x^(0+128),w
  1909  0037' 0080'              	movwf	___ftge@ff1
  1910  0038' 0800'              	movf	(pow@x+1)^(0+128),w
  1911  0039' 0081'              	movwf	___ftge@ff1+1
  1912  003A' 0800'              	movf	(pow@x+2)^(0+128),w
  1913  003B' 0082'              	movwf	___ftge@ff1+2
  1914  003C' 3000               	movlw	0
  1915  003D' 0083'              	movwf	___ftge@ff2
  1916  003E' 3000               	movlw	0
  1917  003F' 0084'              	movwf	___ftge@ff2+1
  1918  0040' 3000               	movlw	0
  1919  0041' 0085'              	movwf	___ftge@ff2+2
  1920  0042' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  1921  0047' 1803               	btfsc	3,0
  1922  0048' 2800'              	goto	i1l1915
  1923  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  1924  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  1925  004B' 0800'              	movf	pow@y^(0+128),w
  1926  004C' 0080'              	movwf	___fttol@f1
  1927  004D' 0800'              	movf	(pow@y+1)^(0+128),w
  1928  004E' 0081'              	movwf	___fttol@f1+1
  1929  004F' 0800'              	movf	(pow@y+2)^(0+128),w
  1930  0050' 0082'              	movwf	___fttol@f1+2
  1931  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  1932  0056' 0803'              	movf	?___fttol+3,w
  1933  0057' 1683               	bsf	3,5	;RP0=1, select bank1
  1934  0058' 1303               	bcf	3,6	;RP1=0, select bank1
  1935  0059' 0080'              	movwf	(pow@yi+3)^(0+128)
  1936  005A' 0802'              	movf	?___fttol+2,w
  1937  005B' 0080'              	movwf	(pow@yi+2)^(0+128)
  1938  005C' 0801'              	movf	?___fttol+1,w
  1939  005D' 0080'              	movwf	(pow@yi+1)^(0+128)
  1940  005E' 0800'              	movf	?___fttol,w
  1941  005F' 0080'              	movwf	pow@yi^(0+128)
  1942  0060' 0800'              	movf	(pow@yi+3)^(0+128),w
  1943  0061' 008B'              	movwf	___lltoft@c+3
  1944  0062' 0800'              	movf	(pow@yi+2)^(0+128),w
  1945  0063' 008A'              	movwf	___lltoft@c+2
  1946  0064' 0800'              	movf	(pow@yi+1)^(0+128),w
  1947  0065' 0089'              	movwf	___lltoft@c+1
  1948  0066' 0800'              	movf	pow@yi^(0+128),w
  1949  0067' 0088'              	movwf	___lltoft@c
  1950  0068' 120A' 118A' 2000' 120A' 118A' 	fcall	___lltoft
  1951  006D' 1683               	bsf	3,5	;RP0=1, select bank1
  1952  006E' 1303               	bcf	3,6	;RP1=0, select bank1
  1953  006F' 0800'              	movf	(pow@y+2)^(0+128),w
  1954  0070' 060A'              	xorwf	?___lltoft+2,w
  1955  0071' 1D03               	skipz
  1956  0072' 2800'              	goto	u263_25
  1957  0073' 0800'              	movf	(pow@y+1)^(0+128),w
  1958  0074' 0609'              	xorwf	?___lltoft+1,w
  1959  0075' 1D03               	skipz
  1960  0076' 2800'              	goto	u263_25
  1961  0077' 0800'              	movf	pow@y^(0+128),w
  1962  0078' 0608'              	xorwf	?___lltoft,w
  1963  0079'                    u263_25:	
  1964  0079' 1903               	skipnz
  1965  007A' 2800'              	goto	i1l1911
  1966  007B' 3021               	movlw	33
  1967  007C' 0080'              	movwf	_errno^(0+128)
  1968  007D' 3000               	movlw	0
  1969  007E' 0081'              	movwf	(_errno^(0+128)+1)
  1970  007F' 3000               	movlw	0
  1971  0080' 0080'              	movwf	?_pow^(0+128)
  1972  0081' 3000               	movlw	0
  1973  0082' 0080'              	movwf	(?_pow+1)^(0+128)
  1974  0083' 3000               	movlw	0
  1975  0084' 0080'              	movwf	(?_pow+2)^(0+128)
  1976  0085' 0008               	return
  1977  0086'                    i1l1911:	
  1978  0086' 0800'              	movf	pow@yi^(0+128),w
  1979  0087' 3901               	andlw	1
  1980  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  1981  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  1982  008A' 00CE'              	movwf	??_pow
  1983  008B' 084E'              	movf	??_pow,w
  1984  008C' 1683               	bsf	3,5	;RP0=1, select bank1
  1985  008D' 1303               	bcf	3,6	;RP1=0, select bank1
  1986  008E' 0080'              	movwf	pow@sign^(0+128)
  1987  008F' 0800'              	movf	pow@x^(0+128),w
  1988  0090' 0080'              	movwf	___ftneg@f1
  1989  0091' 0800'              	movf	(pow@x+1)^(0+128),w
  1990  0092' 0081'              	movwf	___ftneg@f1+1
  1991  0093' 0800'              	movf	(pow@x+2)^(0+128),w
  1992  0094' 0082'              	movwf	___ftneg@f1+2
  1993  0095' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  1994  009A' 0800'              	movf	?___ftneg,w
  1995  009B' 1683               	bsf	3,5	;RP0=1, select bank1
  1996  009C' 1303               	bcf	3,6	;RP1=0, select bank1
  1997  009D' 0080'              	movwf	pow@x^(0+128)
  1998  009E' 0801'              	movf	?___ftneg+1,w
  1999  009F' 0080'              	movwf	(pow@x+1)^(0+128)
  2000  00A0' 0802'              	movf	?___ftneg+2,w
  2001  00A1' 0080'              	movwf	(pow@x+2)^(0+128)
  2002  00A2'                    i1l1915:	
  2003  00A2' 1683               	bsf	3,5	;RP0=1, select bank1
  2004  00A3' 1303               	bcf	3,6	;RP1=0, select bank1
  2005  00A4' 0800'              	movf	pow@x^(0+128),w
  2006  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
  2007  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
  2008  00A7' 00B7'              	movwf	log@x
  2009  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
  2010  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
  2011  00AA' 0800'              	movf	(pow@x+1)^(0+128),w
  2012  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  2013  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  2014  00AD' 00B8'              	movwf	log@x+1
  2015  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  2016  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
  2017  00B0' 0800'              	movf	(pow@x+2)^(0+128),w
  2018  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  2019  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  2020  00B3' 00B9'              	movwf	log@x+2
  2021  00B4' 120A' 118A' 2000' 120A' 118A' 	fcall	_log
  2022  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  2023  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  2024  00BB' 0837'              	movf	?_log,w
  2025  00BC' 1683               	bsf	3,5	;RP0=1, select bank1
  2026  00BD' 1303               	bcf	3,6	;RP1=0, select bank1
  2027  00BE' 0080'              	movwf	_pow$568^(0+128)
  2028  00BF' 1283               	bcf	3,5	;RP0=0, select bank0
  2029  00C0' 1303               	bcf	3,6	;RP1=0, select bank0
  2030  00C1' 0838'              	movf	?_log+1,w
  2031  00C2' 1683               	bsf	3,5	;RP0=1, select bank1
  2032  00C3' 1303               	bcf	3,6	;RP1=0, select bank1
  2033  00C4' 0080'              	movwf	(_pow$568+1)^(0+128)
  2034  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  2035  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  2036  00C7' 0839'              	movf	?_log+2,w
  2037  00C8' 1683               	bsf	3,5	;RP0=1, select bank1
  2038  00C9' 1303               	bcf	3,6	;RP1=0, select bank1
  2039  00CA' 0080'              	movwf	(_pow$568+2)^(0+128)
  2040  00CB' 0800'              	movf	pow@y^(0+128),w
  2041  00CC' 1283               	bcf	3,5	;RP0=0, select bank0
  2042  00CD' 1303               	bcf	3,6	;RP1=0, select bank0
  2043  00CE' 009D'              	movwf	___ftmul@f1
  2044  00CF' 1683               	bsf	3,5	;RP0=1, select bank1
  2045  00D0' 1303               	bcf	3,6	;RP1=0, select bank1
  2046  00D1' 0800'              	movf	(pow@y+1)^(0+128),w
  2047  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  2048  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  2049  00D4' 009E'              	movwf	___ftmul@f1+1
  2050  00D5' 1683               	bsf	3,5	;RP0=1, select bank1
  2051  00D6' 1303               	bcf	3,6	;RP1=0, select bank1
  2052  00D7' 0800'              	movf	(pow@y+2)^(0+128),w
  2053  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
  2054  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
  2055  00DA' 009F'              	movwf	___ftmul@f1+2
  2056  00DB' 1683               	bsf	3,5	;RP0=1, select bank1
  2057  00DC' 1303               	bcf	3,6	;RP1=0, select bank1
  2058  00DD' 0800'              	movf	_pow$568^(0+128),w
  2059  00DE' 1283               	bcf	3,5	;RP0=0, select bank0
  2060  00DF' 1303               	bcf	3,6	;RP1=0, select bank0
  2061  00E0' 00A0'              	movwf	___ftmul@f2
  2062  00E1' 1683               	bsf	3,5	;RP0=1, select bank1
  2063  00E2' 1303               	bcf	3,6	;RP1=0, select bank1
  2064  00E3' 0800'              	movf	(_pow$568+1)^(0+128),w
  2065  00E4' 1283               	bcf	3,5	;RP0=0, select bank0
  2066  00E5' 1303               	bcf	3,6	;RP1=0, select bank0
  2067  00E6' 00A1'              	movwf	___ftmul@f2+1
  2068  00E7' 1683               	bsf	3,5	;RP0=1, select bank1
  2069  00E8' 1303               	bcf	3,6	;RP1=0, select bank1
  2070  00E9' 0800'              	movf	(_pow$568+2)^(0+128),w
  2071  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  2072  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  2073  00EC' 00A2'              	movwf	___ftmul@f2+2
  2074  00ED' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  2075  00F2' 1283               	bcf	3,5	;RP0=0, select bank0
  2076  00F3' 1303               	bcf	3,6	;RP1=0, select bank0
  2077  00F4' 081D'              	movf	?___ftmul,w
  2078  00F5' 1683               	bsf	3,5	;RP0=1, select bank1
  2079  00F6' 1303               	bcf	3,6	;RP1=0, select bank1
  2080  00F7' 0080'              	movwf	_pow$569^(0+128)
  2081  00F8' 1283               	bcf	3,5	;RP0=0, select bank0
  2082  00F9' 1303               	bcf	3,6	;RP1=0, select bank0
  2083  00FA' 081E'              	movf	?___ftmul+1,w
  2084  00FB' 1683               	bsf	3,5	;RP0=1, select bank1
  2085  00FC' 1303               	bcf	3,6	;RP1=0, select bank1
  2086  00FD' 0080'              	movwf	(_pow$569+1)^(0+128)
  2087  00FE' 1283               	bcf	3,5	;RP0=0, select bank0
  2088  00FF' 1303               	bcf	3,6	;RP1=0, select bank0
  2089  0100' 081F'              	movf	?___ftmul+2,w
  2090  0101' 1683               	bsf	3,5	;RP0=1, select bank1
  2091  0102' 1303               	bcf	3,6	;RP1=0, select bank1
  2092  0103' 0080'              	movwf	(_pow$569+2)^(0+128)
  2093  0104' 0800'              	movf	_pow$569^(0+128),w
  2094  0105' 1283               	bcf	3,5	;RP0=0, select bank0
  2095  0106' 1303               	bcf	3,6	;RP1=0, select bank0
  2096  0107' 00C1'              	movwf	exp@x
  2097  0108' 1683               	bsf	3,5	;RP0=1, select bank1
  2098  0109' 1303               	bcf	3,6	;RP1=0, select bank1
  2099  010A' 0800'              	movf	(_pow$569+1)^(0+128),w
  2100  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  2101  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  2102  010D' 00C2'              	movwf	exp@x+1
  2103  010E' 1683               	bsf	3,5	;RP0=1, select bank1
  2104  010F' 1303               	bcf	3,6	;RP1=0, select bank1
  2105  0110' 0800'              	movf	(_pow$569+2)^(0+128),w
  2106  0111' 1283               	bcf	3,5	;RP0=0, select bank0
  2107  0112' 1303               	bcf	3,6	;RP1=0, select bank0
  2108  0113' 00C3'              	movwf	exp@x+2
  2109  0114' 120A' 118A' 2000' 120A' 118A' 	fcall	_exp
  2110  0119' 1283               	bcf	3,5	;RP0=0, select bank0
  2111  011A' 1303               	bcf	3,6	;RP1=0, select bank0
  2112  011B' 0841'              	movf	?_exp,w
  2113  011C' 1683               	bsf	3,5	;RP0=1, select bank1
  2114  011D' 1303               	bcf	3,6	;RP1=0, select bank1
  2115  011E' 0080'              	movwf	pow@x^(0+128)
  2116  011F' 1283               	bcf	3,5	;RP0=0, select bank0
  2117  0120' 1303               	bcf	3,6	;RP1=0, select bank0
  2118  0121' 0842'              	movf	?_exp+1,w
  2119  0122' 1683               	bsf	3,5	;RP0=1, select bank1
  2120  0123' 1303               	bcf	3,6	;RP1=0, select bank1
  2121  0124' 0080'              	movwf	(pow@x+1)^(0+128)
  2122  0125' 1283               	bcf	3,5	;RP0=0, select bank0
  2123  0126' 1303               	bcf	3,6	;RP1=0, select bank0
  2124  0127' 0843'              	movf	?_exp+2,w
  2125  0128' 1683               	bsf	3,5	;RP0=1, select bank1
  2126  0129' 1303               	bcf	3,6	;RP1=0, select bank1
  2127  012A' 0080'              	movwf	(pow@x+2)^(0+128)
  2128  012B' 0800'              	movf	pow@sign^(0+128),w
  2129  012C' 1903               	btfsc	3,2
  2130  012D' 0008               	return
  2131  012E' 0800'              	movf	pow@x^(0+128),w
  2132  012F' 0080'              	movwf	___ftneg@f1
  2133  0130' 0800'              	movf	(pow@x+1)^(0+128),w
  2134  0131' 0081'              	movwf	___ftneg@f1+1
  2135  0132' 0800'              	movf	(pow@x+2)^(0+128),w
  2136  0133' 0082'              	movwf	___ftneg@f1+2
  2137  0134' 120A' 118A' 2000'  	fcall	___ftneg
  2138  0137' 0800'              	movf	?___ftneg,w
  2139  0138' 1683               	bsf	3,5	;RP0=1, select bank1
  2140  0139' 1303               	bcf	3,6	;RP1=0, select bank1
  2141  013A' 0080'              	movwf	?_pow^(0+128)
  2142  013B' 0801'              	movf	?___ftneg+1,w
  2143  013C' 0080'              	movwf	(?_pow+1)^(0+128)
  2144  013D' 0802'              	movf	?___ftneg+2,w
  2145  013E' 0080'              	movwf	(?_pow+2)^(0+128)
  2146  013F' 0008               	return
  2147  0140'                    __end_of_pow:	
  2148                           
  2149                           	psect	text3
  2150  0000'                    __ptext3:	
  2151 ;; *************** function _log *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\log.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  x               3   55[BANK0 ] unsigned char 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  exponent        2   59[BANK0 ] int 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  3   55[BANK0 ] int 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       3       0       0       0
  2168 ;;      Locals:         0       2       0       0       0
  2169 ;;      Temps:          0       1       0       0       0
  2170 ;;      Totals:         0       6       0       0       0
  2171 ;;Total ram usage:        6 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    3
  2174 ;; This function calls:
  2175 ;;		___awtoft
  2176 ;;		___ftadd
  2177 ;;		___ftge
  2178 ;;		___ftmul
  2179 ;;		_eval_poly
  2180 ;;		_frexp
  2181 ;; This function is called by:
  2182 ;;		_pow
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _log
  2188  0000'                    _log:	
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2192  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2193  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2194  0002' 0837'              	movf	log@x,w
  2195  0003' 0080'              	movwf	___ftge@ff1
  2196  0004' 0838'              	movf	log@x+1,w
  2197  0005' 0081'              	movwf	___ftge@ff1+1
  2198  0006' 0839'              	movf	log@x+2,w
  2199  0007' 0082'              	movwf	___ftge@ff1+2
  2200  0008' 3000               	movlw	0
  2201  0009' 0083'              	movwf	___ftge@ff2
  2202  000A' 3000               	movlw	0
  2203  000B' 0084'              	movwf	___ftge@ff2+1
  2204  000C' 3000               	movlw	0
  2205  000D' 0085'              	movwf	___ftge@ff2+2
  2206  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  2207  0013' 1803               	btfsc	3,0
  2208  0014' 2800'              	goto	i1l1817
  2209  0015' 3021               	movlw	33
  2210  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  2211  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  2212  0018' 0080'              	movwf	_errno^(0+128)
  2213  0019' 3000               	movlw	0
  2214  001A' 0081'              	movwf	(_errno^(0+128)+1)
  2215  001B' 3000               	movlw	0
  2216  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  2217  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  2218  001E' 00B7'              	movwf	?_log
  2219  001F' 3000               	movlw	0
  2220  0020' 00B8'              	movwf	?_log+1
  2221  0021' 3000               	movlw	0
  2222  0022' 00B9'              	movwf	?_log+2
  2223  0023' 0008               	return
  2224  0024'                    i1l1817:	
  2225  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  2226  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  2227  0026' 0839'              	movf	log@x+2,w
  2228  0027' 0438'              	iorwf	log@x+1,w
  2229  0028' 0437'              	iorwf	log@x,w
  2230  0029' 1D03               	skipz
  2231  002A' 2800'              	goto	i1l1823
  2232  002B' 3022               	movlw	34
  2233  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  2234  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  2235  002E' 0080'              	movwf	_errno^(0+128)
  2236  002F' 3000               	movlw	0
  2237  0030' 0081'              	movwf	(_errno^(0+128)+1)
  2238  0031' 3000               	movlw	0
  2239  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  2240  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  2241  0034' 00B7'              	movwf	?_log
  2242  0035' 3000               	movlw	0
  2243  0036' 00B8'              	movwf	?_log+1
  2244  0037' 3000               	movlw	0
  2245  0038' 00B9'              	movwf	?_log+2
  2246  0039' 0008               	return
  2247  003A'                    i1l1823:	
  2248  003A' 3000               	movlw	0
  2249  003B' 0090'              	movwf	___ftadd@f1
  2250  003C' 3080               	movlw	128
  2251  003D' 0091'              	movwf	___ftadd@f1+1
  2252  003E' 30BF               	movlw	191
  2253  003F' 0092'              	movwf	___ftadd@f1+2
  2254  0040' 3000               	movlw	0
  2255  0041' 009D'              	movwf	___ftmul@f1
  2256  0042' 3000               	movlw	0
  2257  0043' 009E'              	movwf	___ftmul@f1+1
  2258  0044' 3040               	movlw	64
  2259  0045' 009F'              	movwf	___ftmul@f1+2
  2260  0046' 3000'              	movlw	(low (log@exponent| 0))& (0+255)
  2261  0047' 00BA'              	movwf	??_log
  2262  0048' 083A'              	movf	??_log,w
  2263  0049' 0083'              	movwf	frexp@eptr
  2264  004A' 0837'              	movf	log@x,w
  2265  004B' 0080'              	movwf	frexp@value
  2266  004C' 0838'              	movf	log@x+1,w
  2267  004D' 0081'              	movwf	frexp@value+1
  2268  004E' 0839'              	movf	log@x+2,w
  2269  004F' 0082'              	movwf	frexp@value+2
  2270  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	_frexp
  2271  0055' 0800'              	movf	?_frexp,w
  2272  0056' 1283               	bcf	3,5	;RP0=0, select bank0
  2273  0057' 1303               	bcf	3,6	;RP1=0, select bank0
  2274  0058' 00A0'              	movwf	___ftmul@f2
  2275  0059' 0801'              	movf	?_frexp+1,w
  2276  005A' 00A1'              	movwf	___ftmul@f2+1
  2277  005B' 0802'              	movf	?_frexp+2,w
  2278  005C' 00A2'              	movwf	___ftmul@f2+2
  2279  005D' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  2280  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  2281  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  2282  0064' 081D'              	movf	?___ftmul,w
  2283  0065' 0093'              	movwf	___ftadd@f2
  2284  0066' 081E'              	movf	?___ftmul+1,w
  2285  0067' 0094'              	movwf	___ftadd@f2+1
  2286  0068' 081F'              	movf	?___ftmul+2,w
  2287  0069' 0095'              	movwf	___ftadd@f2+2
  2288  006A' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  2289  006F' 1283               	bcf	3,5	;RP0=0, select bank0
  2290  0070' 1303               	bcf	3,6	;RP1=0, select bank0
  2291  0071' 0810'              	movf	?___ftadd,w
  2292  0072' 00B7'              	movwf	log@x
  2293  0073' 0811'              	movf	?___ftadd+1,w
  2294  0074' 00B8'              	movwf	log@x+1
  2295  0075' 0812'              	movf	?___ftadd+2,w
  2296  0076' 00B9'              	movwf	log@x+2
  2297  0077' 30FF               	movlw	255
  2298  0078' 07BB'              	addwf	log@exponent,f
  2299  0079' 1803               	skipnc
  2300  007A' 0ABC'              	incf	log@exponent+1,f
  2301  007B' 30FF               	movlw	255
  2302  007C' 07BC'              	addwf	log@exponent+1,f
  2303  007D' 0837'              	movf	log@x,w
  2304  007E' 00AD'              	movwf	eval_poly@x
  2305  007F' 0838'              	movf	log@x+1,w
  2306  0080' 00AE'              	movwf	eval_poly@x+1
  2307  0081' 0839'              	movf	log@x+2,w
  2308  0082' 00AF'              	movwf	eval_poly@x+2
  2309  0083' 301F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  2310  0084' 00BA'              	movwf	??_log
  2311  0085' 083A'              	movf	??_log,w
  2312  0086' 00B0'              	movwf	eval_poly@d
  2313  0087' 3008               	movlw	8
  2314  0088' 00B1'              	movwf	eval_poly@n
  2315  0089' 3000               	movlw	0
  2316  008A' 00B2'              	movwf	eval_poly@n+1
  2317  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	_eval_poly
  2318  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  2319  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  2320  0092' 082D'              	movf	?_eval_poly,w
  2321  0093' 00B7'              	movwf	log@x
  2322  0094' 082E'              	movf	?_eval_poly+1,w
  2323  0095' 00B8'              	movwf	log@x+1
  2324  0096' 082F'              	movf	?_eval_poly+2,w
  2325  0097' 00B9'              	movwf	log@x+2
  2326  0098' 0837'              	movf	log@x,w
  2327  0099' 0090'              	movwf	___ftadd@f1
  2328  009A' 0838'              	movf	log@x+1,w
  2329  009B' 0091'              	movwf	___ftadd@f1+1
  2330  009C' 0839'              	movf	log@x+2,w
  2331  009D' 0092'              	movwf	___ftadd@f1+2
  2332  009E' 3072               	movlw	114
  2333  009F' 009D'              	movwf	___ftmul@f1
  2334  00A0' 3031               	movlw	49
  2335  00A1' 009E'              	movwf	___ftmul@f1+1
  2336  00A2' 303F               	movlw	63
  2337  00A3' 009F'              	movwf	___ftmul@f1+2
  2338  00A4' 083C'              	movf	log@exponent+1,w
  2339  00A5' 0089'              	movwf	___awtoft@c+1
  2340  00A6' 083B'              	movf	log@exponent,w
  2341  00A7' 0088'              	movwf	___awtoft@c
  2342  00A8' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  2343  00AD' 0808'              	movf	?___awtoft,w
  2344  00AE' 1283               	bcf	3,5	;RP0=0, select bank0
  2345  00AF' 1303               	bcf	3,6	;RP1=0, select bank0
  2346  00B0' 00A0'              	movwf	___ftmul@f2
  2347  00B1' 0809'              	movf	?___awtoft+1,w
  2348  00B2' 00A1'              	movwf	___ftmul@f2+1
  2349  00B3' 080A'              	movf	?___awtoft+2,w
  2350  00B4' 00A2'              	movwf	___ftmul@f2+2
  2351  00B5' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  2352  00BA' 1283               	bcf	3,5	;RP0=0, select bank0
  2353  00BB' 1303               	bcf	3,6	;RP1=0, select bank0
  2354  00BC' 081D'              	movf	?___ftmul,w
  2355  00BD' 0093'              	movwf	___ftadd@f2
  2356  00BE' 081E'              	movf	?___ftmul+1,w
  2357  00BF' 0094'              	movwf	___ftadd@f2+1
  2358  00C0' 081F'              	movf	?___ftmul+2,w
  2359  00C1' 0095'              	movwf	___ftadd@f2+2
  2360  00C2' 120A' 118A' 2000'  	fcall	___ftadd
  2361  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  2362  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  2363  00C7' 0810'              	movf	?___ftadd,w
  2364  00C8' 00B7'              	movwf	?_log
  2365  00C9' 0811'              	movf	?___ftadd+1,w
  2366  00CA' 00B8'              	movwf	?_log+1
  2367  00CB' 0812'              	movf	?___ftadd+2,w
  2368  00CC' 00B9'              	movwf	?_log+2
  2369  00CD' 0008               	return
  2370  00CE'                    __end_of_log:	
  2371                           
  2372                           	psect	text4
  2373  0000'                    __ptext4:	
  2374 ;; *************** function _exp *****************
  2375 ;; Defined at:
  2376 ;;		line 12 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\exp.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  x               3   65[BANK0 ] int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  exponent        2   75[BANK0 ] int 
  2381 ;;  sign            1   77[BANK0 ] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  3   65[BANK0 ] unsigned char 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       3       0       0       0
  2392 ;;      Locals:         0       9       0       0       0
  2393 ;;      Temps:          0       1       0       0       0
  2394 ;;      Totals:         0      13       0       0       0
  2395 ;;Total ram usage:       13 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    3
  2398 ;; This function calls:
  2399 ;;		___awtoft
  2400 ;;		___ftdiv
  2401 ;;		___ftge
  2402 ;;		___ftmul
  2403 ;;		___ftneg
  2404 ;;		___ftsub
  2405 ;;		___fttol
  2406 ;;		_eval_poly
  2407 ;;		_floor
  2408 ;;		_ldexp
  2409 ;; This function is called by:
  2410 ;;		_pow
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _exp
  2416  0000'                    _exp:	
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2420  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2421  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2422  0002' 0843'              	movf	exp@x+2,w
  2423  0003' 0442'              	iorwf	exp@x+1,w
  2424  0004' 0441'              	iorwf	exp@x,w
  2425  0005' 1D03               	skipz
  2426  0006' 2800'              	goto	i1l1839
  2427  0007' 3000               	movlw	0
  2428  0008' 00C1'              	movwf	?_exp
  2429  0009' 3080               	movlw	128
  2430  000A' 00C2'              	movwf	?_exp+1
  2431  000B' 303F               	movlw	63
  2432  000C' 00C3'              	movwf	?_exp+2
  2433  000D' 0008               	return
  2434  000E'                    i1l1839:	
  2435  000E' 3072               	movlw	114
  2436  000F' 0080'              	movwf	___ftge@ff1
  2437  0010' 3031               	movlw	49
  2438  0011' 0081'              	movwf	___ftge@ff1+1
  2439  0012' 3044               	movlw	68
  2440  0013' 0082'              	movwf	___ftge@ff1+2
  2441  0014' 0841'              	movf	exp@x,w
  2442  0015' 0083'              	movwf	___ftge@ff2
  2443  0016' 0842'              	movf	exp@x+1,w
  2444  0017' 0084'              	movwf	___ftge@ff2+1
  2445  0018' 0843'              	movf	exp@x+2,w
  2446  0019' 0085'              	movwf	___ftge@ff2+2
  2447  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  2448  001F' 1803               	btfsc	3,0
  2449  0020' 2800'              	goto	i1l1849
  2450  0021' 3022               	movlw	34
  2451  0022' 1683               	bsf	3,5	;RP0=1, select bank1
  2452  0023' 1303               	bcf	3,6	;RP1=0, select bank1
  2453  0024' 0080'              	movwf	_errno^(0+128)
  2454  0025' 3000               	movlw	0
  2455  0026' 0081'              	movwf	(_errno^(0+128)+1)
  2456  0027' 30FF               	movlw	255
  2457  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  2458  0029' 00C1'              	movwf	?_exp
  2459  002A' 307F               	movlw	127
  2460  002B' 00C2'              	movwf	?_exp+1
  2461  002C' 307F               	movlw	127
  2462  002D' 00C3'              	movwf	?_exp+2
  2463  002E' 0008               	return
  2464  002F'                    i1l1849:	
  2465  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  2466  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  2467  0031' 0841'              	movf	exp@x,w
  2468  0032' 0080'              	movwf	___ftge@ff1
  2469  0033' 0842'              	movf	exp@x+1,w
  2470  0034' 0081'              	movwf	___ftge@ff1+1
  2471  0035' 0843'              	movf	exp@x+2,w
  2472  0036' 0082'              	movwf	___ftge@ff1+2
  2473  0037' 3049               	movlw	73
  2474  0038' 0083'              	movwf	___ftge@ff2
  2475  0039' 303A               	movlw	58
  2476  003A' 0084'              	movwf	___ftge@ff2+1
  2477  003B' 30C4               	movlw	196
  2478  003C' 0085'              	movwf	___ftge@ff2+2
  2479  003D' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  2480  0042' 1803               	btfsc	3,0
  2481  0043' 2800'              	goto	i1l1855
  2482  0044' 3022               	movlw	34
  2483  0045' 1683               	bsf	3,5	;RP0=1, select bank1
  2484  0046' 1303               	bcf	3,6	;RP1=0, select bank1
  2485  0047' 0080'              	movwf	_errno^(0+128)
  2486  0048' 3000               	movlw	0
  2487  0049' 0081'              	movwf	(_errno^(0+128)+1)
  2488  004A' 3000               	movlw	0
  2489  004B' 1283               	bcf	3,5	;RP0=0, select bank0
  2490  004C' 1303               	bcf	3,6	;RP1=0, select bank0
  2491  004D' 00C1'              	movwf	?_exp
  2492  004E' 3000               	movlw	0
  2493  004F' 00C2'              	movwf	?_exp+1
  2494  0050' 3000               	movlw	0
  2495  0051' 00C3'              	movwf	?_exp+2
  2496  0052' 0008               	return
  2497  0053'                    i1l1855:	
  2498  0053' 1283               	bcf	3,5	;RP0=0, select bank0
  2499  0054' 1303               	bcf	3,6	;RP1=0, select bank0
  2500  0055' 0841'              	movf	exp@x,w
  2501  0056' 0080'              	movwf	___ftge@ff1
  2502  0057' 0842'              	movf	exp@x+1,w
  2503  0058' 0081'              	movwf	___ftge@ff1+1
  2504  0059' 0843'              	movf	exp@x+2,w
  2505  005A' 0082'              	movwf	___ftge@ff1+2
  2506  005B' 3000               	movlw	0
  2507  005C' 0083'              	movwf	___ftge@ff2
  2508  005D' 3000               	movlw	0
  2509  005E' 0084'              	movwf	___ftge@ff2+1
  2510  005F' 3000               	movlw	0
  2511  0060' 0085'              	movwf	___ftge@ff2+2
  2512  0061' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  2513  0066' 1803               	btfsc	3,0
  2514  0067' 2800'              	goto	u254_20
  2515  0068' 3001               	movlw	1
  2516  0069' 2800'              	goto	u255_20
  2517  006A'                    u254_20:	
  2518  006A' 3000               	movlw	0
  2519  006B'                    u255_20:	
  2520  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  2521  006C' 1303               	bcf	3,6	;RP1=0, select bank0
  2522  006D' 00C4'              	movwf	??_exp
  2523  006E' 0844'              	movf	??_exp,w
  2524  006F' 00CD'              	movwf	exp@sign
  2525  0070' 084D'              	movf	exp@sign,w
  2526  0071' 1903               	btfsc	3,2
  2527  0072' 2800'              	goto	i1l1861
  2528  0073' 0841'              	movf	exp@x,w
  2529  0074' 0080'              	movwf	___ftneg@f1
  2530  0075' 0842'              	movf	exp@x+1,w
  2531  0076' 0081'              	movwf	___ftneg@f1+1
  2532  0077' 0843'              	movf	exp@x+2,w
  2533  0078' 0082'              	movwf	___ftneg@f1+2
  2534  0079' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  2535  007E' 0800'              	movf	?___ftneg,w
  2536  007F' 1283               	bcf	3,5	;RP0=0, select bank0
  2537  0080' 1303               	bcf	3,6	;RP1=0, select bank0
  2538  0081' 00C1'              	movwf	exp@x
  2539  0082' 0801'              	movf	?___ftneg+1,w
  2540  0083' 00C2'              	movwf	exp@x+1
  2541  0084' 0802'              	movf	?___ftneg+2,w
  2542  0085' 00C3'              	movwf	exp@x+2
  2543  0086'                    i1l1861:	
  2544  0086' 30AA               	movlw	170
  2545  0087' 009D'              	movwf	___ftmul@f1
  2546  0088' 30B8               	movlw	184
  2547  0089' 009E'              	movwf	___ftmul@f1+1
  2548  008A' 303F               	movlw	63
  2549  008B' 009F'              	movwf	___ftmul@f1+2
  2550  008C' 0841'              	movf	exp@x,w
  2551  008D' 00A0'              	movwf	___ftmul@f2
  2552  008E' 0842'              	movf	exp@x+1,w
  2553  008F' 00A1'              	movwf	___ftmul@f2+1
  2554  0090' 0843'              	movf	exp@x+2,w
  2555  0091' 00A2'              	movwf	___ftmul@f2+2
  2556  0092' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  2557  0097' 1283               	bcf	3,5	;RP0=0, select bank0
  2558  0098' 1303               	bcf	3,6	;RP1=0, select bank0
  2559  0099' 081D'              	movf	?___ftmul,w
  2560  009A' 00C1'              	movwf	exp@x
  2561  009B' 081E'              	movf	?___ftmul+1,w
  2562  009C' 00C2'              	movwf	exp@x+1
  2563  009D' 081F'              	movf	?___ftmul+2,w
  2564  009E' 00C3'              	movwf	exp@x+2
  2565  009F' 0841'              	movf	exp@x,w
  2566  00A0' 009D'              	movwf	floor@x
  2567  00A1' 0842'              	movf	exp@x+1,w
  2568  00A2' 009E'              	movwf	floor@x+1
  2569  00A3' 0843'              	movf	exp@x+2,w
  2570  00A4' 009F'              	movwf	floor@x+2
  2571  00A5' 120A' 118A' 2000' 120A' 118A' 	fcall	_floor
  2572  00AA' 1283               	bcf	3,5	;RP0=0, select bank0
  2573  00AB' 1303               	bcf	3,6	;RP1=0, select bank0
  2574  00AC' 081D'              	movf	?_floor,w
  2575  00AD' 00C5'              	movwf	_exp$570
  2576  00AE' 081E'              	movf	?_floor+1,w
  2577  00AF' 00C6'              	movwf	_exp$570+1
  2578  00B0' 081F'              	movf	?_floor+2,w
  2579  00B1' 00C7'              	movwf	_exp$570+2
  2580  00B2' 0845'              	movf	_exp$570,w
  2581  00B3' 0080'              	movwf	___fttol@f1
  2582  00B4' 0846'              	movf	_exp$570+1,w
  2583  00B5' 0081'              	movwf	___fttol@f1+1
  2584  00B6' 0847'              	movf	_exp$570+2,w
  2585  00B7' 0082'              	movwf	___fttol@f1+2
  2586  00B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  2587  00BD' 0801'              	movf	?___fttol+1,w
  2588  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
  2589  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
  2590  00C0' 00CC'              	movwf	exp@exponent+1
  2591  00C1' 0800'              	movf	?___fttol,w
  2592  00C2' 00CB'              	movwf	exp@exponent
  2593  00C3' 084C'              	movf	exp@exponent+1,w
  2594  00C4' 0089'              	movwf	___awtoft@c+1
  2595  00C5' 084B'              	movf	exp@exponent,w
  2596  00C6' 0088'              	movwf	___awtoft@c
  2597  00C7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  2598  00CC' 0808'              	movf	?___awtoft,w
  2599  00CD' 1283               	bcf	3,5	;RP0=0, select bank0
  2600  00CE' 1303               	bcf	3,6	;RP1=0, select bank0
  2601  00CF' 009D'              	movwf	___ftsub@f2
  2602  00D0' 0809'              	movf	?___awtoft+1,w
  2603  00D1' 009E'              	movwf	___ftsub@f2+1
  2604  00D2' 080A'              	movf	?___awtoft+2,w
  2605  00D3' 009F'              	movwf	___ftsub@f2+2
  2606  00D4' 0841'              	movf	exp@x,w
  2607  00D5' 00A0'              	movwf	___ftsub@f1
  2608  00D6' 0842'              	movf	exp@x+1,w
  2609  00D7' 00A1'              	movwf	___ftsub@f1+1
  2610  00D8' 0843'              	movf	exp@x+2,w
  2611  00D9' 00A2'              	movwf	___ftsub@f1+2
  2612  00DA' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftsub
  2613  00DF' 1283               	bcf	3,5	;RP0=0, select bank0
  2614  00E0' 1303               	bcf	3,6	;RP1=0, select bank0
  2615  00E1' 081D'              	movf	?___ftsub,w
  2616  00E2' 00C1'              	movwf	exp@x
  2617  00E3' 081E'              	movf	?___ftsub+1,w
  2618  00E4' 00C2'              	movwf	exp@x+1
  2619  00E5' 081F'              	movf	?___ftsub+2,w
  2620  00E6' 00C3'              	movwf	exp@x+2
  2621  00E7' 0841'              	movf	exp@x,w
  2622  00E8' 00AD'              	movwf	eval_poly@x
  2623  00E9' 0842'              	movf	exp@x+1,w
  2624  00EA' 00AE'              	movwf	eval_poly@x+1
  2625  00EB' 0843'              	movf	exp@x+2,w
  2626  00EC' 00AF'              	movwf	eval_poly@x+2
  2627  00ED' 3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  2628  00EE' 00C4'              	movwf	??_exp
  2629  00EF' 0844'              	movf	??_exp,w
  2630  00F0' 00B0'              	movwf	eval_poly@d
  2631  00F1' 3009               	movlw	9
  2632  00F2' 00B1'              	movwf	eval_poly@n
  2633  00F3' 3000               	movlw	0
  2634  00F4' 00B2'              	movwf	eval_poly@n+1
  2635  00F5' 120A' 118A' 2000' 120A' 118A' 	fcall	_eval_poly
  2636  00FA' 1283               	bcf	3,5	;RP0=0, select bank0
  2637  00FB' 1303               	bcf	3,6	;RP1=0, select bank0
  2638  00FC' 082D'              	movf	?_eval_poly,w
  2639  00FD' 00B7'              	movwf	ldexp@value
  2640  00FE' 082E'              	movf	?_eval_poly+1,w
  2641  00FF' 00B8'              	movwf	ldexp@value+1
  2642  0100' 082F'              	movf	?_eval_poly+2,w
  2643  0101' 00B9'              	movwf	ldexp@value+2
  2644  0102' 084C'              	movf	exp@exponent+1,w
  2645  0103' 00BB'              	movwf	ldexp@newexp+1
  2646  0104' 084B'              	movf	exp@exponent,w
  2647  0105' 00BA'              	movwf	ldexp@newexp
  2648  0106' 120A' 118A' 2000' 120A' 118A' 	fcall	_ldexp
  2649  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  2650  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  2651  010D' 0837'              	movf	?_ldexp,w
  2652  010E' 00C1'              	movwf	exp@x
  2653  010F' 0838'              	movf	?_ldexp+1,w
  2654  0110' 00C2'              	movwf	exp@x+1
  2655  0111' 0839'              	movf	?_ldexp+2,w
  2656  0112' 00C3'              	movwf	exp@x+2
  2657  0113' 084D'              	movf	exp@sign,w
  2658  0114' 1903               	btfsc	3,2
  2659  0115' 0008               	return
  2660  0116' 30FF               	movlw	255
  2661  0117' 00C8'              	movwf	_exp$361
  2662  0118' 307F               	movlw	127
  2663  0119' 00C9'              	movwf	_exp$361+1
  2664  011A' 307F               	movlw	127
  2665  011B' 00CA'              	movwf	_exp$361+2
  2666  011C' 0843'              	movf	exp@x+2,w
  2667  011D' 064A'              	xorwf	_exp$361+2,w
  2668  011E' 1D03               	skipz
  2669  011F' 2800'              	goto	u258_25
  2670  0120' 0842'              	movf	exp@x+1,w
  2671  0121' 0649'              	xorwf	_exp$361+1,w
  2672  0122' 1D03               	skipz
  2673  0123' 2800'              	goto	u258_25
  2674  0124' 0841'              	movf	exp@x,w
  2675  0125' 0648'              	xorwf	_exp$361,w
  2676  0126'                    u258_25:	
  2677  0126' 1D03               	skipz
  2678  0127' 2800'              	goto	i1l1883
  2679  0128' 3000               	movlw	0
  2680  0129' 00C1'              	movwf	?_exp
  2681  012A' 3000               	movlw	0
  2682  012B' 00C2'              	movwf	?_exp+1
  2683  012C' 3000               	movlw	0
  2684  012D' 00C3'              	movwf	?_exp+2
  2685  012E' 0008               	return
  2686  012F'                    i1l1883:	
  2687  012F' 0841'              	movf	exp@x,w
  2688  0130' 0080'              	movwf	___ftdiv@f2
  2689  0131' 0842'              	movf	exp@x+1,w
  2690  0132' 0081'              	movwf	___ftdiv@f2+1
  2691  0133' 0843'              	movf	exp@x+2,w
  2692  0134' 0082'              	movwf	___ftdiv@f2+2
  2693  0135' 3000               	movlw	0
  2694  0136' 0083'              	movwf	___ftdiv@f1
  2695  0137' 3080               	movlw	128
  2696  0138' 0084'              	movwf	___ftdiv@f1+1
  2697  0139' 303F               	movlw	63
  2698  013A' 0085'              	movwf	___ftdiv@f1+2
  2699  013B' 120A' 118A' 2000'  	fcall	___ftdiv
  2700  013E' 1283               	bcf	3,5	;RP0=0, select bank0
  2701  013F' 1303               	bcf	3,6	;RP1=0, select bank0
  2702  0140' 0800'              	movf	?___ftdiv,w
  2703  0141' 00C1'              	movwf	?_exp
  2704  0142' 0801'              	movf	?___ftdiv+1,w
  2705  0143' 00C2'              	movwf	?_exp+1
  2706  0144' 0802'              	movf	?___ftdiv+2,w
  2707  0145' 00C3'              	movwf	?_exp+2
  2708  0146' 0008               	return
  2709  0147'                    __end_of_exp:	
  2710                           
  2711                           	psect	text5
  2712  0000'                    __ptext5:	
  2713 ;; *************** function _ldexp *****************
  2714 ;; Defined at:
  2715 ;;		line 277 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\frexp.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  value           3   55[BANK0 ] unsigned char 
  2718 ;;  newexp          2   58[BANK0 ] int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  3   55[BANK0 ] int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       5       0       0       0
  2731 ;;      Locals:         0       3       0       0       0
  2732 ;;      Temps:          0       2       0       0       0
  2733 ;;      Totals:         0      10       0       0       0
  2734 ;;Total ram usage:       10 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    1
  2737 ;; This function calls:
  2738 ;;		___ftge
  2739 ;;		___ftneg
  2740 ;; This function is called by:
  2741 ;;		_exp
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           
  2746                           ;psect for function _ldexp
  2747  0000'                    _ldexp:	
  2748                           
  2749                           ;incstack = 0
  2750                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2751  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2752  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2753  0002' 0839'              	movf	ldexp@value+2,w
  2754  0003' 0438'              	iorwf	ldexp@value+1,w
  2755  0004' 0437'              	iorwf	ldexp@value,w
  2756  0005' 1D03               	skipz
  2757  0006' 2800'              	goto	i1l1761
  2758  0007' 3000               	movlw	0
  2759  0008' 00B7'              	movwf	?_ldexp
  2760  0009' 3000               	movlw	0
  2761  000A' 00B8'              	movwf	?_ldexp+1
  2762  000B' 3000               	movlw	0
  2763  000C' 00B9'              	movwf	?_ldexp+2
  2764  000D' 0008               	return
  2765  000E'                    i1l1761:	
  2766  000E' 0839'              	movf	ldexp@value+2,w
  2767  000F' 397F               	andlw	127
  2768  0010' 00BC'              	movwf	??_ldexp
  2769  0011' 01BD'              	clrf	??_ldexp+1
  2770  0012' 1003               	clrc
  2771  0013' 0DBC'              	rlf	??_ldexp,f
  2772  0014' 0DBD'              	rlf	??_ldexp+1,f
  2773  0015' 083C'              	movf	??_ldexp,w
  2774  0016' 07BA'              	addwf	ldexp@newexp,f
  2775  0017' 1803               	skipnc
  2776  0018' 0ABB'              	incf	ldexp@newexp+1,f
  2777  0019' 083D'              	movf	??_ldexp+1,w
  2778  001A' 07BB'              	addwf	ldexp@newexp+1,f
  2779  001B' 0D38'              	rlf	ldexp@value+1,w
  2780  001C' 0D38'              	rlf	ldexp@value+1,w
  2781  001D' 3901               	andlw	1
  2782  001E' 00BC'              	movwf	??_ldexp
  2783  001F' 01BD'              	clrf	??_ldexp+1
  2784  0020' 083C'              	movf	??_ldexp,w
  2785  0021' 07BA'              	addwf	ldexp@newexp,f
  2786  0022' 1803               	skipnc
  2787  0023' 0ABB'              	incf	ldexp@newexp+1,f
  2788  0024' 083D'              	movf	??_ldexp+1,w
  2789  0025' 07BB'              	addwf	ldexp@newexp+1,f
  2790  0026' 1FBB'              	btfss	ldexp@newexp+1,7
  2791  0027' 2800'              	goto	i1l1771
  2792  0028' 3022               	movlw	34
  2793  0029' 1683               	bsf	3,5	;RP0=1, select bank1
  2794  002A' 1303               	bcf	3,6	;RP1=0, select bank1
  2795  002B' 0080'              	movwf	_errno^(0+128)
  2796  002C' 3000               	movlw	0
  2797  002D' 0081'              	movwf	(_errno^(0+128)+1)
  2798  002E' 3000               	movlw	0
  2799  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  2800  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  2801  0031' 00B7'              	movwf	?_ldexp
  2802  0032' 3000               	movlw	0
  2803  0033' 00B8'              	movwf	?_ldexp+1
  2804  0034' 3000               	movlw	0
  2805  0035' 00B9'              	movwf	?_ldexp+2
  2806  0036' 0008               	return
  2807  0037'                    i1l1771:	
  2808  0037' 083B'              	movf	ldexp@newexp+1,w
  2809  0038' 3A80               	xorlw	128
  2810  0039' 00FF               	movwf	127
  2811  003A' 3081               	movlw	129
  2812  003B' 027F               	subwf	127,w
  2813  003C' 1D03               	skipz
  2814  003D' 2800'              	goto	u245_25
  2815  003E' 3000               	movlw	0
  2816  003F' 023A'              	subwf	ldexp@newexp,w
  2817  0040'                    u245_25:	
  2818  0040' 1C03               	skipc
  2819  0041' 2800'              	goto	i1l1795
  2820  0042' 3022               	movlw	34
  2821  0043' 1683               	bsf	3,5	;RP0=1, select bank1
  2822  0044' 1303               	bcf	3,6	;RP1=0, select bank1
  2823  0045' 0080'              	movwf	_errno^(0+128)
  2824  0046' 3000               	movlw	0
  2825  0047' 0081'              	movwf	(_errno^(0+128)+1)
  2826  0048' 1283               	bcf	3,5	;RP0=0, select bank0
  2827  0049' 1303               	bcf	3,6	;RP1=0, select bank0
  2828  004A' 0837'              	movf	ldexp@value,w
  2829  004B' 0080'              	movwf	___ftge@ff1
  2830  004C' 0838'              	movf	ldexp@value+1,w
  2831  004D' 0081'              	movwf	___ftge@ff1+1
  2832  004E' 0839'              	movf	ldexp@value+2,w
  2833  004F' 0082'              	movwf	___ftge@ff1+2
  2834  0050' 3000               	movlw	0
  2835  0051' 0083'              	movwf	___ftge@ff2
  2836  0052' 3000               	movlw	0
  2837  0053' 0084'              	movwf	___ftge@ff2+1
  2838  0054' 3000               	movlw	0
  2839  0055' 0085'              	movwf	___ftge@ff2+2
  2840  0056' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  2841  005B' 1803               	btfsc	3,0
  2842  005C' 2800'              	goto	i1l1791
  2843  005D' 30FF               	movlw	255
  2844  005E' 1283               	bcf	3,5	;RP0=0, select bank0
  2845  005F' 1303               	bcf	3,6	;RP1=0, select bank0
  2846  0060' 00BE'              	movwf	_ldexp$398
  2847  0061' 307F               	movlw	127
  2848  0062' 00BF'              	movwf	_ldexp$398+1
  2849  0063' 307F               	movlw	127
  2850  0064' 00C0'              	movwf	_ldexp$398+2
  2851  0065' 083E'              	movf	_ldexp$398,w
  2852  0066' 0080'              	movwf	___ftneg@f1
  2853  0067' 083F'              	movf	_ldexp$398+1,w
  2854  0068' 0081'              	movwf	___ftneg@f1+1
  2855  0069' 0840'              	movf	_ldexp$398+2,w
  2856  006A' 0082'              	movwf	___ftneg@f1+2
  2857  006B' 120A' 118A' 2000'  	fcall	___ftneg
  2858  006E' 0800'              	movf	?___ftneg,w
  2859  006F' 1283               	bcf	3,5	;RP0=0, select bank0
  2860  0070' 1303               	bcf	3,6	;RP1=0, select bank0
  2861  0071' 00B7'              	movwf	?_ldexp
  2862  0072' 0801'              	movf	?___ftneg+1,w
  2863  0073' 00B8'              	movwf	?_ldexp+1
  2864  0074' 0802'              	movf	?___ftneg+2,w
  2865  0075' 00B9'              	movwf	?_ldexp+2
  2866  0076' 0008               	return
  2867  0077'                    i1l1791:	
  2868  0077' 30FF               	movlw	255
  2869  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  2870  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  2871  007A' 00B7'              	movwf	?_ldexp
  2872  007B' 307F               	movlw	127
  2873  007C' 00B8'              	movwf	?_ldexp+1
  2874  007D' 307F               	movlw	127
  2875  007E' 00B9'              	movwf	?_ldexp+2
  2876  007F' 0008               	return
  2877  0080'                    i1l1795:	
  2878  0080' 1283               	bcf	3,5	;RP0=0, select bank0
  2879  0081' 1303               	bcf	3,6	;RP1=0, select bank0
  2880  0082' 083B'              	movf	ldexp@newexp+1,w
  2881  0083' 00BD'              	movwf	??_ldexp+1
  2882  0084' 083A'              	movf	ldexp@newexp,w
  2883  0085' 00BC'              	movwf	??_ldexp
  2884  0086' 0D3D'              	rlf	??_ldexp+1,w
  2885  0087' 0CBD'              	rrf	??_ldexp+1,f
  2886  0088' 0CBC'              	rrf	??_ldexp,f
  2887  0089' 0839'              	movf	ldexp@value+2,w
  2888  008A' 063C'              	xorwf	??_ldexp,w
  2889  008B' 3980               	andlw	-128
  2890  008C' 063C'              	xorwf	??_ldexp,w
  2891  008D' 00B9'              	movwf	ldexp@value+2
  2892  008E' 083A'              	movf	ldexp@newexp,w
  2893  008F' 3901               	andlw	1
  2894  0090' 00BC'              	movwf	??_ldexp
  2895  0091' 0CBC'              	rrf	??_ldexp,f
  2896  0092' 0CBC'              	rrf	??_ldexp,f
  2897  0093' 0838'              	movf	ldexp@value+1,w
  2898  0094' 063C'              	xorwf	??_ldexp,w
  2899  0095' 397F               	andlw	-129
  2900  0096' 063C'              	xorwf	??_ldexp,w
  2901  0097' 00B8'              	movwf	ldexp@value+1
  2902  0098' 0008               	return
  2903  0099'                    __end_of_ldexp:	
  2904                           
  2905                           	psect	text6
  2906  0000'                    __ptext6:	
  2907 ;; *************** function ___ftneg *****************
  2908 ;; Defined at:
  2909 ;;		line 15 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\ftneg.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  f1              3    0[COMMON] float 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  3    0[COMMON] float 
  2916 ;; Registers used:
  2917 ;;		wreg
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         3       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         3       0       0       0       0
  2927 ;;Total ram usage:        3 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_pow
  2933 ;;		_exp
  2934 ;;		_ldexp
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function ___ftneg
  2940  0000'                    ___ftneg:	
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in ___ftneg: [wreg]
  2944  0000' 0802'              	movf	___ftneg@f1+2,w
  2945  0001' 0401'              	iorwf	___ftneg@f1+1,w
  2946  0002' 0400'              	iorwf	___ftneg@f1,w
  2947  0003' 1903               	skipnz
  2948  0004' 0008               	return
  2949  0005' 3080               	movlw	128
  2950  0006' 0682'              	xorwf	___ftneg@f1+2,f
  2951  0007' 0008               	return
  2952  0008'                    __end_of___ftneg:	
  2953                           
  2954                           	psect	text7
  2955  0000'                    __ptext7:	
  2956 ;; *************** function _floor *****************
  2957 ;; Defined at:
  2958 ;;		line 13 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\floor.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  x               3   29[BANK0 ] float 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  i               3   33[BANK0 ] float 
  2963 ;;  expon           2   36[BANK0 ] int 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  3   29[BANK0 ] int 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       3       0       0       0
  2974 ;;      Locals:         0       5       0       0       0
  2975 ;;      Temps:          0       1       0       0       0
  2976 ;;      Totals:         0       9       0       0       0
  2977 ;;Total ram usage:        9 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    2
  2980 ;; This function calls:
  2981 ;;		___altoft
  2982 ;;		___ftadd
  2983 ;;		___ftge
  2984 ;;		___fttol
  2985 ;;		_frexp
  2986 ;; This function is called by:
  2987 ;;		_exp
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _floor
  2993  0000'                    _floor:	
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2997  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2998  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2999  0002' 081D'              	movf	floor@x,w
  3000  0003' 0080'              	movwf	frexp@value
  3001  0004' 081E'              	movf	floor@x+1,w
  3002  0005' 0081'              	movwf	frexp@value+1
  3003  0006' 081F'              	movf	floor@x+2,w
  3004  0007' 0082'              	movwf	frexp@value+2
  3005  0008' 3000'              	movlw	(low (floor@expon| 0))& (0+255)
  3006  0009' 00A0'              	movwf	??_floor
  3007  000A' 0820'              	movf	??_floor,w
  3008  000B' 0083'              	movwf	frexp@eptr
  3009  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_frexp
  3010  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  3011  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  3012  0013' 1FA5'              	btfss	floor@expon+1,7
  3013  0014' 2800'              	goto	i1l1731
  3014  0015' 081D'              	movf	floor@x,w
  3015  0016' 0080'              	movwf	___ftge@ff1
  3016  0017' 081E'              	movf	floor@x+1,w
  3017  0018' 0081'              	movwf	___ftge@ff1+1
  3018  0019' 081F'              	movf	floor@x+2,w
  3019  001A' 0082'              	movwf	___ftge@ff1+2
  3020  001B' 3000               	movlw	0
  3021  001C' 0083'              	movwf	___ftge@ff2
  3022  001D' 3000               	movlw	0
  3023  001E' 0084'              	movwf	___ftge@ff2+1
  3024  001F' 3000               	movlw	0
  3025  0020' 0085'              	movwf	___ftge@ff2+2
  3026  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  3027  0026' 1803               	btfsc	3,0
  3028  0027' 2800'              	goto	i1l1727
  3029  0028' 3000               	movlw	0
  3030  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  3031  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  3032  002B' 009D'              	movwf	?_floor
  3033  002C' 3080               	movlw	128
  3034  002D' 009E'              	movwf	?_floor+1
  3035  002E' 30BF               	movlw	191
  3036  002F' 009F'              	movwf	?_floor+2
  3037  0030' 0008               	return
  3038  0031'                    i1l1727:	
  3039  0031' 3000               	movlw	0
  3040  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  3041  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  3042  0034' 009D'              	movwf	?_floor
  3043  0035' 3000               	movlw	0
  3044  0036' 009E'              	movwf	?_floor+1
  3045  0037' 3000               	movlw	0
  3046  0038' 009F'              	movwf	?_floor+2
  3047  0039' 0008               	return
  3048  003A'                    i1l1731:	
  3049  003A' 3000               	movlw	0
  3050  003B' 0225'              	subwf	floor@expon+1,w
  3051  003C' 3015               	movlw	21
  3052  003D' 1903               	skipnz
  3053  003E' 0224'              	subwf	floor@expon,w
  3054  003F' 1803               	btfsc	3,0
  3055  0040' 0008               	return
  3056  0041' 081D'              	movf	floor@x,w
  3057  0042' 0080'              	movwf	___fttol@f1
  3058  0043' 081E'              	movf	floor@x+1,w
  3059  0044' 0081'              	movwf	___fttol@f1+1
  3060  0045' 081F'              	movf	floor@x+2,w
  3061  0046' 0082'              	movwf	___fttol@f1+2
  3062  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  3063  004C' 0803'              	movf	?___fttol+3,w
  3064  004D' 1283               	bcf	3,5	;RP0=0, select bank0
  3065  004E' 1303               	bcf	3,6	;RP1=0, select bank0
  3066  004F' 0083'              	movwf	___altoft@c+3
  3067  0050' 0802'              	movf	?___fttol+2,w
  3068  0051' 0082'              	movwf	___altoft@c+2
  3069  0052' 0801'              	movf	?___fttol+1,w
  3070  0053' 0081'              	movwf	___altoft@c+1
  3071  0054' 0800'              	movf	?___fttol,w
  3072  0055' 0080'              	movwf	___altoft@c
  3073  0056' 120A' 118A' 2000' 120A' 118A' 	fcall	___altoft
  3074  005B' 1283               	bcf	3,5	;RP0=0, select bank0
  3075  005C' 1303               	bcf	3,6	;RP1=0, select bank0
  3076  005D' 0800'              	movf	?___altoft,w
  3077  005E' 00A1'              	movwf	floor@i
  3078  005F' 0801'              	movf	?___altoft+1,w
  3079  0060' 00A2'              	movwf	floor@i+1
  3080  0061' 0802'              	movf	?___altoft+2,w
  3081  0062' 00A3'              	movwf	floor@i+2
  3082  0063' 081D'              	movf	floor@x,w
  3083  0064' 0080'              	movwf	___ftge@ff1
  3084  0065' 081E'              	movf	floor@x+1,w
  3085  0066' 0081'              	movwf	___ftge@ff1+1
  3086  0067' 081F'              	movf	floor@x+2,w
  3087  0068' 0082'              	movwf	___ftge@ff1+2
  3088  0069' 0821'              	movf	floor@i,w
  3089  006A' 0083'              	movwf	___ftge@ff2
  3090  006B' 0822'              	movf	floor@i+1,w
  3091  006C' 0084'              	movwf	___ftge@ff2+1
  3092  006D' 0823'              	movf	floor@i+2,w
  3093  006E' 0085'              	movwf	___ftge@ff2+2
  3094  006F' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  3095  0074' 1803               	btfsc	3,0
  3096  0075' 2800'              	goto	i1l1741
  3097  0076' 3000               	movlw	0
  3098  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  3099  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  3100  0079' 0090'              	movwf	___ftadd@f1
  3101  007A' 3080               	movlw	128
  3102  007B' 0091'              	movwf	___ftadd@f1+1
  3103  007C' 30BF               	movlw	191
  3104  007D' 0092'              	movwf	___ftadd@f1+2
  3105  007E' 0821'              	movf	floor@i,w
  3106  007F' 0093'              	movwf	___ftadd@f2
  3107  0080' 0822'              	movf	floor@i+1,w
  3108  0081' 0094'              	movwf	___ftadd@f2+1
  3109  0082' 0823'              	movf	floor@i+2,w
  3110  0083' 0095'              	movwf	___ftadd@f2+2
  3111  0084' 120A' 118A' 2000'  	fcall	___ftadd
  3112  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  3113  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  3114  0089' 0810'              	movf	?___ftadd,w
  3115  008A' 009D'              	movwf	?_floor
  3116  008B' 0811'              	movf	?___ftadd+1,w
  3117  008C' 009E'              	movwf	?_floor+1
  3118  008D' 0812'              	movf	?___ftadd+2,w
  3119  008E' 009F'              	movwf	?_floor+2
  3120  008F' 0008               	return
  3121  0090'                    i1l1741:	
  3122  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  3123  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  3124  0092' 0821'              	movf	floor@i,w
  3125  0093' 009D'              	movwf	?_floor
  3126  0094' 0822'              	movf	floor@i+1,w
  3127  0095' 009E'              	movwf	?_floor+1
  3128  0096' 0823'              	movf	floor@i+2,w
  3129  0097' 009F'              	movwf	?_floor+2
  3130  0098' 0008               	return
  3131  0099'                    __end_of_floor:	
  3132                           
  3133                           	psect	text8
  3134  0000'                    __ptext8:	
  3135 ;; *************** function _frexp *****************
  3136 ;; Defined at:
  3137 ;;		line 254 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\frexp.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  value           3    0[COMMON] int 
  3140 ;;  eptr            1    3[COMMON] PTR int 
  3141 ;;		 -> log@exponent(2), floor@expon(2), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  3    0[COMMON] PTR int 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         4       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          2       0       0       0       0
  3156 ;;      Totals:         6       0       0       0       0
  3157 ;;Total ram usage:        6 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_floor
  3163 ;;		_log
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _frexp
  3169  0000'                    _frexp:	
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3173  0000' 0802'              	movf	frexp@value+2,w
  3174  0001' 0401'              	iorwf	frexp@value+1,w
  3175  0002' 0400'              	iorwf	frexp@value,w
  3176  0003' 1D03               	skipz
  3177  0004' 2800'              	goto	i1l1643
  3178  0005' 0803'              	movf	frexp@eptr,w
  3179  0006' 0084               	movwf	4
  3180  0007' 1383               	bcf	3,7	;select IRP bank0
  3181  0008' 0180               	clrf	0
  3182  0009' 0A84               	incf	4,f
  3183  000A' 0180               	clrf	0
  3184  000B' 3000               	movlw	0
  3185  000C' 0080'              	movwf	?_frexp
  3186  000D' 3000               	movlw	0
  3187  000E' 0081'              	movwf	?_frexp+1
  3188  000F' 3000               	movlw	0
  3189  0010' 0082'              	movwf	?_frexp+2
  3190  0011' 0008               	return
  3191  0012'                    i1l1643:	
  3192  0012' 0802'              	movf	frexp@value+2,w
  3193  0013' 397F               	andlw	127
  3194  0014' 0084'              	movwf	??_frexp
  3195  0015' 0185'              	clrf	??_frexp+1
  3196  0016' 1003               	clrc
  3197  0017' 0D84'              	rlf	??_frexp,f
  3198  0018' 0D85'              	rlf	??_frexp+1,f
  3199  0019' 0803'              	movf	frexp@eptr,w
  3200  001A' 0084               	movwf	4
  3201  001B' 0804'              	movf	??_frexp,w
  3202  001C' 1383               	bcf	3,7	;select IRP bank0
  3203  001D' 0080               	movwf	0
  3204  001E' 0A84               	incf	4,f
  3205  001F' 0805'              	movf	??_frexp+1,w
  3206  0020' 0080               	movwf	0
  3207  0021' 0D01'              	rlf	frexp@value+1,w
  3208  0022' 0D01'              	rlf	frexp@value+1,w
  3209  0023' 3901               	andlw	1
  3210  0024' 0084'              	movwf	??_frexp
  3211  0025' 0185'              	clrf	??_frexp+1
  3212  0026' 0803'              	movf	frexp@eptr,w
  3213  0027' 0084               	movwf	4
  3214  0028' 0804'              	movf	??_frexp,w
  3215  0029' 0480               	iorwf	0,f
  3216  002A' 0A84               	incf	4,f
  3217  002B' 0805'              	movf	??_frexp+1,w
  3218  002C' 0480               	iorwf	0,f
  3219  002D' 0803'              	movf	frexp@eptr,w
  3220  002E' 0084               	movwf	4
  3221  002F' 3082               	movlw	130
  3222  0030' 0780               	addwf	0,f
  3223  0031' 0F84               	incfsz	4,f
  3224  0032' 0800               	movf	0,w
  3225  0033' 1803               	skipnc
  3226  0034' 0A00               	incf	0,w
  3227  0035' 00FF               	movwf	127
  3228  0036' 30FF               	movlw	255
  3229  0037' 077F               	addwf	127,w
  3230  0038' 0080               	movwf	0
  3231  0039' 0384               	decf	4,f
  3232  003A' 0802'              	movf	frexp@value+2,w
  3233  003B' 3980               	andlw	-128
  3234  003C' 383F               	iorlw	63
  3235  003D' 0082'              	movwf	frexp@value+2
  3236  003E' 1381'              	bcf	frexp@value+1,7
  3237  003F' 0008               	return
  3238  0040'                    __end_of_frexp:	
  3239                           
  3240                           	psect	text9
  3241  0000'                    __ptext9:	
  3242 ;; *************** function ___fttol *****************
  3243 ;; Defined at:
  3244 ;;		line 44 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\fttol.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  f1              3    0[COMMON] float 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  lval            4    9[COMMON] unsigned long 
  3249 ;;  exp1            1   13[COMMON] unsigned char 
  3250 ;;  sign1           1    8[COMMON] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  4    0[COMMON] long 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         4       0       0       0       0
  3261 ;;      Locals:         6       0       0       0       0
  3262 ;;      Temps:          4       0       0       0       0
  3263 ;;      Totals:        14       0       0       0       0
  3264 ;;Total ram usage:       14 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_pow
  3270 ;;		_exp
  3271 ;;		_floor
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function ___fttol
  3277  0000'                    ___fttol:	
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3281  0000' 0800'              	movf	___fttol@f1,w
  3282  0001' 0084'              	movwf	??___fttol
  3283  0002' 0801'              	movf	___fttol@f1+1,w
  3284  0003' 0085'              	movwf	??___fttol+1
  3285  0004' 0802'              	movf	___fttol@f1+2,w
  3286  0005' 0086'              	movwf	??___fttol+2
  3287  0006' 1003               	clrc
  3288  0007' 0D05'              	rlf	??___fttol+1,w
  3289  0008' 0D06'              	rlf	??___fttol+2,w
  3290  0009' 0087'              	movwf	??___fttol+3
  3291  000A' 0807'              	movf	??___fttol+3,w
  3292  000B' 008D'              	movwf	___fttol@exp1
  3293  000C' 080D'              	movf	___fttol@exp1,w
  3294  000D' 1D03               	btfss	3,2
  3295  000E' 2800'              	goto	i1l1599
  3296  000F' 3000               	movlw	0
  3297  0010' 0083'              	movwf	?___fttol+3
  3298  0011' 3000               	movlw	0
  3299  0012' 0082'              	movwf	?___fttol+2
  3300  0013' 3000               	movlw	0
  3301  0014' 0081'              	movwf	?___fttol+1
  3302  0015' 3000               	movlw	0
  3303  0016' 0080'              	movwf	?___fttol
  3304  0017' 0008               	return
  3305  0018'                    i1l1599:	
  3306  0018' 0800'              	movf	___fttol@f1,w
  3307  0019' 0084'              	movwf	??___fttol
  3308  001A' 0801'              	movf	___fttol@f1+1,w
  3309  001B' 0085'              	movwf	??___fttol+1
  3310  001C' 0802'              	movf	___fttol@f1+2,w
  3311  001D' 0086'              	movwf	??___fttol+2
  3312  001E' 3017               	movlw	23
  3313  001F'                    u218_25:	
  3314  001F' 1003               	clrc
  3315  0020' 0C86'              	rrf	??___fttol+2,f
  3316  0021' 0C85'              	rrf	??___fttol+1,f
  3317  0022' 0C84'              	rrf	??___fttol,f
  3318  0023' 3EFF               	addlw	-1
  3319  0024' 1D03               	skipz
  3320  0025' 2800'              	goto	u218_25
  3321  0026' 0804'              	movf	??___fttol,w
  3322  0027' 0087'              	movwf	??___fttol+3
  3323  0028' 0807'              	movf	??___fttol+3,w
  3324  0029' 0088'              	movwf	___fttol@sign1
  3325  002A' 1781'              	bsf	___fttol@f1+1,7
  3326  002B' 30FF               	movlw	255
  3327  002C' 0580'              	andwf	___fttol@f1,f
  3328  002D' 30FF               	movlw	255
  3329  002E' 0581'              	andwf	___fttol@f1+1,f
  3330  002F' 3000               	movlw	0
  3331  0030' 0582'              	andwf	___fttol@f1+2,f
  3332  0031' 0800'              	movf	___fttol@f1,w
  3333  0032' 0089'              	movwf	___fttol@lval
  3334  0033' 0801'              	movf	___fttol@f1+1,w
  3335  0034' 008A'              	movwf	___fttol@lval+1
  3336  0035' 0802'              	movf	___fttol@f1+2,w
  3337  0036' 008B'              	movwf	___fttol@lval+2
  3338  0037' 018C'              	clrf	___fttol@lval+3
  3339  0038' 308E               	movlw	142
  3340  0039' 028D'              	subwf	___fttol@exp1,f
  3341  003A' 1F8D'              	btfss	___fttol@exp1,7
  3342  003B' 2800'              	goto	i1l1619
  3343  003C' 080D'              	movf	___fttol@exp1,w
  3344  003D' 3A80               	xorlw	128
  3345  003E' 3E8F               	addlw	143
  3346  003F' 1803               	skipnc
  3347  0040' 2800'              	goto	i1l1617
  3348  0041' 3000               	movlw	0
  3349  0042' 0083'              	movwf	?___fttol+3
  3350  0043' 3000               	movlw	0
  3351  0044' 0082'              	movwf	?___fttol+2
  3352  0045' 3000               	movlw	0
  3353  0046' 0081'              	movwf	?___fttol+1
  3354  0047' 3000               	movlw	0
  3355  0048' 0080'              	movwf	?___fttol
  3356  0049' 0008               	return
  3357  004A'                    i1l1617:	
  3358  004A' 3001               	movlw	1
  3359  004B'                    u221_25:	
  3360  004B' 1003               	clrc
  3361  004C' 0C8C'              	rrf	___fttol@lval+3,f
  3362  004D' 0C8B'              	rrf	___fttol@lval+2,f
  3363  004E' 0C8A'              	rrf	___fttol@lval+1,f
  3364  004F' 0C89'              	rrf	___fttol@lval,f
  3365  0050' 3EFF               	addlw	-1
  3366  0051' 1D03               	skipz
  3367  0052' 2800'              	goto	u221_25
  3368  0053' 3001               	movlw	1
  3369  0054' 0084'              	movwf	??___fttol
  3370  0055' 0804'              	movf	??___fttol,w
  3371  0056' 078D'              	addwf	___fttol@exp1,f
  3372  0057' 1903               	btfsc	3,2
  3373  0058' 2800'              	goto	i1l1627
  3374  0059' 2800'              	goto	i1l1617
  3375  005A'                    i1l1619:	
  3376  005A' 3018               	movlw	24
  3377  005B' 020D'              	subwf	___fttol@exp1,w
  3378  005C' 1C03               	skipc
  3379  005D' 2800'              	goto	i1l412
  3380  005E' 3000               	movlw	0
  3381  005F' 0083'              	movwf	?___fttol+3
  3382  0060' 3000               	movlw	0
  3383  0061' 0082'              	movwf	?___fttol+2
  3384  0062' 3000               	movlw	0
  3385  0063' 0081'              	movwf	?___fttol+1
  3386  0064' 3000               	movlw	0
  3387  0065' 0080'              	movwf	?___fttol
  3388  0066' 0008               	return
  3389  0067'                    i1l1625:	
  3390  0067' 3001               	movlw	1
  3391  0068' 0084'              	movwf	??___fttol
  3392  0069'                    u224_25:	
  3393  0069' 1003               	clrc
  3394  006A' 0D89'              	rlf	___fttol@lval,f
  3395  006B' 0D8A'              	rlf	___fttol@lval+1,f
  3396  006C' 0D8B'              	rlf	___fttol@lval+2,f
  3397  006D' 0D8C'              	rlf	___fttol@lval+3,f
  3398  006E' 0B84'              	decfsz	??___fttol,f
  3399  006F' 2800'              	goto	u224_25
  3400  0070' 3001               	movlw	1
  3401  0071' 028D'              	subwf	___fttol@exp1,f
  3402  0072'                    i1l412:	
  3403  0072' 080D'              	movf	___fttol@exp1,w
  3404  0073' 1D03               	btfss	3,2
  3405  0074' 2800'              	goto	i1l1625
  3406  0075'                    i1l1627:	
  3407  0075' 0808'              	movf	___fttol@sign1,w
  3408  0076' 1903               	btfsc	3,2
  3409  0077' 2800'              	goto	i1l1631
  3410  0078' 0989'              	comf	___fttol@lval,f
  3411  0079' 098A'              	comf	___fttol@lval+1,f
  3412  007A' 098B'              	comf	___fttol@lval+2,f
  3413  007B' 098C'              	comf	___fttol@lval+3,f
  3414  007C' 0A89'              	incf	___fttol@lval,f
  3415  007D' 1903               	skipnz
  3416  007E' 0A8A'              	incf	___fttol@lval+1,f
  3417  007F' 1903               	skipnz
  3418  0080' 0A8B'              	incf	___fttol@lval+2,f
  3419  0081' 1903               	skipnz
  3420  0082' 0A8C'              	incf	___fttol@lval+3,f
  3421  0083'                    i1l1631:	
  3422  0083' 080C'              	movf	___fttol@lval+3,w
  3423  0084' 0083'              	movwf	?___fttol+3
  3424  0085' 080B'              	movf	___fttol@lval+2,w
  3425  0086' 0082'              	movwf	?___fttol+2
  3426  0087' 080A'              	movf	___fttol@lval+1,w
  3427  0088' 0081'              	movwf	?___fttol+1
  3428  0089' 0809'              	movf	___fttol@lval,w
  3429  008A' 0080'              	movwf	?___fttol
  3430  008B' 0008               	return
  3431  008C'                    __end_of___fttol:	
  3432                           
  3433                           	psect	text10
  3434  0000'                    __ptext10:	
  3435 ;; *************** function ___ftge *****************
  3436 ;; Defined at:
  3437 ;;		line 4 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\ftge.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  ff1             3    0[COMMON] float 
  3440 ;;  ff2             3    3[COMMON] float 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;		None               void
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         6       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0
  3454 ;;      Temps:          6       0       0       0       0
  3455 ;;      Totals:        12       0       0       0       0
  3456 ;;Total ram usage:       12 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_pow
  3462 ;;		_exp
  3463 ;;		_floor
  3464 ;;		_ldexp
  3465 ;;		_log
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function ___ftge
  3471  0000'                    ___ftge:	
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3475  0000' 1F82'              	btfss	___ftge@ff1+2,7
  3476  0001' 2800'              	goto	i1l1519
  3477  0002' 3000               	movlw	0
  3478  0003' 0086'              	movwf	??___ftge
  3479  0004' 3000               	movlw	0
  3480  0005' 0087'              	movwf	??___ftge+1
  3481  0006' 3080               	movlw	128
  3482  0007' 0088'              	movwf	??___ftge+2
  3483  0008' 0900'              	comf	___ftge@ff1,w
  3484  0009' 0089'              	movwf	??___ftge+3
  3485  000A' 0901'              	comf	___ftge@ff1+1,w
  3486  000B' 008A'              	movwf	??___ftge+4
  3487  000C' 0902'              	comf	___ftge@ff1+2,w
  3488  000D' 008B'              	movwf	??___ftge+5
  3489  000E' 0A89'              	incf	??___ftge+3,f
  3490  000F' 1903               	skipnz
  3491  0010' 0A8A'              	incf	??___ftge+4,f
  3492  0011' 1903               	skipnz
  3493  0012' 0A8B'              	incf	??___ftge+5,f
  3494  0013' 0809'              	movf	??___ftge+3,w
  3495  0014' 0786'              	addwf	??___ftge,f
  3496  0015' 080A'              	movf	??___ftge+4,w
  3497  0016' 1803               	skipnc
  3498  0017' 0F0A'              	incfsz	??___ftge+4,w
  3499  0018' 2800'              	goto	u198_21
  3500  0019' 2800'              	goto	u198_22
  3501  001A'                    u198_21:	
  3502  001A' 0787'              	addwf	??___ftge+1,f
  3503  001B'                    u198_22:	
  3504  001B' 080B'              	movf	??___ftge+5,w
  3505  001C' 1803               	skipnc
  3506  001D' 0F0B'              	incfsz	??___ftge+5,w
  3507  001E' 2800'              	goto	u198_23
  3508  001F' 2800'              	goto	u198_24
  3509  0020'                    u198_23:	
  3510  0020' 0788'              	addwf	??___ftge+2,f
  3511  0021'                    u198_24:	
  3512  0021' 0806'              	movf	??___ftge,w
  3513  0022' 0080'              	movwf	___ftge@ff1
  3514  0023' 0807'              	movf	??___ftge+1,w
  3515  0024' 0081'              	movwf	___ftge@ff1+1
  3516  0025' 0808'              	movf	??___ftge+2,w
  3517  0026' 0082'              	movwf	___ftge@ff1+2
  3518  0027'                    i1l1519:	
  3519  0027' 1F85'              	btfss	___ftge@ff2+2,7
  3520  0028' 2800'              	goto	i1l1523
  3521  0029' 3000               	movlw	0
  3522  002A' 0086'              	movwf	??___ftge
  3523  002B' 3000               	movlw	0
  3524  002C' 0087'              	movwf	??___ftge+1
  3525  002D' 3080               	movlw	128
  3526  002E' 0088'              	movwf	??___ftge+2
  3527  002F' 0903'              	comf	___ftge@ff2,w
  3528  0030' 0089'              	movwf	??___ftge+3
  3529  0031' 0904'              	comf	___ftge@ff2+1,w
  3530  0032' 008A'              	movwf	??___ftge+4
  3531  0033' 0905'              	comf	___ftge@ff2+2,w
  3532  0034' 008B'              	movwf	??___ftge+5
  3533  0035' 0A89'              	incf	??___ftge+3,f
  3534  0036' 1903               	skipnz
  3535  0037' 0A8A'              	incf	??___ftge+4,f
  3536  0038' 1903               	skipnz
  3537  0039' 0A8B'              	incf	??___ftge+5,f
  3538  003A' 0809'              	movf	??___ftge+3,w
  3539  003B' 0786'              	addwf	??___ftge,f
  3540  003C' 080A'              	movf	??___ftge+4,w
  3541  003D' 1803               	skipnc
  3542  003E' 0F0A'              	incfsz	??___ftge+4,w
  3543  003F' 2800'              	goto	u200_21
  3544  0040' 2800'              	goto	u200_22
  3545  0041'                    u200_21:	
  3546  0041' 0787'              	addwf	??___ftge+1,f
  3547  0042'                    u200_22:	
  3548  0042' 080B'              	movf	??___ftge+5,w
  3549  0043' 1803               	skipnc
  3550  0044' 0F0B'              	incfsz	??___ftge+5,w
  3551  0045' 2800'              	goto	u200_23
  3552  0046' 2800'              	goto	u200_24
  3553  0047'                    u200_23:	
  3554  0047' 0788'              	addwf	??___ftge+2,f
  3555  0048'                    u200_24:	
  3556  0048' 0806'              	movf	??___ftge,w
  3557  0049' 0083'              	movwf	___ftge@ff2
  3558  004A' 0807'              	movf	??___ftge+1,w
  3559  004B' 0084'              	movwf	___ftge@ff2+1
  3560  004C' 0808'              	movf	??___ftge+2,w
  3561  004D' 0085'              	movwf	___ftge@ff2+2
  3562  004E'                    i1l1523:	
  3563  004E' 3080               	movlw	128
  3564  004F' 0682'              	xorwf	___ftge@ff1+2,f
  3565  0050' 3080               	movlw	128
  3566  0051' 0685'              	xorwf	___ftge@ff2+2,f
  3567  0052' 0805'              	movf	___ftge@ff2+2,w
  3568  0053' 0202'              	subwf	___ftge@ff1+2,w
  3569  0054' 1D03               	skipz
  3570  0055' 0008               	return
  3571  0056' 0804'              	movf	___ftge@ff2+1,w
  3572  0057' 0201'              	subwf	___ftge@ff1+1,w
  3573  0058' 1D03               	skipz
  3574  0059' 0008               	return
  3575  005A' 0803'              	movf	___ftge@ff2,w
  3576  005B' 0200'              	subwf	___ftge@ff1,w
  3577  005C' 0008               	return
  3578  005D'                    __end_of___ftge:	
  3579                           
  3580                           	psect	text11
  3581  0000'                    __ptext11:	
  3582 ;; *************** function ___altoft *****************
  3583 ;; Defined at:
  3584 ;;		line 42 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\altoft.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  c               4    0[BANK0 ] long 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  sign            1    7[BANK0 ] unsigned char 
  3589 ;;  exp             1    6[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  3    0[BANK0 ] float 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       4       0       0       0
  3600 ;;      Locals:         0       2       0       0       0
  3601 ;;      Temps:          0       2       0       0       0
  3602 ;;      Totals:         0       8       0       0       0
  3603 ;;Total ram usage:        8 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    1
  3606 ;; This function calls:
  3607 ;;		___ftpack
  3608 ;; This function is called by:
  3609 ;;		_floor
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function ___altoft
  3615  0000'                    ___altoft:	
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3619  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3620  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3621  0002' 0187'              	clrf	___altoft@sign
  3622  0003' 308E               	movlw	142
  3623  0004' 0084'              	movwf	??___altoft
  3624  0005' 0804'              	movf	??___altoft,w
  3625  0006' 0086'              	movwf	___altoft@exp
  3626  0007' 1F83'              	btfss	___altoft@c+3,7
  3627  0008' 2800'              	goto	i1l1439
  3628  0009' 0980'              	comf	___altoft@c,f
  3629  000A' 0981'              	comf	___altoft@c+1,f
  3630  000B' 0982'              	comf	___altoft@c+2,f
  3631  000C' 0983'              	comf	___altoft@c+3,f
  3632  000D' 0A80'              	incf	___altoft@c,f
  3633  000E' 1903               	skipnz
  3634  000F' 0A81'              	incf	___altoft@c+1,f
  3635  0010' 1903               	skipnz
  3636  0011' 0A82'              	incf	___altoft@c+2,f
  3637  0012' 1903               	skipnz
  3638  0013' 0A83'              	incf	___altoft@c+3,f
  3639  0014' 0187'              	clrf	___altoft@sign
  3640  0015' 0A87'              	incf	___altoft@sign,f
  3641  0016'                    i1l1439:	
  3642  0016' 30FF               	movlw	255
  3643  0017' 0503'              	andwf	___altoft@c+3,w
  3644  0018' 1903               	btfsc	3,2
  3645  0019' 2800'              	goto	i1l1441
  3646  001A' 3001               	movlw	1
  3647  001B'                    u171_25:	
  3648  001B' 1003               	clrc
  3649  001C' 0C83'              	rrf	___altoft@c+3,f
  3650  001D' 0C82'              	rrf	___altoft@c+2,f
  3651  001E' 0C81'              	rrf	___altoft@c+1,f
  3652  001F' 0C80'              	rrf	___altoft@c,f
  3653  0020' 3EFF               	addlw	-1
  3654  0021' 1D03               	skipz
  3655  0022' 2800'              	goto	u171_25
  3656  0023' 3001               	movlw	1
  3657  0024' 0084'              	movwf	??___altoft
  3658  0025' 0804'              	movf	??___altoft,w
  3659  0026' 0786'              	addwf	___altoft@exp,f
  3660  0027' 2800'              	goto	i1l1439
  3661  0028'                    i1l1441:	
  3662  0028' 0800'              	movf	___altoft@c,w
  3663  0029' 0080'              	movwf	___ftpack@arg
  3664  002A' 0801'              	movf	___altoft@c+1,w
  3665  002B' 0081'              	movwf	___ftpack@arg+1
  3666  002C' 0802'              	movf	___altoft@c+2,w
  3667  002D' 0082'              	movwf	___ftpack@arg+2
  3668  002E' 0806'              	movf	___altoft@exp,w
  3669  002F' 0084'              	movwf	??___altoft
  3670  0030' 0804'              	movf	??___altoft,w
  3671  0031' 0083'              	movwf	___ftpack@exp
  3672  0032' 0807'              	movf	___altoft@sign,w
  3673  0033' 0085'              	movwf	??___altoft+1
  3674  0034' 0805'              	movf	??___altoft+1,w
  3675  0035' 0084'              	movwf	___ftpack@sign
  3676  0036' 120A' 118A' 2000'  	fcall	___ftpack
  3677  0039' 0800'              	movf	?___ftpack,w
  3678  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  3679  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  3680  003C' 0080'              	movwf	?___altoft
  3681  003D' 0801'              	movf	?___ftpack+1,w
  3682  003E' 0081'              	movwf	?___altoft+1
  3683  003F' 0802'              	movf	?___ftpack+2,w
  3684  0040' 0082'              	movwf	?___altoft+2
  3685  0041' 0008               	return
  3686  0042'                    __end_of___altoft:	
  3687                           
  3688                           	psect	text12
  3689  0000'                    __ptext12:	
  3690 ;; *************** function _eval_poly *****************
  3691 ;; Defined at:
  3692 ;;		line 4 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\evalpoly.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  x               3   45[BANK0 ] float 
  3695 ;;  d               1   48[BANK0 ] PTR const 
  3696 ;;		 -> log@coeff(27), exp@coeff(30), 
  3697 ;;  n               2   49[BANK0 ] int 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  res             3   52[BANK0 ] int 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  3   45[BANK0 ] int 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       6       0       0       0
  3710 ;;      Locals:         0       3       0       0       0
  3711 ;;      Temps:          0       1       0       0       0
  3712 ;;      Totals:         0      10       0       0       0
  3713 ;;Total ram usage:       10 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    2
  3716 ;; This function calls:
  3717 ;;		___bmul
  3718 ;;		___ftadd
  3719 ;;		___ftmul
  3720 ;; This function is called by:
  3721 ;;		_exp
  3722 ;;		_log
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function _eval_poly
  3728  0000'                    _eval_poly:	
  3729                           
  3730                           ;incstack = 0
  3731                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3732  0000' 3003               	movlw	3
  3733  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3734  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  3735  0003' 00B3'              	movwf	??_eval_poly
  3736  0004' 0833'              	movf	??_eval_poly,w
  3737  0005' 0080'              	movwf	___bmul@multiplicand
  3738  0006' 0831'              	movf	eval_poly@n,w
  3739  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  3740  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  3741  000D' 1303               	bcf	3,6	;RP1=0, select bank0
  3742  000E' 0730'              	addwf	eval_poly@d,w
  3743  000F' 0084               	movwf	4
  3744  0010' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3745  0015' 00B4'              	movwf	eval_poly@res
  3746  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3747  001B' 00B5'              	movwf	eval_poly@res+1
  3748  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3749  0021'                    L6:	
  3750  0021' 00B6'              	movwf	eval_poly@res+2
  3751  0022' 0831'              	movf	eval_poly@n,w
  3752  0023' 0432'              	iorwf	eval_poly@n+1,w
  3753  0024' 1903               	btfsc	3,2
  3754  0025' 2800'              	goto	i1l1751
  3755  0026' 3003               	movlw	3
  3756  0027' 00B3'              	movwf	??_eval_poly
  3757  0028' 0833'              	movf	??_eval_poly,w
  3758  0029' 0080'              	movwf	___bmul@multiplicand
  3759  002A' 30FF               	movlw	255
  3760  002B' 07B1'              	addwf	eval_poly@n,f
  3761  002C' 1803               	skipnc
  3762  002D' 0AB2'              	incf	eval_poly@n+1,f
  3763  002E' 30FF               	movlw	255
  3764  002F' 07B2'              	addwf	eval_poly@n+1,f
  3765  0030' 0831'              	movf	eval_poly@n,w
  3766  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  3767  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  3768  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  3769  0038' 0730'              	addwf	eval_poly@d,w
  3770  0039' 0084               	movwf	4
  3771  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3772  003F' 0090'              	movwf	___ftadd@f1
  3773  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3774  0045' 0091'              	movwf	___ftadd@f1+1
  3775  0046' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3776  004B' 0092'              	movwf	___ftadd@f1+2
  3777  004C' 0834'              	movf	eval_poly@res,w
  3778  004D' 009D'              	movwf	___ftmul@f1
  3779  004E' 0835'              	movf	eval_poly@res+1,w
  3780  004F' 009E'              	movwf	___ftmul@f1+1
  3781  0050' 0836'              	movf	eval_poly@res+2,w
  3782  0051' 009F'              	movwf	___ftmul@f1+2
  3783  0052' 082D'              	movf	eval_poly@x,w
  3784  0053' 00A0'              	movwf	___ftmul@f2
  3785  0054' 082E'              	movf	eval_poly@x+1,w
  3786  0055' 00A1'              	movwf	___ftmul@f2+1
  3787  0056' 082F'              	movf	eval_poly@x+2,w
  3788  0057' 00A2'              	movwf	___ftmul@f2+2
  3789  0058' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  3790  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  3791  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  3792  005F' 081D'              	movf	?___ftmul,w
  3793  0060' 0093'              	movwf	___ftadd@f2
  3794  0061' 081E'              	movf	?___ftmul+1,w
  3795  0062' 0094'              	movwf	___ftadd@f2+1
  3796  0063' 081F'              	movf	?___ftmul+2,w
  3797  0064' 0095'              	movwf	___ftadd@f2+2
  3798  0065' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  3799  006A' 1283               	bcf	3,5	;RP0=0, select bank0
  3800  006B' 1303               	bcf	3,6	;RP1=0, select bank0
  3801  006C' 0810'              	movf	?___ftadd,w
  3802  006D' 00B4'              	movwf	eval_poly@res
  3803  006E' 0811'              	movf	?___ftadd+1,w
  3804  006F' 00B5'              	movwf	eval_poly@res+1
  3805  0070' 0812'              	movf	?___ftadd+2,w
  3806  0071' 2800'              	goto	L6
  3807  0072'                    i1l1751:	
  3808  0072' 0834'              	movf	eval_poly@res,w
  3809  0073' 00AD'              	movwf	?_eval_poly
  3810  0074' 0835'              	movf	eval_poly@res+1,w
  3811  0075' 00AE'              	movwf	?_eval_poly+1
  3812  0076' 0836'              	movf	eval_poly@res+2,w
  3813  0077' 00AF'              	movwf	?_eval_poly+2
  3814  0078' 0008               	return
  3815  0079'                    __end_of_eval_poly:	
  3816                           
  3817                           	psect	text13
  3818  0000'                    __ptext13:	
  3819 ;; *************** function ___ftmul *****************
  3820 ;; Defined at:
  3821 ;;		line 62 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\ftmul.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  f1              3   29[BANK0 ] float 
  3824 ;;  f2              3   32[BANK0 ] float 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  f3_as_produc    3   40[BANK0 ] unsigned um
  3827 ;;  sign            1   44[BANK0 ] unsigned char 
  3828 ;;  cntr            1   43[BANK0 ] unsigned char 
  3829 ;;  exp             1   39[BANK0 ] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  3   29[BANK0 ] float 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       6       0       0       0
  3840 ;;      Locals:         0       6       0       0       0
  3841 ;;      Temps:          0       4       0       0       0
  3842 ;;      Totals:         0      16       0       0       0
  3843 ;;Total ram usage:       16 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		___ftpack
  3848 ;; This function is called by:
  3849 ;;		_ISR
  3850 ;;		_pow
  3851 ;;		_exp
  3852 ;;		_log
  3853 ;;		_eval_poly
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function ___ftmul
  3859  0000'                    ___ftmul:	
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3863  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3864  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3865  0002' 081D'              	movf	___ftmul@f1,w
  3866  0003' 00A3'              	movwf	??___ftmul
  3867  0004' 081E'              	movf	___ftmul@f1+1,w
  3868  0005' 00A4'              	movwf	??___ftmul+1
  3869  0006' 081F'              	movf	___ftmul@f1+2,w
  3870  0007' 00A5'              	movwf	??___ftmul+2
  3871  0008' 1003               	clrc
  3872  0009' 0D24'              	rlf	??___ftmul+1,w
  3873  000A' 0D25'              	rlf	??___ftmul+2,w
  3874  000B' 00A6'              	movwf	??___ftmul+3
  3875  000C' 0826'              	movf	??___ftmul+3,w
  3876  000D' 00A7'              	movwf	___ftmul@exp
  3877  000E' 0827'              	movf	___ftmul@exp,w
  3878  000F' 1D03               	btfss	3,2
  3879  0010' 2800'              	goto	i1l1541
  3880  0011' 3000               	movlw	0
  3881  0012' 009D'              	movwf	?___ftmul
  3882  0013' 3000               	movlw	0
  3883  0014' 009E'              	movwf	?___ftmul+1
  3884  0015' 3000               	movlw	0
  3885  0016' 009F'              	movwf	?___ftmul+2
  3886  0017' 0008               	return
  3887  0018'                    i1l1541:	
  3888  0018' 0820'              	movf	___ftmul@f2,w
  3889  0019' 00A3'              	movwf	??___ftmul
  3890  001A' 0821'              	movf	___ftmul@f2+1,w
  3891  001B' 00A4'              	movwf	??___ftmul+1
  3892  001C' 0822'              	movf	___ftmul@f2+2,w
  3893  001D' 00A5'              	movwf	??___ftmul+2
  3894  001E' 1003               	clrc
  3895  001F' 0D24'              	rlf	??___ftmul+1,w
  3896  0020' 0D25'              	rlf	??___ftmul+2,w
  3897  0021' 00A6'              	movwf	??___ftmul+3
  3898  0022' 0826'              	movf	??___ftmul+3,w
  3899  0023' 00AC'              	movwf	___ftmul@sign
  3900  0024' 082C'              	movf	___ftmul@sign,w
  3901  0025' 1D03               	btfss	3,2
  3902  0026' 2800'              	goto	i1l1547
  3903  0027' 3000               	movlw	0
  3904  0028' 009D'              	movwf	?___ftmul
  3905  0029' 3000               	movlw	0
  3906  002A' 009E'              	movwf	?___ftmul+1
  3907  002B' 3000               	movlw	0
  3908  002C' 009F'              	movwf	?___ftmul+2
  3909  002D' 0008               	return
  3910  002E'                    i1l1547:	
  3911  002E' 082C'              	movf	___ftmul@sign,w
  3912  002F' 3E7B               	addlw	123
  3913  0030' 00A3'              	movwf	??___ftmul
  3914  0031' 0823'              	movf	??___ftmul,w
  3915  0032' 07A7'              	addwf	___ftmul@exp,f
  3916  0033' 081D'              	movf	___ftmul@f1,w
  3917  0034' 00A3'              	movwf	??___ftmul
  3918  0035' 081E'              	movf	___ftmul@f1+1,w
  3919  0036' 00A4'              	movwf	??___ftmul+1
  3920  0037' 081F'              	movf	___ftmul@f1+2,w
  3921  0038' 00A5'              	movwf	??___ftmul+2
  3922  0039' 3010               	movlw	16
  3923  003A'                    u204_25:	
  3924  003A' 1003               	clrc
  3925  003B' 0CA5'              	rrf	??___ftmul+2,f
  3926  003C' 0CA4'              	rrf	??___ftmul+1,f
  3927  003D' 0CA3'              	rrf	??___ftmul,f
  3928  003E' 3EFF               	addlw	-1
  3929  003F' 1D03               	skipz
  3930  0040' 2800'              	goto	u204_25
  3931  0041' 0823'              	movf	??___ftmul,w
  3932  0042' 00A6'              	movwf	??___ftmul+3
  3933  0043' 0826'              	movf	??___ftmul+3,w
  3934  0044' 00AC'              	movwf	___ftmul@sign
  3935  0045' 0820'              	movf	___ftmul@f2,w
  3936  0046' 00A3'              	movwf	??___ftmul
  3937  0047' 0821'              	movf	___ftmul@f2+1,w
  3938  0048' 00A4'              	movwf	??___ftmul+1
  3939  0049' 0822'              	movf	___ftmul@f2+2,w
  3940  004A' 00A5'              	movwf	??___ftmul+2
  3941  004B' 3010               	movlw	16
  3942  004C'                    u205_25:	
  3943  004C' 1003               	clrc
  3944  004D' 0CA5'              	rrf	??___ftmul+2,f
  3945  004E' 0CA4'              	rrf	??___ftmul+1,f
  3946  004F' 0CA3'              	rrf	??___ftmul,f
  3947  0050' 3EFF               	addlw	-1
  3948  0051' 1D03               	skipz
  3949  0052' 2800'              	goto	u205_25
  3950  0053' 0823'              	movf	??___ftmul,w
  3951  0054' 00A6'              	movwf	??___ftmul+3
  3952  0055' 0826'              	movf	??___ftmul+3,w
  3953  0056' 06AC'              	xorwf	___ftmul@sign,f
  3954  0057' 3080               	movlw	128
  3955  0058' 00A3'              	movwf	??___ftmul
  3956  0059' 0823'              	movf	??___ftmul,w
  3957  005A' 05AC'              	andwf	___ftmul@sign,f
  3958  005B' 179E'              	bsf	___ftmul@f1+1,7
  3959  005C' 17A1'              	bsf	___ftmul@f2+1,7
  3960  005D' 30FF               	movlw	255
  3961  005E' 05A0'              	andwf	___ftmul@f2,f
  3962  005F' 30FF               	movlw	255
  3963  0060' 05A1'              	andwf	___ftmul@f2+1,f
  3964  0061' 3000               	movlw	0
  3965  0062' 05A2'              	andwf	___ftmul@f2+2,f
  3966  0063' 3000               	movlw	0
  3967  0064' 00A8'              	movwf	___ftmul@f3_as_product
  3968  0065' 3000               	movlw	0
  3969  0066' 00A9'              	movwf	___ftmul@f3_as_product+1
  3970  0067' 3000               	movlw	0
  3971  0068' 00AA'              	movwf	___ftmul@f3_as_product+2
  3972  0069' 3007               	movlw	7
  3973  006A' 00A3'              	movwf	??___ftmul
  3974  006B' 0823'              	movf	??___ftmul,w
  3975  006C' 00AB'              	movwf	___ftmul@cntr
  3976  006D'                    i1l1559:	
  3977  006D' 1C1D'              	btfss	___ftmul@f1,0
  3978  006E' 2800'              	goto	i1l1563
  3979  006F' 0820'              	movf	___ftmul@f2,w
  3980  0070' 07A8'              	addwf	___ftmul@f3_as_product,f
  3981  0071' 0821'              	movf	___ftmul@f2+1,w
  3982  0072' 1103               	clrz
  3983  0073' 1803               	skipnc
  3984  0074' 0A21'              	incf	___ftmul@f2+1,w
  3985  0075' 1D03               	btfss	3,2
  3986  0076' 07A9'              	addwf	___ftmul@f3_as_product+1,f
  3987  0077' 0822'              	movf	___ftmul@f2+2,w
  3988  0078' 1103               	clrz
  3989  0079' 1803               	skipnc
  3990  007A' 0A22'              	incf	___ftmul@f2+2,w
  3991  007B' 1D03               	btfss	3,2
  3992  007C' 07AA'              	addwf	___ftmul@f3_as_product+2,f
  3993  007D'                    i1l1563:	
  3994  007D' 3001               	movlw	1
  3995  007E'                    u208_25:	
  3996  007E' 1003               	clrc
  3997  007F' 0C9F'              	rrf	___ftmul@f1+2,f
  3998  0080' 0C9E'              	rrf	___ftmul@f1+1,f
  3999  0081' 0C9D'              	rrf	___ftmul@f1,f
  4000  0082' 3EFF               	addlw	-1
  4001  0083' 1D03               	skipz
  4002  0084' 2800'              	goto	u208_25
  4003  0085' 3001               	movlw	1
  4004  0086'                    u209_25:	
  4005  0086' 1003               	clrc
  4006  0087' 0DA0'              	rlf	___ftmul@f2,f
  4007  0088' 0DA1'              	rlf	___ftmul@f2+1,f
  4008  0089' 0DA2'              	rlf	___ftmul@f2+2,f
  4009  008A' 3EFF               	addlw	-1
  4010  008B' 1D03               	skipz
  4011  008C' 2800'              	goto	u209_25
  4012  008D' 3001               	movlw	1
  4013  008E' 02AB'              	subwf	___ftmul@cntr,f
  4014  008F' 1D03               	btfss	3,2
  4015  0090' 2800'              	goto	i1l1559
  4016  0091' 3009               	movlw	9
  4017  0092' 00A3'              	movwf	??___ftmul
  4018  0093' 0823'              	movf	??___ftmul,w
  4019  0094' 00AB'              	movwf	___ftmul@cntr
  4020  0095'                    i1l1571:	
  4021  0095' 1C1D'              	btfss	___ftmul@f1,0
  4022  0096' 2800'              	goto	i1l1575
  4023  0097' 0820'              	movf	___ftmul@f2,w
  4024  0098' 07A8'              	addwf	___ftmul@f3_as_product,f
  4025  0099' 0821'              	movf	___ftmul@f2+1,w
  4026  009A' 1103               	clrz
  4027  009B' 1803               	skipnc
  4028  009C' 0A21'              	incf	___ftmul@f2+1,w
  4029  009D' 1D03               	btfss	3,2
  4030  009E' 07A9'              	addwf	___ftmul@f3_as_product+1,f
  4031  009F' 0822'              	movf	___ftmul@f2+2,w
  4032  00A0' 1103               	clrz
  4033  00A1' 1803               	skipnc
  4034  00A2' 0A22'              	incf	___ftmul@f2+2,w
  4035  00A3' 1D03               	btfss	3,2
  4036  00A4' 07AA'              	addwf	___ftmul@f3_as_product+2,f
  4037  00A5'                    i1l1575:	
  4038  00A5' 3001               	movlw	1
  4039  00A6'                    u213_25:	
  4040  00A6' 1003               	clrc
  4041  00A7' 0C9F'              	rrf	___ftmul@f1+2,f
  4042  00A8' 0C9E'              	rrf	___ftmul@f1+1,f
  4043  00A9' 0C9D'              	rrf	___ftmul@f1,f
  4044  00AA' 3EFF               	addlw	-1
  4045  00AB' 1D03               	skipz
  4046  00AC' 2800'              	goto	u213_25
  4047  00AD' 3001               	movlw	1
  4048  00AE'                    u214_25:	
  4049  00AE' 1003               	clrc
  4050  00AF' 0CAA'              	rrf	___ftmul@f3_as_product+2,f
  4051  00B0' 0CA9'              	rrf	___ftmul@f3_as_product+1,f
  4052  00B1' 0CA8'              	rrf	___ftmul@f3_as_product,f
  4053  00B2' 3EFF               	addlw	-1
  4054  00B3' 1D03               	skipz
  4055  00B4' 2800'              	goto	u214_25
  4056  00B5' 3001               	movlw	1
  4057  00B6' 02AB'              	subwf	___ftmul@cntr,f
  4058  00B7' 1D03               	btfss	3,2
  4059  00B8' 2800'              	goto	i1l1571
  4060  00B9' 0828'              	movf	___ftmul@f3_as_product,w
  4061  00BA' 0080'              	movwf	___ftpack@arg
  4062  00BB' 0829'              	movf	___ftmul@f3_as_product+1,w
  4063  00BC' 0081'              	movwf	___ftpack@arg+1
  4064  00BD' 082A'              	movf	___ftmul@f3_as_product+2,w
  4065  00BE' 0082'              	movwf	___ftpack@arg+2
  4066  00BF' 0827'              	movf	___ftmul@exp,w
  4067  00C0' 00A3'              	movwf	??___ftmul
  4068  00C1' 0823'              	movf	??___ftmul,w
  4069  00C2' 0083'              	movwf	___ftpack@exp
  4070  00C3' 082C'              	movf	___ftmul@sign,w
  4071  00C4' 00A4'              	movwf	??___ftmul+1
  4072  00C5' 0824'              	movf	??___ftmul+1,w
  4073  00C6' 0084'              	movwf	___ftpack@sign
  4074  00C7' 120A' 118A' 2000'  	fcall	___ftpack
  4075  00CA' 0800'              	movf	?___ftpack,w
  4076  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  4077  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  4078  00CD' 009D'              	movwf	?___ftmul
  4079  00CE' 0801'              	movf	?___ftpack+1,w
  4080  00CF' 009E'              	movwf	?___ftmul+1
  4081  00D0' 0802'              	movf	?___ftpack+2,w
  4082  00D1' 009F'              	movwf	?___ftmul+2
  4083  00D2' 0008               	return
  4084  00D3'                    __end_of___ftmul:	
  4085                           
  4086                           	psect	text14
  4087  0000'                    __ptext14:	
  4088 ;; *************** function ___bmul *****************
  4089 ;; Defined at:
  4090 ;;		line 4 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\Umul8.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  multiplier      1    wreg     unsigned char 
  4093 ;;  multiplicand    1    0[COMMON] unsigned char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  multiplier      1    3[COMMON] unsigned char 
  4096 ;;  product         1    2[COMMON] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      unsigned char 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         1       0       0       0       0
  4107 ;;      Locals:         2       0       0       0       0
  4108 ;;      Temps:          1       0       0       0       0
  4109 ;;      Totals:         4       0       0       0       0
  4110 ;;Total ram usage:        4 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_eval_poly
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function ___bmul
  4121  0000'                    ___bmul:	
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4125                           ;___bmul@multiplier stored from wreg
  4126  0000' 0083'              	movwf	___bmul@multiplier
  4127  0001' 0182'              	clrf	___bmul@product
  4128  0002'                    i1l1417:	
  4129  0002' 1C03'              	btfss	___bmul@multiplier,0
  4130  0003' 2800'              	goto	i1l1421
  4131  0004' 0800'              	movf	___bmul@multiplicand,w
  4132  0005' 0081'              	movwf	??___bmul
  4133  0006' 0801'              	movf	??___bmul,w
  4134  0007' 0782'              	addwf	___bmul@product,f
  4135  0008'                    i1l1421:	
  4136  0008' 1003               	clrc
  4137  0009' 0D80'              	rlf	___bmul@multiplicand,f
  4138  000A' 1003               	clrc
  4139  000B' 0C83'              	rrf	___bmul@multiplier,f
  4140  000C' 0803'              	movf	___bmul@multiplier,w
  4141  000D' 1D03               	btfss	3,2
  4142  000E' 2800'              	goto	i1l1417
  4143  000F' 0802'              	movf	___bmul@product,w
  4144  0010' 0008               	return
  4145  0011'                    __end_of___bmul:	
  4146                           
  4147                           	psect	text15
  4148  0000'                    __ptext15:	
  4149 ;; *************** function ___ftsub *****************
  4150 ;; Defined at:
  4151 ;;		line 18 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\ftsub.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  f2              3   29[BANK0 ] float 
  4154 ;;  f1              3   32[BANK0 ] float 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  3   29[BANK0 ] float 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       6       0       0       0
  4167 ;;      Locals:         0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0
  4169 ;;      Totals:         0       6       0       0       0
  4170 ;;Total ram usage:        6 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    2
  4173 ;; This function calls:
  4174 ;;		___ftadd
  4175 ;; This function is called by:
  4176 ;;		_exp
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function ___ftsub
  4182  0000'                    ___ftsub:	
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4186  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4187  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4188  0002' 081F'              	movf	___ftsub@f2+2,w
  4189  0003' 041E'              	iorwf	___ftsub@f2+1,w
  4190  0004' 041D'              	iorwf	___ftsub@f2,w
  4191  0005' 1903               	skipnz
  4192  0006' 2800'              	goto	i1l1713
  4193  0007' 3080               	movlw	128
  4194  0008' 069F'              	xorwf	___ftsub@f2+2,f
  4195  0009'                    i1l1713:	
  4196  0009' 0820'              	movf	___ftsub@f1,w
  4197  000A' 0090'              	movwf	___ftadd@f1
  4198  000B' 0821'              	movf	___ftsub@f1+1,w
  4199  000C' 0091'              	movwf	___ftadd@f1+1
  4200  000D' 0822'              	movf	___ftsub@f1+2,w
  4201  000E' 0092'              	movwf	___ftadd@f1+2
  4202  000F' 081D'              	movf	___ftsub@f2,w
  4203  0010' 0093'              	movwf	___ftadd@f2
  4204  0011' 081E'              	movf	___ftsub@f2+1,w
  4205  0012' 0094'              	movwf	___ftadd@f2+1
  4206  0013' 081F'              	movf	___ftsub@f2+2,w
  4207  0014' 0095'              	movwf	___ftadd@f2+2
  4208  0015' 120A' 118A' 2000'  	fcall	___ftadd
  4209  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  4210  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  4211  001A' 0810'              	movf	?___ftadd,w
  4212  001B' 009D'              	movwf	?___ftsub
  4213  001C' 0811'              	movf	?___ftadd+1,w
  4214  001D' 009E'              	movwf	?___ftsub+1
  4215  001E' 0812'              	movf	?___ftadd+2,w
  4216  001F' 009F'              	movwf	?___ftsub+2
  4217  0020' 0008               	return
  4218  0021'                    __end_of___ftsub:	
  4219                           
  4220                           	psect	text16
  4221  0000'                    __ptext16:	
  4222 ;; *************** function ___ftadd *****************
  4223 ;; Defined at:
  4224 ;;		line 86 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\ftadd.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  f1              3   16[BANK0 ] float 
  4227 ;;  f2              3   19[BANK0 ] float 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  exp1            1   28[BANK0 ] unsigned char 
  4230 ;;  exp2            1   27[BANK0 ] unsigned char 
  4231 ;;  sign            1   26[BANK0 ] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  3   16[BANK0 ] float 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4241 ;;      Params:         0       6       0       0       0
  4242 ;;      Locals:         0       3       0       0       0
  4243 ;;      Temps:          0       4       0       0       0
  4244 ;;      Totals:         0      13       0       0       0
  4245 ;;Total ram usage:       13 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    1
  4248 ;; This function calls:
  4249 ;;		___ftpack
  4250 ;; This function is called by:
  4251 ;;		_ISR
  4252 ;;		___ftsub
  4253 ;;		_floor
  4254 ;;		_log
  4255 ;;		_eval_poly
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function ___ftadd
  4261  0000'                    ___ftadd:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4265  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4266  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4267  0002' 0810'              	movf	___ftadd@f1,w
  4268  0003' 0096'              	movwf	??___ftadd
  4269  0004' 0811'              	movf	___ftadd@f1+1,w
  4270  0005' 0097'              	movwf	??___ftadd+1
  4271  0006' 0812'              	movf	___ftadd@f1+2,w
  4272  0007' 0098'              	movwf	??___ftadd+2
  4273  0008' 1003               	clrc
  4274  0009' 0D17'              	rlf	??___ftadd+1,w
  4275  000A' 0D18'              	rlf	??___ftadd+2,w
  4276  000B' 0099'              	movwf	??___ftadd+3
  4277  000C' 0819'              	movf	??___ftadd+3,w
  4278  000D' 009C'              	movwf	___ftadd@exp1
  4279  000E' 0813'              	movf	___ftadd@f2,w
  4280  000F' 0096'              	movwf	??___ftadd
  4281  0010' 0814'              	movf	___ftadd@f2+1,w
  4282  0011' 0097'              	movwf	??___ftadd+1
  4283  0012' 0815'              	movf	___ftadd@f2+2,w
  4284  0013' 0098'              	movwf	??___ftadd+2
  4285  0014' 1003               	clrc
  4286  0015' 0D17'              	rlf	??___ftadd+1,w
  4287  0016' 0D18'              	rlf	??___ftadd+2,w
  4288  0017' 0099'              	movwf	??___ftadd+3
  4289  0018' 0819'              	movf	??___ftadd+3,w
  4290  0019' 009B'              	movwf	___ftadd@exp2
  4291  001A' 081C'              	movf	___ftadd@exp1,w
  4292  001B' 1903               	btfsc	3,2
  4293  001C' 2800'              	goto	i1l1451
  4294  001D' 081B'              	movf	___ftadd@exp2,w
  4295  001E' 021C'              	subwf	___ftadd@exp1,w
  4296  001F' 1803               	skipnc
  4297  0020' 2800'              	goto	i1l1455
  4298  0021' 031C'              	decf	___ftadd@exp1,w
  4299  0022' 3AFF               	xorlw	255
  4300  0023' 071B'              	addwf	___ftadd@exp2,w
  4301  0024' 0096'              	movwf	??___ftadd
  4302  0025' 3019               	movlw	25
  4303  0026' 0216'              	subwf	??___ftadd,w
  4304  0027' 1C03               	skipc
  4305  0028' 2800'              	goto	i1l1455
  4306  0029'                    i1l1451:	
  4307  0029' 0813'              	movf	___ftadd@f2,w
  4308  002A' 0090'              	movwf	?___ftadd
  4309  002B' 0814'              	movf	___ftadd@f2+1,w
  4310  002C' 0091'              	movwf	?___ftadd+1
  4311  002D' 0815'              	movf	___ftadd@f2+2,w
  4312  002E' 0092'              	movwf	?___ftadd+2
  4313  002F' 0008               	return
  4314  0030'                    i1l1455:	
  4315  0030' 081B'              	movf	___ftadd@exp2,w
  4316  0031' 1903               	btfsc	3,2
  4317  0032' 0008               	return
  4318  0033' 081C'              	movf	___ftadd@exp1,w
  4319  0034' 021B'              	subwf	___ftadd@exp2,w
  4320  0035' 1803               	skipnc
  4321  0036' 2800'              	goto	i1l1461
  4322  0037' 031B'              	decf	___ftadd@exp2,w
  4323  0038' 3AFF               	xorlw	255
  4324  0039' 071C'              	addwf	___ftadd@exp1,w
  4325  003A' 0096'              	movwf	??___ftadd
  4326  003B' 3019               	movlw	25
  4327  003C' 0216'              	subwf	??___ftadd,w
  4328  003D' 1803               	btfsc	3,0
  4329  003E' 0008               	return
  4330  003F'                    i1l1461:	
  4331  003F' 3006               	movlw	6
  4332  0040' 0096'              	movwf	??___ftadd
  4333  0041' 0816'              	movf	??___ftadd,w
  4334  0042' 009A'              	movwf	___ftadd@sign
  4335  0043' 1B92'              	btfsc	___ftadd@f1+2,7
  4336  0044' 179A'              	bsf	___ftadd@sign,7
  4337  0045' 1B95'              	btfsc	___ftadd@f2+2,7
  4338  0046' 171A'              	bsf	___ftadd@sign,6
  4339  0047' 1791'              	bsf	___ftadd@f1+1,7
  4340  0048' 30FF               	movlw	255
  4341  0049' 0590'              	andwf	___ftadd@f1,f
  4342  004A' 30FF               	movlw	255
  4343  004B' 0591'              	andwf	___ftadd@f1+1,f
  4344  004C' 3000               	movlw	0
  4345  004D' 0592'              	andwf	___ftadd@f1+2,f
  4346  004E' 1794'              	bsf	___ftadd@f2+1,7
  4347  004F' 30FF               	movlw	255
  4348  0050' 0593'              	andwf	___ftadd@f2,f
  4349  0051' 30FF               	movlw	255
  4350  0052' 0594'              	andwf	___ftadd@f2+1,f
  4351  0053' 3000               	movlw	0
  4352  0054' 0595'              	andwf	___ftadd@f2+2,f
  4353  0055' 081B'              	movf	___ftadd@exp2,w
  4354  0056' 021C'              	subwf	___ftadd@exp1,w
  4355  0057' 1803               	skipnc
  4356  0058' 2800'              	goto	i1l1483
  4357  0059'                    i1l1473:	
  4358  0059' 3001               	movlw	1
  4359  005A'                    u182_25:	
  4360  005A' 1003               	clrc
  4361  005B' 0D93'              	rlf	___ftadd@f2,f
  4362  005C' 0D94'              	rlf	___ftadd@f2+1,f
  4363  005D' 0D95'              	rlf	___ftadd@f2+2,f
  4364  005E' 3EFF               	addlw	-1
  4365  005F' 1D03               	skipz
  4366  0060' 2800'              	goto	u182_25
  4367  0061' 3001               	movlw	1
  4368  0062' 029B'              	subwf	___ftadd@exp2,f
  4369  0063' 081B'              	movf	___ftadd@exp2,w
  4370  0064' 061C'              	xorwf	___ftadd@exp1,w
  4371  0065' 1903               	skipnz
  4372  0066' 2800'              	goto	i1l1481
  4373  0067' 3001               	movlw	1
  4374  0068' 029A'              	subwf	___ftadd@sign,f
  4375  0069' 081A'              	movf	___ftadd@sign,w
  4376  006A' 3907               	andlw	7
  4377  006B' 1903               	btfsc	3,2
  4378  006C' 2800'              	goto	i1l1481
  4379  006D' 2800'              	goto	i1l1473
  4380  006E'                    i1l1479:	
  4381  006E' 3001               	movlw	1
  4382  006F'                    u185_25:	
  4383  006F' 1003               	clrc
  4384  0070' 0C92'              	rrf	___ftadd@f1+2,f
  4385  0071' 0C91'              	rrf	___ftadd@f1+1,f
  4386  0072' 0C90'              	rrf	___ftadd@f1,f
  4387  0073' 3EFF               	addlw	-1
  4388  0074' 1D03               	skipz
  4389  0075' 2800'              	goto	u185_25
  4390  0076' 3001               	movlw	1
  4391  0077' 0096'              	movwf	??___ftadd
  4392  0078' 0816'              	movf	??___ftadd,w
  4393  0079' 079C'              	addwf	___ftadd@exp1,f
  4394  007A'                    i1l1481:	
  4395  007A' 081C'              	movf	___ftadd@exp1,w
  4396  007B' 061B'              	xorwf	___ftadd@exp2,w
  4397  007C' 1903               	btfsc	3,2
  4398  007D' 2800'              	goto	i1l352
  4399  007E' 2800'              	goto	i1l1479
  4400  007F'                    i1l1483:	
  4401  007F' 081C'              	movf	___ftadd@exp1,w
  4402  0080' 021B'              	subwf	___ftadd@exp2,w
  4403  0081' 1803               	skipnc
  4404  0082' 2800'              	goto	i1l352
  4405  0083'                    i1l1485:	
  4406  0083' 3001               	movlw	1
  4407  0084'                    u188_25:	
  4408  0084' 1003               	clrc
  4409  0085' 0D90'              	rlf	___ftadd@f1,f
  4410  0086' 0D91'              	rlf	___ftadd@f1+1,f
  4411  0087' 0D92'              	rlf	___ftadd@f1+2,f
  4412  0088' 3EFF               	addlw	-1
  4413  0089' 1D03               	skipz
  4414  008A' 2800'              	goto	u188_25
  4415  008B' 3001               	movlw	1
  4416  008C' 029C'              	subwf	___ftadd@exp1,f
  4417  008D' 081B'              	movf	___ftadd@exp2,w
  4418  008E' 061C'              	xorwf	___ftadd@exp1,w
  4419  008F' 1903               	skipnz
  4420  0090' 2800'              	goto	i1l1493
  4421  0091' 3001               	movlw	1
  4422  0092' 029A'              	subwf	___ftadd@sign,f
  4423  0093' 081A'              	movf	___ftadd@sign,w
  4424  0094' 3907               	andlw	7
  4425  0095' 1903               	btfsc	3,2
  4426  0096' 2800'              	goto	i1l1493
  4427  0097' 2800'              	goto	i1l1485
  4428  0098'                    i1l1491:	
  4429  0098' 3001               	movlw	1
  4430  0099'                    u191_25:	
  4431  0099' 1003               	clrc
  4432  009A' 0C95'              	rrf	___ftadd@f2+2,f
  4433  009B' 0C94'              	rrf	___ftadd@f2+1,f
  4434  009C' 0C93'              	rrf	___ftadd@f2,f
  4435  009D' 3EFF               	addlw	-1
  4436  009E' 1D03               	skipz
  4437  009F' 2800'              	goto	u191_25
  4438  00A0' 3001               	movlw	1
  4439  00A1' 0096'              	movwf	??___ftadd
  4440  00A2' 0816'              	movf	??___ftadd,w
  4441  00A3' 079B'              	addwf	___ftadd@exp2,f
  4442  00A4'                    i1l1493:	
  4443  00A4' 081C'              	movf	___ftadd@exp1,w
  4444  00A5' 061B'              	xorwf	___ftadd@exp2,w
  4445  00A6' 1D03               	skipz
  4446  00A7' 2800'              	goto	i1l1491
  4447  00A8'                    i1l352:	
  4448  00A8' 1F9A'              	btfss	___ftadd@sign,7
  4449  00A9' 2800'              	goto	i1l1497
  4450  00AA' 30FF               	movlw	255
  4451  00AB' 0690'              	xorwf	___ftadd@f1,f
  4452  00AC' 30FF               	movlw	255
  4453  00AD' 0691'              	xorwf	___ftadd@f1+1,f
  4454  00AE' 30FF               	movlw	255
  4455  00AF' 0692'              	xorwf	___ftadd@f1+2,f
  4456  00B0' 3001               	movlw	1
  4457  00B1' 0790'              	addwf	___ftadd@f1,f
  4458  00B2' 3000               	movlw	0
  4459  00B3' 1803               	skipnc
  4460  00B4' 3001               	movlw	1
  4461  00B5' 0791'              	addwf	___ftadd@f1+1,f
  4462  00B6' 3000               	movlw	0
  4463  00B7' 1803               	skipnc
  4464  00B8' 3001               	movlw	1
  4465  00B9' 0792'              	addwf	___ftadd@f1+2,f
  4466  00BA'                    i1l1497:	
  4467  00BA' 1F1A'              	btfss	___ftadd@sign,6
  4468  00BB' 2800'              	goto	i1l1501
  4469  00BC' 30FF               	movlw	255
  4470  00BD' 0693'              	xorwf	___ftadd@f2,f
  4471  00BE' 30FF               	movlw	255
  4472  00BF' 0694'              	xorwf	___ftadd@f2+1,f
  4473  00C0' 30FF               	movlw	255
  4474  00C1' 0695'              	xorwf	___ftadd@f2+2,f
  4475  00C2' 3001               	movlw	1
  4476  00C3' 0793'              	addwf	___ftadd@f2,f
  4477  00C4' 3000               	movlw	0
  4478  00C5' 1803               	skipnc
  4479  00C6' 3001               	movlw	1
  4480  00C7' 0794'              	addwf	___ftadd@f2+1,f
  4481  00C8' 3000               	movlw	0
  4482  00C9' 1803               	skipnc
  4483  00CA' 3001               	movlw	1
  4484  00CB' 0795'              	addwf	___ftadd@f2+2,f
  4485  00CC'                    i1l1501:	
  4486  00CC' 019A'              	clrf	___ftadd@sign
  4487  00CD' 0810'              	movf	___ftadd@f1,w
  4488  00CE' 0793'              	addwf	___ftadd@f2,f
  4489  00CF' 0811'              	movf	___ftadd@f1+1,w
  4490  00D0' 1103               	clrz
  4491  00D1' 1803               	skipnc
  4492  00D2' 0A11'              	incf	___ftadd@f1+1,w
  4493  00D3' 1D03               	btfss	3,2
  4494  00D4' 0794'              	addwf	___ftadd@f2+1,f
  4495  00D5' 0812'              	movf	___ftadd@f1+2,w
  4496  00D6' 1103               	clrz
  4497  00D7' 1803               	skipnc
  4498  00D8' 0A12'              	incf	___ftadd@f1+2,w
  4499  00D9' 1D03               	btfss	3,2
  4500  00DA' 0795'              	addwf	___ftadd@f2+2,f
  4501  00DB' 1F95'              	btfss	___ftadd@f2+2,7
  4502  00DC' 2800'              	goto	i1l1511
  4503  00DD' 30FF               	movlw	255
  4504  00DE' 0693'              	xorwf	___ftadd@f2,f
  4505  00DF' 30FF               	movlw	255
  4506  00E0' 0694'              	xorwf	___ftadd@f2+1,f
  4507  00E1' 30FF               	movlw	255
  4508  00E2' 0695'              	xorwf	___ftadd@f2+2,f
  4509  00E3' 3001               	movlw	1
  4510  00E4' 0793'              	addwf	___ftadd@f2,f
  4511  00E5' 3000               	movlw	0
  4512  00E6' 1803               	skipnc
  4513  00E7' 3001               	movlw	1
  4514  00E8' 0794'              	addwf	___ftadd@f2+1,f
  4515  00E9' 3000               	movlw	0
  4516  00EA' 1803               	skipnc
  4517  00EB' 3001               	movlw	1
  4518  00EC' 0795'              	addwf	___ftadd@f2+2,f
  4519  00ED' 019A'              	clrf	___ftadd@sign
  4520  00EE' 0A9A'              	incf	___ftadd@sign,f
  4521  00EF'                    i1l1511:	
  4522  00EF' 0813'              	movf	___ftadd@f2,w
  4523  00F0' 0080'              	movwf	___ftpack@arg
  4524  00F1' 0814'              	movf	___ftadd@f2+1,w
  4525  00F2' 0081'              	movwf	___ftpack@arg+1
  4526  00F3' 0815'              	movf	___ftadd@f2+2,w
  4527  00F4' 0082'              	movwf	___ftpack@arg+2
  4528  00F5' 081C'              	movf	___ftadd@exp1,w
  4529  00F6' 0096'              	movwf	??___ftadd
  4530  00F7' 0816'              	movf	??___ftadd,w
  4531  00F8' 0083'              	movwf	___ftpack@exp
  4532  00F9' 081A'              	movf	___ftadd@sign,w
  4533  00FA' 0097'              	movwf	??___ftadd+1
  4534  00FB' 0817'              	movf	??___ftadd+1,w
  4535  00FC' 0084'              	movwf	___ftpack@sign
  4536  00FD' 120A' 118A' 2000'  	fcall	___ftpack
  4537  0100' 0800'              	movf	?___ftpack,w
  4538  0101' 1283               	bcf	3,5	;RP0=0, select bank0
  4539  0102' 1303               	bcf	3,6	;RP1=0, select bank0
  4540  0103' 0090'              	movwf	?___ftadd
  4541  0104' 0801'              	movf	?___ftpack+1,w
  4542  0105' 0091'              	movwf	?___ftadd+1
  4543  0106' 0802'              	movf	?___ftpack+2,w
  4544  0107' 0092'              	movwf	?___ftadd+2
  4545  0108' 0008               	return
  4546  0109'                    __end_of___ftadd:	
  4547                           
  4548                           	psect	text17
  4549  0000'                    __ptext17:	
  4550 ;; *************** function ___ftdiv *****************
  4551 ;; Defined at:
  4552 ;;		line 56 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\ftdiv.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  f2              3    0[BANK0 ] float 
  4555 ;;  f1              3    3[BANK0 ] float 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  f3              3   11[BANK0 ] float 
  4558 ;;  sign            1   15[BANK0 ] unsigned char 
  4559 ;;  exp             1   14[BANK0 ] unsigned char 
  4560 ;;  cntr            1   10[BANK0 ] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  3    0[BANK0 ] float 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4570 ;;      Params:         0       6       0       0       0
  4571 ;;      Locals:         0       6       0       0       0
  4572 ;;      Temps:          0       4       0       0       0
  4573 ;;      Totals:         0      16       0       0       0
  4574 ;;Total ram usage:       16 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    1
  4577 ;; This function calls:
  4578 ;;		___ftpack
  4579 ;; This function is called by:
  4580 ;;		_ISR
  4581 ;;		_exp
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function ___ftdiv
  4587  0000'                    ___ftdiv:	
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4591  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4592  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4593  0002' 0803'              	movf	___ftdiv@f1,w
  4594  0003' 0086'              	movwf	??___ftdiv
  4595  0004' 0804'              	movf	___ftdiv@f1+1,w
  4596  0005' 0087'              	movwf	??___ftdiv+1
  4597  0006' 0805'              	movf	___ftdiv@f1+2,w
  4598  0007' 0088'              	movwf	??___ftdiv+2
  4599  0008' 1003               	clrc
  4600  0009' 0D07'              	rlf	??___ftdiv+1,w
  4601  000A' 0D08'              	rlf	??___ftdiv+2,w
  4602  000B' 0089'              	movwf	??___ftdiv+3
  4603  000C' 0809'              	movf	??___ftdiv+3,w
  4604  000D' 008E'              	movwf	___ftdiv@exp
  4605  000E' 080E'              	movf	___ftdiv@exp,w
  4606  000F' 1D03               	btfss	3,2
  4607  0010' 2800'              	goto	i1l1673
  4608  0011' 3000               	movlw	0
  4609  0012' 0080'              	movwf	?___ftdiv
  4610  0013' 3000               	movlw	0
  4611  0014' 0081'              	movwf	?___ftdiv+1
  4612  0015' 3000               	movlw	0
  4613  0016' 0082'              	movwf	?___ftdiv+2
  4614  0017' 0008               	return
  4615  0018'                    i1l1673:	
  4616  0018' 0800'              	movf	___ftdiv@f2,w
  4617  0019' 0086'              	movwf	??___ftdiv
  4618  001A' 0801'              	movf	___ftdiv@f2+1,w
  4619  001B' 0087'              	movwf	??___ftdiv+1
  4620  001C' 0802'              	movf	___ftdiv@f2+2,w
  4621  001D' 0088'              	movwf	??___ftdiv+2
  4622  001E' 1003               	clrc
  4623  001F' 0D07'              	rlf	??___ftdiv+1,w
  4624  0020' 0D08'              	rlf	??___ftdiv+2,w
  4625  0021' 0089'              	movwf	??___ftdiv+3
  4626  0022' 0809'              	movf	??___ftdiv+3,w
  4627  0023' 008F'              	movwf	___ftdiv@sign
  4628  0024' 080F'              	movf	___ftdiv@sign,w
  4629  0025' 1D03               	btfss	3,2
  4630  0026' 2800'              	goto	i1l1679
  4631  0027' 3000               	movlw	0
  4632  0028' 0080'              	movwf	?___ftdiv
  4633  0029' 3000               	movlw	0
  4634  002A' 0081'              	movwf	?___ftdiv+1
  4635  002B' 3000               	movlw	0
  4636  002C' 0082'              	movwf	?___ftdiv+2
  4637  002D' 0008               	return
  4638  002E'                    i1l1679:	
  4639  002E' 3000               	movlw	0
  4640  002F' 008B'              	movwf	___ftdiv@f3
  4641  0030' 3000               	movlw	0
  4642  0031' 008C'              	movwf	___ftdiv@f3+1
  4643  0032' 3000               	movlw	0
  4644  0033' 008D'              	movwf	___ftdiv@f3+2
  4645  0034' 3089               	movlw	137
  4646  0035' 070F'              	addwf	___ftdiv@sign,w
  4647  0036' 0086'              	movwf	??___ftdiv
  4648  0037' 0806'              	movf	??___ftdiv,w
  4649  0038' 028E'              	subwf	___ftdiv@exp,f
  4650  0039' 0803'              	movf	___ftdiv@f1,w
  4651  003A' 0086'              	movwf	??___ftdiv
  4652  003B' 0804'              	movf	___ftdiv@f1+1,w
  4653  003C' 0087'              	movwf	??___ftdiv+1
  4654  003D' 0805'              	movf	___ftdiv@f1+2,w
  4655  003E' 0088'              	movwf	??___ftdiv+2
  4656  003F' 3010               	movlw	16
  4657  0040'                    u231_25:	
  4658  0040' 1003               	clrc
  4659  0041' 0C88'              	rrf	??___ftdiv+2,f
  4660  0042' 0C87'              	rrf	??___ftdiv+1,f
  4661  0043' 0C86'              	rrf	??___ftdiv,f
  4662  0044' 3EFF               	addlw	-1
  4663  0045' 1D03               	skipz
  4664  0046' 2800'              	goto	u231_25
  4665  0047' 0806'              	movf	??___ftdiv,w
  4666  0048' 0089'              	movwf	??___ftdiv+3
  4667  0049' 0809'              	movf	??___ftdiv+3,w
  4668  004A' 008F'              	movwf	___ftdiv@sign
  4669  004B' 0800'              	movf	___ftdiv@f2,w
  4670  004C' 0086'              	movwf	??___ftdiv
  4671  004D' 0801'              	movf	___ftdiv@f2+1,w
  4672  004E' 0087'              	movwf	??___ftdiv+1
  4673  004F' 0802'              	movf	___ftdiv@f2+2,w
  4674  0050' 0088'              	movwf	??___ftdiv+2
  4675  0051' 3010               	movlw	16
  4676  0052'                    u232_25:	
  4677  0052' 1003               	clrc
  4678  0053' 0C88'              	rrf	??___ftdiv+2,f
  4679  0054' 0C87'              	rrf	??___ftdiv+1,f
  4680  0055' 0C86'              	rrf	??___ftdiv,f
  4681  0056' 3EFF               	addlw	-1
  4682  0057' 1D03               	skipz
  4683  0058' 2800'              	goto	u232_25
  4684  0059' 0806'              	movf	??___ftdiv,w
  4685  005A' 0089'              	movwf	??___ftdiv+3
  4686  005B' 0809'              	movf	??___ftdiv+3,w
  4687  005C' 068F'              	xorwf	___ftdiv@sign,f
  4688  005D' 3080               	movlw	128
  4689  005E' 0086'              	movwf	??___ftdiv
  4690  005F' 0806'              	movf	??___ftdiv,w
  4691  0060' 058F'              	andwf	___ftdiv@sign,f
  4692  0061' 1784'              	bsf	___ftdiv@f1+1,7
  4693  0062' 30FF               	movlw	255
  4694  0063' 0583'              	andwf	___ftdiv@f1,f
  4695  0064' 30FF               	movlw	255
  4696  0065' 0584'              	andwf	___ftdiv@f1+1,f
  4697  0066' 3000               	movlw	0
  4698  0067' 0585'              	andwf	___ftdiv@f1+2,f
  4699  0068' 1781'              	bsf	___ftdiv@f2+1,7
  4700  0069' 30FF               	movlw	255
  4701  006A' 0580'              	andwf	___ftdiv@f2,f
  4702  006B' 30FF               	movlw	255
  4703  006C' 0581'              	andwf	___ftdiv@f2+1,f
  4704  006D' 3000               	movlw	0
  4705  006E' 0582'              	andwf	___ftdiv@f2+2,f
  4706  006F' 3018               	movlw	24
  4707  0070' 0086'              	movwf	??___ftdiv
  4708  0071' 0806'              	movf	??___ftdiv,w
  4709  0072' 008A'              	movwf	___ftdiv@cntr
  4710  0073'                    i1l1693:	
  4711  0073' 3001               	movlw	1
  4712  0074'                    u233_25:	
  4713  0074' 1003               	clrc
  4714  0075' 0D8B'              	rlf	___ftdiv@f3,f
  4715  0076' 0D8C'              	rlf	___ftdiv@f3+1,f
  4716  0077' 0D8D'              	rlf	___ftdiv@f3+2,f
  4717  0078' 3EFF               	addlw	-1
  4718  0079' 1D03               	skipz
  4719  007A' 2800'              	goto	u233_25
  4720  007B' 0802'              	movf	___ftdiv@f2+2,w
  4721  007C' 0205'              	subwf	___ftdiv@f1+2,w
  4722  007D' 1D03               	skipz
  4723  007E' 2800'              	goto	u234_25
  4724  007F' 0801'              	movf	___ftdiv@f2+1,w
  4725  0080' 0204'              	subwf	___ftdiv@f1+1,w
  4726  0081' 1D03               	skipz
  4727  0082' 2800'              	goto	u234_25
  4728  0083' 0800'              	movf	___ftdiv@f2,w
  4729  0084' 0203'              	subwf	___ftdiv@f1,w
  4730  0085'                    u234_25:	
  4731  0085' 1C03               	skipc
  4732  0086' 2800'              	goto	i1l1701
  4733  0087' 0800'              	movf	___ftdiv@f2,w
  4734  0088' 0283'              	subwf	___ftdiv@f1,f
  4735  0089' 0801'              	movf	___ftdiv@f2+1,w
  4736  008A' 1C03               	skipc
  4737  008B' 0F01'              	incfsz	___ftdiv@f2+1,w
  4738  008C' 0284'              	subwf	___ftdiv@f1+1,f
  4739  008D' 0802'              	movf	___ftdiv@f2+2,w
  4740  008E' 1C03               	skipc
  4741  008F' 0A02'              	incf	___ftdiv@f2+2,w
  4742  0090' 0285'              	subwf	___ftdiv@f1+2,f
  4743  0091' 140B'              	bsf	___ftdiv@f3,0
  4744  0092'                    i1l1701:	
  4745  0092' 3001               	movlw	1
  4746  0093'                    u235_25:	
  4747  0093' 1003               	clrc
  4748  0094' 0D83'              	rlf	___ftdiv@f1,f
  4749  0095' 0D84'              	rlf	___ftdiv@f1+1,f
  4750  0096' 0D85'              	rlf	___ftdiv@f1+2,f
  4751  0097' 3EFF               	addlw	-1
  4752  0098' 1D03               	skipz
  4753  0099' 2800'              	goto	u235_25
  4754  009A' 3001               	movlw	1
  4755  009B' 028A'              	subwf	___ftdiv@cntr,f
  4756  009C' 1D03               	btfss	3,2
  4757  009D' 2800'              	goto	i1l1693
  4758  009E' 080B'              	movf	___ftdiv@f3,w
  4759  009F' 0080'              	movwf	___ftpack@arg
  4760  00A0' 080C'              	movf	___ftdiv@f3+1,w
  4761  00A1' 0081'              	movwf	___ftpack@arg+1
  4762  00A2' 080D'              	movf	___ftdiv@f3+2,w
  4763  00A3' 0082'              	movwf	___ftpack@arg+2
  4764  00A4' 080E'              	movf	___ftdiv@exp,w
  4765  00A5' 0086'              	movwf	??___ftdiv
  4766  00A6' 0806'              	movf	??___ftdiv,w
  4767  00A7' 0083'              	movwf	___ftpack@exp
  4768  00A8' 080F'              	movf	___ftdiv@sign,w
  4769  00A9' 0087'              	movwf	??___ftdiv+1
  4770  00AA' 0807'              	movf	??___ftdiv+1,w
  4771  00AB' 0084'              	movwf	___ftpack@sign
  4772  00AC' 120A' 118A' 2000'  	fcall	___ftpack
  4773  00AF' 0800'              	movf	?___ftpack,w
  4774  00B0' 1283               	bcf	3,5	;RP0=0, select bank0
  4775  00B1' 1303               	bcf	3,6	;RP1=0, select bank0
  4776  00B2' 0080'              	movwf	?___ftdiv
  4777  00B3' 0801'              	movf	?___ftpack+1,w
  4778  00B4' 0081'              	movwf	?___ftdiv+1
  4779  00B5' 0802'              	movf	?___ftpack+2,w
  4780  00B6' 0082'              	movwf	?___ftdiv+2
  4781  00B7' 0008               	return
  4782  00B8'                    __end_of___ftdiv:	
  4783                           
  4784                           	psect	text18
  4785  0000'                    __ptext18:	
  4786 ;; *************** function ___awtoft *****************
  4787 ;; Defined at:
  4788 ;;		line 32 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\awtoft.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  c               2    8[COMMON] int 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  sign            1   13[COMMON] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  3    8[COMMON] float 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4802 ;;      Params:         3       0       0       0       0
  4803 ;;      Locals:         1       0       0       0       0
  4804 ;;      Temps:          2       0       0       0       0
  4805 ;;      Totals:         6       0       0       0       0
  4806 ;;Total ram usage:        6 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    1
  4809 ;; This function calls:
  4810 ;;		___ftpack
  4811 ;; This function is called by:
  4812 ;;		_ISR
  4813 ;;		_exp
  4814 ;;		_log
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function ___awtoft
  4820  0000'                    ___awtoft:	
  4821                           
  4822                           ;incstack = 0
  4823                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4824  0000' 018D'              	clrf	___awtoft@sign
  4825  0001' 1F89'              	btfss	___awtoft@c+1,7
  4826  0002' 2800'              	goto	i1l1663
  4827  0003' 0988'              	comf	___awtoft@c,f
  4828  0004' 0989'              	comf	___awtoft@c+1,f
  4829  0005' 0A88'              	incf	___awtoft@c,f
  4830  0006' 1903               	skipnz
  4831  0007' 0A89'              	incf	___awtoft@c+1,f
  4832  0008' 018D'              	clrf	___awtoft@sign
  4833  0009' 0A8D'              	incf	___awtoft@sign,f
  4834  000A'                    i1l1663:	
  4835  000A' 0808'              	movf	___awtoft@c,w
  4836  000B' 0080'              	movwf	___ftpack@arg
  4837  000C' 0809'              	movf	___awtoft@c+1,w
  4838  000D' 0081'              	movwf	___ftpack@arg+1
  4839  000E' 0182'              	clrf	___ftpack@arg+2
  4840  000F' 308E               	movlw	142
  4841  0010' 008B'              	movwf	??___awtoft
  4842  0011' 080B'              	movf	??___awtoft,w
  4843  0012' 0083'              	movwf	___ftpack@exp
  4844  0013' 080D'              	movf	___awtoft@sign,w
  4845  0014' 008C'              	movwf	??___awtoft+1
  4846  0015' 080C'              	movf	??___awtoft+1,w
  4847  0016' 0084'              	movwf	___ftpack@sign
  4848  0017' 120A' 118A' 2000'  	fcall	___ftpack
  4849  001A' 0800'              	movf	?___ftpack,w
  4850  001B' 0088'              	movwf	?___awtoft
  4851  001C' 0801'              	movf	?___ftpack+1,w
  4852  001D' 0089'              	movwf	?___awtoft+1
  4853  001E' 0802'              	movf	?___ftpack+2,w
  4854  001F' 008A'              	movwf	?___awtoft+2
  4855  0020' 0008               	return
  4856  0021'                    __end_of___awtoft:	
  4857                           
  4858                           	psect	text19
  4859  0000'                    __ptext19:	
  4860 ;; *************** function ___lltoft *****************
  4861 ;; Defined at:
  4862 ;;		line 35 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\lltoft.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  c               4    8[COMMON] unsigned long 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  exp             1   13[COMMON] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  3    8[COMMON] float 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0, pclath, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         4       0       0       0       0
  4877 ;;      Locals:         1       0       0       0       0
  4878 ;;      Temps:          1       0       0       0       0
  4879 ;;      Totals:         6       0       0       0       0
  4880 ;;Total ram usage:        6 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    1
  4883 ;; This function calls:
  4884 ;;		___ftpack
  4885 ;; This function is called by:
  4886 ;;		_pow
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           
  4891                           ;psect for function ___lltoft
  4892  0000'                    ___lltoft:	
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4896  0000' 308E               	movlw	142
  4897  0001' 008C'              	movwf	??___lltoft
  4898  0002' 080C'              	movf	??___lltoft,w
  4899  0003' 008D'              	movwf	___lltoft@exp
  4900  0004'                    i1l1805:	
  4901  0004' 30FF               	movlw	255
  4902  0005' 050B'              	andwf	___lltoft@c+3,w
  4903  0006' 1903               	btfsc	3,2
  4904  0007' 2800'              	goto	i1l1807
  4905  0008' 3001               	movlw	1
  4906  0009'                    u247_25:	
  4907  0009' 1003               	clrc
  4908  000A' 0C8B'              	rrf	___lltoft@c+3,f
  4909  000B' 0C8A'              	rrf	___lltoft@c+2,f
  4910  000C' 0C89'              	rrf	___lltoft@c+1,f
  4911  000D' 0C88'              	rrf	___lltoft@c,f
  4912  000E' 3EFF               	addlw	-1
  4913  000F' 1D03               	skipz
  4914  0010' 2800'              	goto	u247_25
  4915  0011' 3001               	movlw	1
  4916  0012' 008C'              	movwf	??___lltoft
  4917  0013' 080C'              	movf	??___lltoft,w
  4918  0014' 078D'              	addwf	___lltoft@exp,f
  4919  0015' 2800'              	goto	i1l1805
  4920  0016'                    i1l1807:	
  4921  0016' 0808'              	movf	___lltoft@c,w
  4922  0017' 0080'              	movwf	___ftpack@arg
  4923  0018' 0809'              	movf	___lltoft@c+1,w
  4924  0019' 0081'              	movwf	___ftpack@arg+1
  4925  001A' 080A'              	movf	___lltoft@c+2,w
  4926  001B' 0082'              	movwf	___ftpack@arg+2
  4927  001C' 080D'              	movf	___lltoft@exp,w
  4928  001D' 008C'              	movwf	??___lltoft
  4929  001E' 080C'              	movf	??___lltoft,w
  4930  001F' 0083'              	movwf	___ftpack@exp
  4931  0020' 0184'              	clrf	___ftpack@sign
  4932  0021' 120A' 118A' 2000'  	fcall	___ftpack
  4933  0024' 0800'              	movf	?___ftpack,w
  4934  0025' 0088'              	movwf	?___lltoft
  4935  0026' 0801'              	movf	?___ftpack+1,w
  4936  0027' 0089'              	movwf	?___lltoft+1
  4937  0028' 0802'              	movf	?___ftpack+2,w
  4938  0029' 008A'              	movwf	?___lltoft+2
  4939  002A' 0008               	return
  4940  002B'                    __end_of___lltoft:	
  4941                           
  4942                           	psect	text20
  4943  0000'                    __ptext20:	
  4944 ;; *************** function ___ftpack *****************
  4945 ;; Defined at:
  4946 ;;		line 62 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\float.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  arg             3    0[COMMON] unsigned um
  4949 ;;  exp             1    3[COMMON] unsigned char 
  4950 ;;  sign            1    4[COMMON] unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  3    0[COMMON] float 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         5       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0
  4964 ;;      Temps:          3       0       0       0       0
  4965 ;;      Totals:         8       0       0       0       0
  4966 ;;Total ram usage:        8 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		___altoft
  4972 ;;		___awtoft
  4973 ;;		___ftadd
  4974 ;;		___ftdiv
  4975 ;;		___ftmul
  4976 ;;		___lltoft
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function ___ftpack
  4982  0000'                    ___ftpack:	
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4986  0000' 0803'              	movf	___ftpack@exp,w
  4987  0001' 1903               	btfsc	3,2
  4988  0002' 2800'              	goto	i1l1387
  4989  0003' 0802'              	movf	___ftpack@arg+2,w
  4990  0004' 0401'              	iorwf	___ftpack@arg+1,w
  4991  0005' 0400'              	iorwf	___ftpack@arg,w
  4992  0006' 1D03               	skipz
  4993  0007' 2800'              	goto	i1l1393
  4994  0008'                    i1l1387:	
  4995  0008' 3000               	movlw	0
  4996  0009' 0080'              	movwf	?___ftpack
  4997  000A' 3000               	movlw	0
  4998  000B' 0081'              	movwf	?___ftpack+1
  4999  000C' 3000               	movlw	0
  5000  000D' 0082'              	movwf	?___ftpack+2
  5001  000E' 0008               	return
  5002  000F'                    i1l1391:	
  5003  000F' 3001               	movlw	1
  5004  0010' 0085'              	movwf	??___ftpack
  5005  0011' 0805'              	movf	??___ftpack,w
  5006  0012' 0783'              	addwf	___ftpack@exp,f
  5007  0013' 3001               	movlw	1
  5008  0014'                    u158_25:	
  5009  0014' 1003               	clrc
  5010  0015' 0C82'              	rrf	___ftpack@arg+2,f
  5011  0016' 0C81'              	rrf	___ftpack@arg+1,f
  5012  0017' 0C80'              	rrf	___ftpack@arg,f
  5013  0018' 3EFF               	addlw	-1
  5014  0019' 1D03               	skipz
  5015  001A' 2800'              	goto	u158_25
  5016  001B'                    i1l1393:	
  5017  001B' 30FE               	movlw	254
  5018  001C' 0502'              	andwf	___ftpack@arg+2,w
  5019  001D' 1903               	btfsc	3,2
  5020  001E' 2800'              	goto	i1l321
  5021  001F' 2800'              	goto	i1l1391
  5022  0020'                    i1l1395:	
  5023  0020' 3001               	movlw	1
  5024  0021' 0085'              	movwf	??___ftpack
  5025  0022' 0805'              	movf	??___ftpack,w
  5026  0023' 0783'              	addwf	___ftpack@exp,f
  5027  0024' 3001               	movlw	1
  5028  0025' 0780'              	addwf	___ftpack@arg,f
  5029  0026' 3000               	movlw	0
  5030  0027' 1803               	skipnc
  5031  0028' 3001               	movlw	1
  5032  0029' 0781'              	addwf	___ftpack@arg+1,f
  5033  002A' 3000               	movlw	0
  5034  002B' 1803               	skipnc
  5035  002C' 3001               	movlw	1
  5036  002D' 0782'              	addwf	___ftpack@arg+2,f
  5037  002E' 3001               	movlw	1
  5038  002F'                    u160_25:	
  5039  002F' 1003               	clrc
  5040  0030' 0C82'              	rrf	___ftpack@arg+2,f
  5041  0031' 0C81'              	rrf	___ftpack@arg+1,f
  5042  0032' 0C80'              	rrf	___ftpack@arg,f
  5043  0033' 3EFF               	addlw	-1
  5044  0034' 1D03               	skipz
  5045  0035' 2800'              	goto	u160_25
  5046  0036'                    i1l321:	
  5047  0036' 30FF               	movlw	255
  5048  0037' 0502'              	andwf	___ftpack@arg+2,w
  5049  0038' 1903               	btfsc	3,2
  5050  0039' 2800'              	goto	i1l1403
  5051  003A' 2800'              	goto	i1l1395
  5052  003B'                    i1l1401:	
  5053  003B' 3001               	movlw	1
  5054  003C' 0283'              	subwf	___ftpack@exp,f
  5055  003D' 3001               	movlw	1
  5056  003E'                    u162_25:	
  5057  003E' 1003               	clrc
  5058  003F' 0D80'              	rlf	___ftpack@arg,f
  5059  0040' 0D81'              	rlf	___ftpack@arg+1,f
  5060  0041' 0D82'              	rlf	___ftpack@arg+2,f
  5061  0042' 3EFF               	addlw	-1
  5062  0043' 1D03               	skipz
  5063  0044' 2800'              	goto	u162_25
  5064  0045'                    i1l1403:	
  5065  0045' 1B81'              	btfsc	___ftpack@arg+1,7
  5066  0046' 2800'              	goto	i1l328
  5067  0047' 3002               	movlw	2
  5068  0048' 0203'              	subwf	___ftpack@exp,w
  5069  0049' 1803               	skipnc
  5070  004A' 2800'              	goto	i1l1401
  5071  004B'                    i1l328:	
  5072  004B' 1803'              	btfsc	___ftpack@exp,0
  5073  004C' 2800'              	goto	i1l329
  5074  004D' 30FF               	movlw	255
  5075  004E' 0580'              	andwf	___ftpack@arg,f
  5076  004F' 307F               	movlw	127
  5077  0050' 0581'              	andwf	___ftpack@arg+1,f
  5078  0051' 30FF               	movlw	255
  5079  0052' 0582'              	andwf	___ftpack@arg+2,f
  5080  0053'                    i1l329:	
  5081  0053' 1003               	clrc
  5082  0054' 0C83'              	rrf	___ftpack@exp,f
  5083  0055' 0803'              	movf	___ftpack@exp,w
  5084  0056' 0085'              	movwf	??___ftpack
  5085  0057' 0186'              	clrf	??___ftpack+1
  5086  0058' 0187'              	clrf	??___ftpack+2
  5087  0059' 3010               	movlw	16
  5088  005A'                    u166_25:	
  5089  005A' 1003               	clrc
  5090  005B' 0D85'              	rlf	??___ftpack,f
  5091  005C' 0D86'              	rlf	??___ftpack+1,f
  5092  005D' 0D87'              	rlf	??___ftpack+2,f
  5093  005E' 3EFF               	addlw	-1
  5094  005F' 1D03               	skipz
  5095  0060' 2800'              	goto	u166_25
  5096  0061' 0805'              	movf	??___ftpack,w
  5097  0062' 0480'              	iorwf	___ftpack@arg,f
  5098  0063' 0806'              	movf	??___ftpack+1,w
  5099  0064' 0481'              	iorwf	___ftpack@arg+1,f
  5100  0065' 0807'              	movf	??___ftpack+2,w
  5101  0066' 0482'              	iorwf	___ftpack@arg+2,f
  5102  0067' 0804'              	movf	___ftpack@sign,w
  5103  0068' 1903               	btfsc	3,2
  5104  0069' 0008               	return
  5105  006A' 1782'              	bsf	___ftpack@arg+2,7
  5106  006B' 0008               	return
  5107  006C'                    __end_of___ftpack:	
  5108                           
  5109                           	psect	text21
  5110  0000'                    __ptext21:	
  5111 ;; *************** function _endTX *****************
  5112 ;; Defined at:
  5113 ;;		line 154 in file "ISR.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5127 ;;      Params:         0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0
  5129 ;;      Temps:          1       0       0       0       0
  5130 ;;      Totals:         1       0       0       0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    1
  5134 ;; This function calls:
  5135 ;;		_ring_buffer_put_char
  5136 ;; This function is called by:
  5137 ;;		_ISR
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function _endTX
  5143  0000'                    _endTX:	
  5144                           
  5145                           ;ISR.c: 155: ring_buffer_put_char(0,0xA);
  5146                           
  5147                           ;incstack = 0
  5148                           ; Regs used in _endTX: [allreg]
  5149  0000' 3000               	movlw	0
  5150  0001' 0080'              	movwf	_ring_buffer_put_char$0
  5151  0002' 0081'              	movwf	_ring_buffer_put_char$0+1
  5152  0003' 300A               	movlw	10
  5153  0004' 0080'              	movwf	??_endTX
  5154  0005' 0800'              	movf	??_endTX,w
  5155  0006' 0082'              	movwf	_ring_buffer_put_char$1
  5156  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_ring_buffer_put_char
  5157                           
  5158                           ;ISR.c: 156: if(!TXEN) TXEN = 1;
  5159  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  5160  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  5161  000E' 1A98               	btfsc	24,5	;volatile
  5162  000F' 0008               	return
  5163  0010' 1698               	bsf	24,5	;volatile
  5164  0011' 0008               	return
  5165  0012'                    __end_of_endTX:	
  5166                           
  5167                           	psect	text22
  5168  0000'                    __ptext22:	
  5169 ;; *************** function ___wmul *****************
  5170 ;; Defined at:
  5171 ;;		line 15 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\Umul16.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  multiplier      2    0[COMMON] unsigned int 
  5174 ;;  multiplicand    2    2[COMMON] unsigned int 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  product         2    4[COMMON] unsigned int 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  2    0[COMMON] unsigned int 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5186 ;;      Params:         4       0       0       0       0
  5187 ;;      Locals:         2       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0
  5189 ;;      Totals:         6       0       0       0       0
  5190 ;;Total ram usage:        6 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_ISR
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function ___wmul
  5201  0000'                    ___wmul:	
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5205  0000' 0184'              	clrf	___wmul@product
  5206  0001' 0185'              	clrf	___wmul@product+1
  5207  0002'                    i1l1935:	
  5208  0002' 1C00'              	btfss	___wmul@multiplier,0
  5209  0003' 2800'              	goto	i1l160
  5210  0004' 0802'              	movf	___wmul@multiplicand,w
  5211  0005' 0784'              	addwf	___wmul@product,f
  5212  0006' 1803               	skipnc
  5213  0007' 0A85'              	incf	___wmul@product+1,f
  5214  0008' 0803'              	movf	___wmul@multiplicand+1,w
  5215  0009' 0785'              	addwf	___wmul@product+1,f
  5216  000A'                    i1l160:	
  5217  000A' 3001               	movlw	1
  5218  000B'                    u267_25:	
  5219  000B' 1003               	clrc
  5220  000C' 0D82'              	rlf	___wmul@multiplicand,f
  5221  000D' 0D83'              	rlf	___wmul@multiplicand+1,f
  5222  000E' 3EFF               	addlw	-1
  5223  000F' 1D03               	skipz
  5224  0010' 2800'              	goto	u267_25
  5225  0011' 3001               	movlw	1
  5226  0012'                    u268_25:	
  5227  0012' 1003               	clrc
  5228  0013' 0C81'              	rrf	___wmul@multiplier+1,f
  5229  0014' 0C80'              	rrf	___wmul@multiplier,f
  5230  0015' 3EFF               	addlw	-1
  5231  0016' 1D03               	skipz
  5232  0017' 2800'              	goto	u268_25
  5233  0018' 0800'              	movf	___wmul@multiplier,w
  5234  0019' 0401'              	iorwf	___wmul@multiplier+1,w
  5235  001A' 1D03               	btfss	3,2
  5236  001B' 2800'              	goto	i1l1935
  5237  001C' 0805'              	movf	___wmul@product+1,w
  5238  001D' 0081'              	movwf	?___wmul+1
  5239  001E' 0804'              	movf	___wmul@product,w
  5240  001F' 0080'              	movwf	?___wmul
  5241  0020' 0008               	return
  5242  0021'                    __end_of___wmul:	
  5243                           
  5244                           	psect	text23
  5245  0000'                    __ptext23:	
  5246 ;; *************** function ___lbmod *****************
  5247 ;; Defined at:
  5248 ;;		line 4 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\lbmod.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  dividend        1    wreg     unsigned char 
  5251 ;;  divisor         1    0[COMMON] unsigned char 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  dividend        1    4[COMMON] unsigned char 
  5254 ;;  rem             1    6[COMMON] unsigned char 
  5255 ;;  counter         1    5[COMMON] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      unsigned char 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5265 ;;      Params:         1       0       0       0       0
  5266 ;;      Locals:         3       0       0       0       0
  5267 ;;      Temps:          3       0       0       0       0
  5268 ;;      Totals:         7       0       0       0       0
  5269 ;;Total ram usage:        7 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_ISR
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           
  5279                           ;psect for function ___lbmod
  5280  0000'                    ___lbmod:	
  5281                           
  5282                           ;incstack = 0
  5283                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5284                           ;___lbmod@dividend stored from wreg
  5285  0000' 0084'              	movwf	___lbmod@dividend
  5286  0001' 3008               	movlw	8
  5287  0002' 0081'              	movwf	??___lbmod
  5288  0003' 0801'              	movf	??___lbmod,w
  5289  0004' 0085'              	movwf	___lbmod@counter
  5290  0005' 0186'              	clrf	___lbmod@rem
  5291  0006'                    i1l1989:	
  5292  0006' 0804'              	movf	___lbmod@dividend,w
  5293  0007' 0081'              	movwf	??___lbmod
  5294  0008' 3007               	movlw	7
  5295  0009'                    u279_25:	
  5296  0009' 1003               	clrc
  5297  000A' 0C81'              	rrf	??___lbmod,f
  5298  000B' 3EFF               	addlw	-1
  5299  000C' 1D03               	skipz
  5300  000D' 2800'              	goto	u279_25
  5301  000E' 0806'              	movf	___lbmod@rem,w
  5302  000F' 0082'              	movwf	??___lbmod+1
  5303  0010' 0702'              	addwf	??___lbmod+1,w
  5304  0011' 0401'              	iorwf	??___lbmod,w
  5305  0012' 0083'              	movwf	??___lbmod+2
  5306  0013' 0803'              	movf	??___lbmod+2,w
  5307  0014' 0086'              	movwf	___lbmod@rem
  5308  0015' 1003               	clrc
  5309  0016' 0D84'              	rlf	___lbmod@dividend,f
  5310  0017' 0800'              	movf	___lbmod@divisor,w
  5311  0018' 0206'              	subwf	___lbmod@rem,w
  5312  0019' 1C03               	skipc
  5313  001A' 2800'              	goto	i1l429
  5314  001B' 0800'              	movf	___lbmod@divisor,w
  5315  001C' 0286'              	subwf	___lbmod@rem,f
  5316  001D'                    i1l429:	
  5317  001D' 3001               	movlw	1
  5318  001E' 0285'              	subwf	___lbmod@counter,f
  5319  001F' 1D03               	btfss	3,2
  5320  0020' 2800'              	goto	i1l1989
  5321  0021' 0806'              	movf	___lbmod@rem,w
  5322  0022' 0008               	return
  5323  0023'                    __end_of___lbmod:	
  5324                           
  5325                           	psect	text24
  5326  0000'                    __ptext24:	
  5327 ;; *************** function ___awmod *****************
  5328 ;; Defined at:
  5329 ;;		line 6 in file "F:\Installed Programs\MCUs\Microchip\xc8\sources\common\awmod.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  divisor         2    0[COMMON] int 
  5332 ;;  dividend        2    2[COMMON] int 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  sign            1    6[COMMON] unsigned char 
  5335 ;;  counter         1    5[COMMON] unsigned char 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  2    0[COMMON] int 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5345 ;;      Params:         4       0       0       0       0
  5346 ;;      Locals:         2       0       0       0       0
  5347 ;;      Temps:          1       0       0       0       0
  5348 ;;      Totals:         7       0       0       0       0
  5349 ;;Total ram usage:        7 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_ISR
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function ___awmod
  5360  0000'                    ___awmod:	
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5364  0000' 0186'              	clrf	___awmod@sign
  5365  0001' 1F83'              	btfss	___awmod@dividend+1,7
  5366  0002' 2800'              	goto	i1l1955
  5367  0003' 0982'              	comf	___awmod@dividend,f
  5368  0004' 0983'              	comf	___awmod@dividend+1,f
  5369  0005' 0A82'              	incf	___awmod@dividend,f
  5370  0006' 1903               	skipnz
  5371  0007' 0A83'              	incf	___awmod@dividend+1,f
  5372  0008' 0186'              	clrf	___awmod@sign
  5373  0009' 0A86'              	incf	___awmod@sign,f
  5374  000A'                    i1l1955:	
  5375  000A' 1F81'              	btfss	___awmod@divisor+1,7
  5376  000B' 2800'              	goto	i1l1959
  5377  000C' 0980'              	comf	___awmod@divisor,f
  5378  000D' 0981'              	comf	___awmod@divisor+1,f
  5379  000E' 0A80'              	incf	___awmod@divisor,f
  5380  000F' 1903               	skipnz
  5381  0010' 0A81'              	incf	___awmod@divisor+1,f
  5382  0011'                    i1l1959:	
  5383  0011' 0800'              	movf	___awmod@divisor,w
  5384  0012' 0401'              	iorwf	___awmod@divisor+1,w
  5385  0013' 1903               	btfsc	3,2
  5386  0014' 2800'              	goto	i1l1977
  5387  0015' 0185'              	clrf	___awmod@counter
  5388  0016' 0A85'              	incf	___awmod@counter,f
  5389  0017'                    i1l1967:	
  5390  0017' 1B81'              	btfsc	___awmod@divisor+1,7
  5391  0018' 2800'              	goto	i1l1969
  5392  0019' 3001               	movlw	1
  5393  001A'                    u273_25:	
  5394  001A' 1003               	clrc
  5395  001B' 0D80'              	rlf	___awmod@divisor,f
  5396  001C' 0D81'              	rlf	___awmod@divisor+1,f
  5397  001D' 3EFF               	addlw	-1
  5398  001E' 1D03               	skipz
  5399  001F' 2800'              	goto	u273_25
  5400  0020' 3001               	movlw	1
  5401  0021' 0084'              	movwf	??___awmod
  5402  0022' 0804'              	movf	??___awmod,w
  5403  0023' 0785'              	addwf	___awmod@counter,f
  5404  0024' 2800'              	goto	i1l1967
  5405  0025'                    i1l1969:	
  5406  0025' 0801'              	movf	___awmod@divisor+1,w
  5407  0026' 0203'              	subwf	___awmod@dividend+1,w
  5408  0027' 1D03               	skipz
  5409  0028' 2800'              	goto	u275_25
  5410  0029' 0800'              	movf	___awmod@divisor,w
  5411  002A' 0202'              	subwf	___awmod@dividend,w
  5412  002B'                    u275_25:	
  5413  002B' 1C03               	skipc
  5414  002C' 2800'              	goto	i1l1973
  5415  002D' 0800'              	movf	___awmod@divisor,w
  5416  002E' 0282'              	subwf	___awmod@dividend,f
  5417  002F' 0801'              	movf	___awmod@divisor+1,w
  5418  0030' 1C03               	skipc
  5419  0031' 0383'              	decf	___awmod@dividend+1,f
  5420  0032' 0283'              	subwf	___awmod@dividend+1,f
  5421  0033'                    i1l1973:	
  5422  0033' 3001               	movlw	1
  5423  0034'                    u276_25:	
  5424  0034' 1003               	clrc
  5425  0035' 0C81'              	rrf	___awmod@divisor+1,f
  5426  0036' 0C80'              	rrf	___awmod@divisor,f
  5427  0037' 3EFF               	addlw	-1
  5428  0038' 1D03               	skipz
  5429  0039' 2800'              	goto	u276_25
  5430  003A' 3001               	movlw	1
  5431  003B' 0285'              	subwf	___awmod@counter,f
  5432  003C' 1D03               	btfss	3,2
  5433  003D' 2800'              	goto	i1l1969
  5434  003E'                    i1l1977:	
  5435  003E' 0806'              	movf	___awmod@sign,w
  5436  003F' 1903               	btfsc	3,2
  5437  0040' 2800'              	goto	i1l1981
  5438  0041' 0982'              	comf	___awmod@dividend,f
  5439  0042' 0983'              	comf	___awmod@dividend+1,f
  5440  0043' 0A82'              	incf	___awmod@dividend,f
  5441  0044' 1903               	skipnz
  5442  0045' 0A83'              	incf	___awmod@dividend+1,f
  5443  0046'                    i1l1981:	
  5444  0046' 0803'              	movf	___awmod@dividend+1,w
  5445  0047' 0081'              	movwf	?___awmod+1
  5446  0048' 0802'              	movf	___awmod@dividend,w
  5447  0049' 0080'              	movwf	?___awmod
  5448  004A' 0008               	return
  5449  004B'                    __end_of___awmod:	
  5450  007E                     btemp	set	126	;btemp
  5451  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     46      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ring_buffer_get$1	PTR void  size(1) Largest target is 1
		 -> ISR@data1(BANK1[1]), 

    ring_buffer_put$1	PTR const void  size(1) Largest target is 10
		 -> uartRxData(BANK1[10]), 

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _pow->___fttol
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    _exp->___fttol
    _floor->___fttol
    ___altoft->___fttol
    ___ftmul->___awtoft
    ___ftsub->___awtoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    _eval_poly->___ftmul
    ___ftmul->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_pow

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                 29    29      0   65214
                                             17 BANK1     29    29      0
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___lbmod
                             ___wmul
                      _disableTimer1
                              _endTX
                                _pow
                    _ring_buffer_get
                    _ring_buffer_put
               _ring_buffer_put_char
                          _timerTick
 ---------------------------------------------------------------------------------
 (2) _timerTick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ring_buffer_put                                      3     0      3      80
 ---------------------------------------------------------------------------------
 (2) _ring_buffer_get                                      3     0      3      20
 ---------------------------------------------------------------------------------
 (2) _pow                                                 18    12      6   52556
                                             78 BANK0      1     1      0
                                              0 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     3      3   16757
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 13    10      3   28842
                                             65 BANK0     13    10      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                               10     5      5    1725
                                             55 BANK0     10     5      5
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     257
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (4) _floor                                                9     6      3    7478
                                             29 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     436
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     411
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___ftge                                              12     6      6    1090
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                             8     4      4    1976
                                              0 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     4      6    6744
                                             45 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2827
                                             29 BANK0     16    10      6
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     160
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    3434
                                             29 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3261
                                             16 BANK0     13     7      6
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2277
                                              0 BANK0     16    10      6
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2141
                                              8 COMMON     6     3      3
                            ___awmod (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1907
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _endTX                                                1     1      0     180
                                              0 COMMON     1     1      0
               _ring_buffer_put_char
 ---------------------------------------------------------------------------------
 (2) _ring_buffer_put_char                                 3     0      3     180
 ---------------------------------------------------------------------------------
 (2) _disableTimer1                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     698
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              7     6      1     212
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awmod
   ___awtoft
     ___awmod (ARG)
     ___ftpack (ARG)
   ___ftadd
     ___awmod (ARG)
     ___awtoft (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
     ___bmul (ARG)
     ___ftdiv (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awmod (ARG)
     ___awtoft (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awmod (ARG)
     ___awtoft (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
     ___ftadd (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
       ___bmul (ARG)
       ___ftdiv (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___lbmod
   ___wmul
   _disableTimer1
   _endTX
     _ring_buffer_put_char
   _pow
     ___ftge
     ___ftmul
       ___awmod (ARG)
       ___awtoft (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
       ___ftadd (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___bmul (ARG)
         ___ftdiv (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___awmod (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
       _eval_poly
         ___bmul
         ___ftadd
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___ftadd
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___fttol
         _frexp
       _ldexp
         ___ftge
         ___ftneg
         _eval_poly (ARG)
           ___bmul
           ___ftadd
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___bmul (ARG)
               ___ftdiv (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
           ___ftadd
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftmul
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___bmul (ARG)
               ___ftdiv (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log
       ___awtoft
         ___awmod (ARG)
         ___ftpack (ARG)
       ___ftadd
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___bmul (ARG)
         ___ftdiv (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
         ___ftadd
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___bmul (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftmul
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___bmul (ARG)
             ___ftdiv (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _ring_buffer_get
   _ring_buffer_put
   _ring_buffer_put_char
   _timerTick

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      98       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      3B       7       73.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      98      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Apr 27 03:16:26 2019

           ___altoft@exp 0006                        pc 0002           ___bmul@product 0002  
            __CFG_CP$OFF 0000            ___altoft@sign 0007                       l73 0000  
                     fsr 0004      ___wmul@multiplicand 0002             ___ftadd@exp1 001C  
           ___ftadd@exp2 001B             ___ftadd@sign 001A             __CFG_CPD$OFF 0000  
                    _ISR 0000                      _exp 0000                      _log 0000  
                    _pow 0000                      fsr0 0004                      indf 0000  
           ___awmod@sign 0006             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0000             ___ftdiv@cntr 000A                     ISR@i 002A  
           ___ftdiv@sign 000F                     ?_exp 0041                     ?_log 0037  
                   ?_pow 0000                     _CREN 00C4                     _RCIF 0065  
                   i1l62 0315                     i1l63 0312                     i1l66 0325  
                   _OERR 00C1                     _TXEN 04C5                     _TXIF 0064  
           __CFG_WRT$OFF 0000                     _main 0000             ___ftpack@arg 0000  
           ___ftpack@exp 0003                     btemp 007E                     exp@x 0041  
                   log@x 0037                     pow@x 0000                     pow@y 0003  
                   start 0000*       ___bmul@multiplier 0003             ___ftmul@cntr 002B  
           ___ftmul@sign 002C                    ??_ISR 0011             ___fttol@exp1 000D  
                  ??_exp 0044                    ??_log 003A             ___fttol@lval 0009  
                  ??_pow 004E                    ?_main 0000          __end_of___ftadd 0109  
          __CFG_WDTE$OFF 0000          __end_of___awmod 004B          __end_of___lbmod 0023  
        __end_of___ftdiv 00B8          __end_of___ftneg 0008          __end_of___ftmul 00D3  
        __end_of___ftsub 0021          __end_of___fttol 008C                    i1l160 000A  
                  i1l321 0036                    i1l412 0072                    i1l328 004B  
                  i1l352 00A8                    i1l329 0053                    i1l524 0021  
                  i1l429 001D                    _RCREG 001A                    _TXREG 0019  
           ___lltoft@exp 000D                    _mAttr 0000*           ___awtoft@sign 000D  
                  _endTX 0000                    _floor 0000                    _ldexp 0000  
                  _frexp 0000                    _errno 0000         ?_ring_buffer_get 0000  
          ___ftpack@sign 0004         ?_ring_buffer_put 0000           __CFG_BOREN$OFF 0000  
                  pclath 000A                    pow@yi 000D                    status 0003  
                  wtemp0 007E              exp@exponent 004B              ldexp@newexp 003A  
        __initialization 0000              log@exponent 003B             __end_of_main 0001  
                 ??_main 0000            ___fttol@sign1 0008                   ?_endTX 0000  
                 ?_floor 001D                   ?_ldexp 0037                   ?_frexp 0000  
       __end_of___altoft 0042         __end_of___awtoft 0021         __end_of___ftpack 006C  
       __end_of___lltoft 002B                   i1l2011 0011                   i1l2103 02E7  
                 i1l2015 001B                   i1l1401 003B                   i1l2105 02F6  
                 i1l1403 0045                   i1l2051 020A                   i1l1501 00CC  
                 i1l1421 0008                   i1l2029 00A0                   i1l1511 00EF  
                 i1l2055 0212                   i1l1417 0002                   i1l1441 0028  
                 u200_21 0041                   i1l2073 0249                   u200_22 0042  
                 i1l1451 0029                   u200_23 0047                   i1l1523 004E  
                 i1l2083 02B1                   u200_24 0048                   i1l1701 0092  
                 i1l1461 003F                   i1l1541 0018                   i1l2085 02C4  
                 i1l1391 000F                   i1l1455 0030                   i1l1439 0016  
                 i1l1519 0027                   i1l1631 0083                   i1l2087 02C8  
                 i1l1393 001B                   i1l1481 007A                   i1l1473 0059  
                 i1l1713 0009                   i1l1625 0067                   i1l1617 004A  
                 i1l1395 0020                   i1l1387 0008                   i1l1491 0098  
                 i1l1483 007F                   i1l1571 0095                   i1l1563 007D  
                 i1l1547 002E                   i1l1627 0075                   i1l1619 005A  
                 i1l1643 0012                   i1l1731 003A                   i1l2099 02DB  
                 i1l1805 0004                   i1l1493 00A4                   i1l1485 0083  
                 i1l1741 0090                   i1l1807 0016                   i1l1663 000A  
                 i1l1479 006E                   i1l1575 00A5                   i1l1559 006D  
                 i1l1751 0072                   i1l1727 0031                   i1l1823 003A  
                 i1l1911 0086                   i1l1903 0036                   i1l1673 0018  
                 i1l1497 00BA                   i1l1761 000E                   i1l1817 0024  
                 i1l1771 0037                   i1l1915 00A2                   i1l1693 0073  
                 i1l1861 0086                   i1l1935 0002                   i1l1679 002E  
                 i1l1599 0018                   i1l1791 0077                   i1l1855 0053  
                 i1l1839 000E                   i1l1849 002F                   i1l1955 000A  
                 i1l1795 0080                   i1l1883 012F                   i1l1981 0046  
                 i1l1973 0033                   i1l1967 0017                   i1l1959 0011  
                 i1l1969 0025                   i1l1977 003E                   i1l1897 002A  
                 i1l1989 0006                   u204_25 003A                   u213_25 00A6  
                 u205_25 004C                   u221_25 004B                   u214_25 00AE  
                 u231_25 0040                   u160_25 002F                   u232_25 0052  
                 u208_25 007E                   u224_25 0069                   u233_25 0074  
                 u209_25 0086                   u162_25 003E                   u234_25 0085  
                 u218_25 001F                   u235_25 0093                   u171_25 001B  
                 u245_25 0040                   u254_20 006A                   u166_25 005A  
                 u158_25 0014                   u182_25 005A                   u255_20 006B  
                 u247_25 0009                   u191_25 0099                   u263_25 0079  
                 u273_25 001A                   u185_25 006F                   u258_25 0126  
                 u275_25 002B                   u267_25 000B                   u291_25 006E  
                 u276_25 0034                   u268_25 0012                   u188_25 0084  
                 u292_25 00A3                   u293_25 01D9                   u198_21 001A  
                 u198_22 001B                   u198_23 0020                   u198_24 0021  
                 u279_25 0009                   u289_25 0031                   u298_25 022F  
                 _TMR1IF 0060           __CFG_PWRTE$OFF 0000                   ___bmul 0000  
                 ___ftge 0000                   ___wmul 0000                ??___ftadd 0016  
              ??___awmod 0004                ??___lbmod 0001                ??___ftdiv 0006  
              ??___ftneg 0003                ??___ftmul 0023                ??___ftsub 000E  
              ??___fttol 0004                   _uIndex 0002          ___awmod@divisor 0000  
        ___awmod@counter 0005                   floor@i 0021                   floor@x 001D  
  ___ftmul@f3_as_product 0028                   saved_w 007E         __end_ofexp@coeff 0024  
       __end_oflog@coeff 003F          ___lbmod@divisor 0000  __end_of__initialization 000F  
             ___altoft@c 0000          ___lbmod@counter 0005               ___ftadd@f1 0010  
             ___ftadd@f2 0013               ___ftge@ff1 0000               ___ftge@ff2 0003  
           eval_poly@res 0034               ___ftdiv@f1 0003               ___ftdiv@f2 0000  
             ___ftdiv@f3 000B               ___ftneg@f1 0000               ___awtoft@c 0008  
    ___bmul@multiplicand 0000               ___ftmul@f1 001D               ___ftmul@f2 0020  
             ___ftsub@f1 0020               ___ftsub@f2 001D               ___fttol@f1 0000  
         __pcstackCOMMON 0000            __end_of_endTX 0012               ___lltoft@c 0008  
          __end_of_floor 0099            __end_of_ldexp 0099            __end_of_frexp 0040  
            ISR@received 002D                  ??_endTX 0000                  ??_floor 0020  
                ??_ldexp 003C                  ??_frexp 0004               __pbssBANK1 0000  
     __size_of_eval_poly 0079               __pmaintext 0000                  ?___bmul 0000  
                ?___ftge 0000                  ?___wmul 0000               __pintentry 0000  
              ?___altoft 0000                ?___awtoft 0008                ?___ftpack 0000  
              ?___lltoft 0008                  _ISR$566 0023                  _ISR$567 0026  
             __stringtab 0000          __size_of___bmul 0011          __size_of___ftge 005D  
                ___ftadd 0000                  ___awmod 0000                  ___lbmod 0000  
                ___ftdiv 0000                  ___ftneg 0000          __size_of___wmul 0021  
                ___ftmul 0000                  ___ftsub 0000                  ___fttol 0000  
             ??___altoft 0004                  _exp$361 0048                  _exp$570 0045  
             ??___awtoft 000B               ??___ftpack 0005        __end_of_eval_poly 0079  
             ??___lltoft 000C                  __ptext1 0000                  __ptext2 0000  
                __ptext3 0000                  __ptext4 0000                  __ptext5 0000  
                __ptext6 0000                  __ptext7 0000                  __ptext8 0000  
                __ptext9 0000                  _pow$568 0006                  _pow$569 0009  
      _ring_buffer_get$0 0000        _ring_buffer_get$1 0002             __size_of_ISR 0336  
           __size_of_exp 0147             __size_of_log 00CE        _ring_buffer_put$0 0000  
      _ring_buffer_put$1 0002             __size_of_pow 0140         ___awmod@dividend 0002  
   _ring_buffer_put_char 0000*    end_of_initialization 000F                  exp@sign 004D  
                pow@sign 000C               _uartRxData 0003         ___lbmod@dividend 0004  
  ?_ring_buffer_put_char 0000              ___lbmod@rem 0006              ___ftdiv@exp 000E  
            ___ftmul@exp 0027           __end_of___bmul 0011           __end_of___ftge 005D  
         __end_of___wmul 0021               floor@expon 0024      start_initialization 0000  
             eval_poly@d 0030               eval_poly@n 0031               eval_poly@x 002D  
            __end_of_ISR 0336               ldexp@value 0037              __end_of_exp 0147  
            __end_of_log 00CE              __end_of_pow 0140               frexp@value 0000  
               ??___bmul 0001                 ??___ftge 0006                 ??___wmul 0004  
      ??_ring_buffer_get 0000        ??_ring_buffer_put 0000        __size_of___altoft 0042  
      __size_of___awtoft 0021        __size_of___ftpack 006C        __size_of___lltoft 002B  
              ___latbits 0002            __pcstackBANK0 0000            __pcstackBANK1 0000  
          __pcstackBANK3 0000   ??_ring_buffer_put_char 0000               ISR@motorId 002C  
               ISR@data1 0029                 ?___ftadd 0010                 ?___awmod 0000  
               ?___lbmod 0000                 ?___ftdiv 0000                 ?___ftneg 0000  
               ?___ftmul 001D                 ?___ftsub 001D                 ?___fttol 0000  
              __pstrings 0000                _ldexp$398 003E                _eval_poly 0000  
         __size_of_endTX 0012           __size_of_floor 0099           __size_of_ldexp 0099  
         __size_of_frexp 0040        interrupt_function 0000           ___wmul@product 0004  
              _timerTick 0000*             __stringbase 0005        ___wmul@multiplier 0000  
 _ring_buffer_put_char$0 0000   _ring_buffer_put_char$1 0002               ?_eval_poly 002D  
              frexp@eptr 0003               ?_timerTick 0000            _disableTimer1 0000* 
       __size_of___ftadd 0109         __size_of___awmod 004B         __size_of___lbmod 0023  
       __size_of___ftdiv 00B8         __size_of___ftneg 0008                 ___altoft 0000  
       __size_of___ftmul 00D3         __size_of___ftsub 0021         __size_of___fttol 008C  
               ___awtoft 0000                 ___ftpack 0000       __end_of__stringtab 0006  
               ___lltoft 0000                 __ptext10 0000                 __ptext11 0000  
               __ptext20 0000                 __ptext12 0000                 __ptext21 0000  
               __ptext13 0000                 __ptext22 0000                 __ptext14 0000  
               __ptext23 0000                 __ptext15 0000                 __ptext24 0000  
               __ptext16 0000                 __ptext17 0000                 __ptext18 0000  
               __ptext19 0000            __size_of_main 0001          _ring_buffer_get 0000* 
        _ring_buffer_put 0000*          ?_disableTimer1 0000                 exp@coeff 0006  
               log@coeff 0024              ??_eval_poly 0033                 intlevel1 0000* 
              stringcode 0000              ??_timerTick 0000                 stringdir 0000  
               stringtab 0000          ??_disableTimer1 0000  
